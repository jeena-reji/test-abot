name: Python Code Scan and Docker Build

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version for the Docker image (e.g. v1.0.0)'
        required: true

  push:
    branches: [ main ]
  pull_request:

env:
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  SONAR_HOST_URL: http://your-sonarqube-server-url
  SONAR_PROJECT_KEY: your-project-key
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GHCR_USERNAME: ${{ secrets.GHUSER }}
  GHCR_TOKEN: ${{ secrets.GHPASS }}
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  scan-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true

      - name: Run Pylint
        run: |
          pip install pylint
          pylint **/*.py || true

      - name: Run Snyk scan (Python)
        uses: snyk/actions/python@v1.12.0
        with:
          args: test --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run SonarQube scan (Python only)
        uses: SonarSource/sonarqube-scan-action@v1.2
        with:
          args: >
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.sources=.
            -Dsonar.inclusions=**/*.py
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
            -Dsonar.login=${{ env.SONAR_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:${{ github.event.inputs.release_version }} .

      - name: Log in to GitHub Container Registry
        run: echo "${{ env.GHPASS}}" | docker login ghcr.io -u ${{ env.GHUSER }} --password-stdin

      - name: ðŸš€ Push Docker image
        run: docker push $IMAGE_NAME:${{ github.event.inputs.release_version }}
