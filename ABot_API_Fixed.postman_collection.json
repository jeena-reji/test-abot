{
  "info": {
    "_postman_id": "50f3a528-7dcf-4101-89da-996fd76f0902",
    "name": "ABot API TechM",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "18899920"
  },
  "item": [
    {
      "name": "1. User Token",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"email\": \"admin\",\r\n    \"password\": \"admin1234\",\r\n    \"expires\": false\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/login",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "login"
          ]
        }
      },
      "response": [
        {
          "name": "1. User Token",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"admin\",\r\n    \"password\": \"admin1234\",\r\n    \"expires\": false\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/login",
              "protocol": "http",
              "host": [
                "{{abot_endpoint}}"
              ],
              "path": [
                "abotrest",
                "abot",
                "api",
                "v5",
                "login"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "key": "Date",
              "value": "Mon, 17 Jul 2023 07:25:18 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "804"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "jwt-token",
              "value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY4OTU3ODcxOCwianRpIjoiZTU1NjJlMGYtNmYwZi00NTliLWJkN2EtMTAzYzA2NjdjMjBkIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6eyJlbWFpbCI6ImFkbWluIiwicGFzc3dvcmQiOiJhZG1pbjEyMzQiLCJleHBpcmVzIjpmYWxzZX0sIm5iZiI6MTY4OTU3ODcxOH0.EwrO9xKwVaZhtDrMKHbgaNIEI_vLzy1whwGoDvZDzy4"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,Authorization"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,PUT,POST,DELETE,OPTIONS"
            }
          ],
          "cookie": [],
          "body": "{\n    \"ok\": true,\n    \"data\": {\n        \"firstname\": \"Admin\",\n        \"company\": \"Rebaca\",\n        \"email\": \"admin\",\n        \"user_type\": \"admin\",\n        \"user_id\": \"admin\",\n        \"lastname\": \"Abot\",\n        \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY4OTU3ODcxOCwianRpIjoiZTU1NjJlMGYtNmYwZi00NTliLWJkN2EtMTAzYzA2NjdjMjBkIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6eyJlbWFpbCI6ImFkbWluIiwicGFzc3dvcmQiOiJhZG1pbjEyMzQiLCJleHBpcmVzIjpmYWxzZX0sIm5iZiI6MTY4OTU3ODcxOH0.EwrO9xKwVaZhtDrMKHbgaNIEI_vLzy1whwGoDvZDzy4\",\n        \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY4OTU3ODcxOCwianRpIjoiNjdjZDgxY2YtNGIwZC00MmI1LTgwNjktZGY2ZDc0MTA1OTg0IiwidHlwZSI6InJlZnJlc2giLCJzdWIiOnsiZW1haWwiOiJhZG1pbiIsInBhc3N3b3JkIjoiYWRtaW4xMjM0IiwiZXhwaXJlcyI6ZmFsc2V9LCJuYmYiOjE2ODk1Nzg3MTgsImV4cCI6MTY4OTY2NTExOH0.G6NpMwuZKQU8Ztchn6BsNHZ41cvXGi7I_QK-WidWJQ8\"\n    }\n}"
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "var json = pm.response.json();",
              "pm.collectionVariables.set(\"userToken\", json.data.token);"
            ]
          }
        }
      ]
    },
    {
      "name": "2. Feature File List",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/feature_files",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "feature_files"
          ]
        }
      },
      "response": [
        {
          "name": "2. Feature File List",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/feature_files",
              "protocol": "http",
              "host": [
                "{{abot_endpoint}}"
              ],
              "path": [
                "abotrest",
                "abot",
                "api",
                "v5",
                "feature_files"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "key": "Date",
              "value": "Mon, 17 Jul 2023 07:26:20 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "870"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,Authorization"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,PUT,POST,DELETE,OPTIONS"
            }
          ],
          "cookie": [],
          "body": "{\n    \"status\": \"OK\",\n    \"tree_list\": [\n        {\n            \"label\": \"000-local-commands.feature\",\n            \"key\": \"000-local-commands.feature\",\n            \"id\": \"role5\",\n            \"class\": \"ext_feature\",\n            \"has_children\": false,\n            \"isCustom\": false\n        },\n        {\n            \"label\": \"001-ssh-commands.feature\",\n            \"key\": \"001-ssh-commands.feature\",\n            \"id\": \"role1\",\n            \"class\": \"ext_feature\",\n            \"has_children\": false,\n            \"isCustom\": false\n        },\n        {\n            \"label\": \"002-sftp-commands.feature\",\n            \"key\": \"002-sftp-commands.feature\",\n            \"id\": \"role2\",\n            \"class\": \"ext_feature\",\n            \"has_children\": false,\n            \"isCustom\": false\n        },\n        {\n            \"label\": \"3GPP-23401-4G\",\n            \"key\": \"3GPP-23401-4G\",\n            \"id\": \"role3\",\n            \"collapsed\": \"true\",\n            \"has_children\": true,\n            \"isCustom\": false\n        },\n        {\n            \"label\": \"3GPP-23502-5G\",\n            \"key\": \"3GPP-23502-5G\",\n            \"id\": \"role6\",\n            \"collapsed\": \"true\",\n            \"has_children\": true,\n            \"isCustom\": false\n        },\n        {\n            \"label\": \"3GPP-38401-5G-ORAN\",\n            \"key\": \"3GPP-38401-5G-ORAN\",\n            \"id\": \"role4\",\n            \"collapsed\": \"true\",\n            \"has_children\": true,\n            \"isCustom\": false\n        }\n    ],\n    \"user_base_dir_prefix\": \"featureFiles/admin\"\n}"
        }
      ]
    },
    {
      "name": "2.1 Feature File Path",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/feature_files_path?search_path=3GPP-23401-4G",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "feature_files_path"
          ],
          "query": [
            {
              "key": "search_path",
              "value": "3GPP-23401-4G"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "2.2 Feature File Tags",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/feature_files_tags",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "feature_files_tags"
          ]
        }
      },
      "response": []
    },
    {
      "name": "3. Update config",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"uncomment\": [\r\n        \"ABOT.SUTVARS=file:abot-emulated/sut-vars/default.properties\"\r\n    ],\r\n    \"comment\": [\r\n        \"ABOT.SUTVARS=file:abot-emulated/sut-vars/default5g.properties\",\r\n        \"ABOT.SUTVARS=file:abot-emulated/sut-vars/default4g5g.properties\",\r\n        \"ABOT.SUTVARS.ORAN=file:abot-emulated/sut-vars/default5g-oran.properties\"\r\n    ],\r\n    \"update\": {}\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/update_config_properties?filename=\"/etc/rebaca-test-suite/config/admin/ABotConfig.properties\"",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "update_config_properties"
          ],
          "query": [
            {
              "key": "filename",
              "value": "\"/etc/rebaca-test-suite/config/admin/ABotConfig.properties\""
            }
          ]
        }
      },
      "response": [
        {
          "name": "3. Update config",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"uncomment\": [\r\n        \"ABOT.SUTVARS=file:abot-emulated/sut-vars/default.properties\"\r\n    ],\r\n    \"comment\": [\r\n        \"ABOT.SUTVARS=file:abot-emulated/sut-vars/default5g.properties\",\r\n        \"ABOT.SUTVARS=file:abot-emulated/sut-vars/default4g5g.properties\",\r\n        \"ABOT.SUTVARS.ORAN=file:abot-emulated/sut-vars/default5g-oran.properties\"\r\n    ],\r\n    \"update\": {}\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/update_config_properties?filename=\"/etc/rebaca-test-suite/config/{{user_id}}/ABotConfig.properties\"",
              "protocol": "http",
              "host": [
                "{{abot_endpoint}}"
              ],
              "path": [
                "abotrest",
                "abot",
                "api",
                "v5",
                "update_config_properties"
              ],
              "query": [
                {
                  "key": "filename",
                  "value": "\"/etc/rebaca-test-suite/config/{{user_id}}/ABotConfig.properties\""
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "key": "Date",
              "value": "Mon, 17 Jul 2023 07:30:53 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "49"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,Authorization"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,PUT,POST,DELETE,OPTIONS"
            }
          ],
          "cookie": [],
          "body": "{\n    \"Status\": \"OK\",\n    \"StatusMessage\": \"Updated config\"\n}"
        }
      ]
    },
    {
      "name": "4. Execute featurefile",
      "protocolProfileBehavior": {
        "strictSSL": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"params\": \"initial-attach-test\"\r\n}"
        },
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/feature_files/execute",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "feature_files",
            "execute"
          ]
        }
      },
      "response": [
        {
          "name": "4. Execute featurefile",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"params\": \"initial-attach-test\"\r\n}"
            },
            "url": {
              "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/feature_files/execute",
              "protocol": "http",
              "host": [
                "{{abot_endpoint}}"
              ],
              "path": [
                "abotrest",
                "abot",
                "api",
                "v5",
                "feature_files",
                "execute"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "key": "Date",
              "value": "Mon, 17 Jul 2023 07:33:15 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "52"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,Authorization"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,PUT,POST,DELETE,OPTIONS"
            }
          ],
          "cookie": [],
          "body": "{\n    \"status\": \"OK\",\n    \"error_list\": [],\n    \"lic_expired\": false\n}"
        }
      ]
    },
    {
      "name": "5. Execution status",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/execution_status",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "execution_status"
          ]
        }
      },
      "response": [
        {
          "name": "5. Execution status",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/execution_status",
              "protocol": "http",
              "host": [
                "{{abot_endpoint}}"
              ],
              "path": [
                "abotrest",
                "abot",
                "api",
                "v5",
                "execution_status"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "key": "Date",
              "value": "Mon, 17 Jul 2023 07:35:15 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "475"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,Authorization"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,PUT,POST,DELETE,OPTIONS"
            }
          ],
          "cookie": [],
          "body": "{\n    \"executing\": {\n        \"status\": false,\n        \"exec_is_valid\": true,\n        \"is_exec_functional\": true,\n        \"is_exec_video\": false,\n        \"is_exec_parallel\": false,\n        \"executing\": [\n            {\n                \"name\": \"@initial-attach-test\",\n                \"id\": \"\",\n                \"logURL\": \"http://192.168.40.76/abotfrontail_9001\",\n                \"is_executing\": false,\n                \"log_path\": \"\"\n            }\n        ],\n        \"execution_status\": [\n            {\n                \"name\": \"Bringing up test bed\",\n                \"status\": 1\n            },\n            {\n                \"name\": \"Initial_Attach.feature\",\n                \"status\": 1\n            },\n            {\n                \"name\": \"Bringing down test bed\",\n                \"status\": 1\n            },\n            {\n                \"name\": \"execution completed\",\n                \"status\": 1\n            }\n        ]\n    },\n    \"status\": false\n}"
        }
      ]
    },
    {
      "name": "6. Latest artifact name",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/latest_artifact_name",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "latest_artifact_name"
          ]
        }
      },
      "response": [
        {
          "name": "6. Latest artifact name",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/latest_artifact_name",
              "protocol": "http",
              "host": [
                "{{abot_endpoint}}"
              ],
              "path": [
                "abotrest",
                "abot",
                "api",
                "v5",
                "latest_artifact_name"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "key": "Date",
              "value": "Mon, 17 Jul 2023 07:36:58 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "251"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,Authorization"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,PUT,POST,DELETE,OPTIONS"
            }
          ],
          "cookie": [],
          "body": "{\n    \"data\": {\n        \"latest_artifact_timestamp\": \"17Jul2023-07:34:48.096650@initial-attach-test\",\n        \"artifact_urls\": [\n            \"http://192.168.40.76/abot/#/artifacts/dashboard/features/all-emulated/default-build/17Jul2023-07:34:48.096650@initial-attach-test\"\n        ]\n    },\n    \"status\": \"OK\"\n}"
        }
      ]
    },
    {
      "name": "7. Execution summary",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/artifacts/execFeatureSummary?foldername=17Jul2023-07:34:48.096650@initial-attach-test&page=1&limit=9998",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "artifacts",
            "execFeatureSummary"
          ],
          "query": [
            {
              "key": "foldername",
              "value": "17Jul2023-07:34:48.096650@initial-attach-test"
            },
            {
              "key": "page",
              "value": "1"
            },
            {
              "key": "limit",
              "value": "9998"
            }
          ]
        }
      },
      "response": [
        {
          "name": "7. Execution summary",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/artifacts/execFeatureSummary?foldername=17Jul2023-07:34:48.096650@initial-attach-test&page=1&limit=9998",
              "protocol": "http",
              "host": [
                "{{abot_endpoint}}"
              ],
              "path": [
                "abotrest",
                "abot",
                "api",
                "v5",
                "artifacts",
                "execFeatureSummary"
              ],
              "query": [
                {
                  "key": "foldername",
                  "value": "17Jul2023-07:34:48.096650@initial-attach-test"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "9998"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "key": "Date",
              "value": "Mon, 17 Jul 2023 07:39:33 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "1618"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,Authorization"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,PUT,POST,DELETE,OPTIONS"
            }
          ],
          "cookie": [],
          "body": "{\n    \"status\": \"OK\",\n    \"feature_summary\": {\n        \"result\": {\n            \"artifactId\": \"17Jul2023-07:34:48.096650@initial-attach-test\",\n            \"data\": [\n                {\n                    \"featureName\": \"Initial_Attach.feature\",\n                    \"featureId\": \"Initial_Attach.feature\",\n                    \"Log_process\": \"Waiting\",\n                    \"parentFeatureName\": \"\",\n                    \"passed_with_Error\": false,\n                    \"scenarioName\": \"Initial Attach with IMSI and PDN Connectivity Request\",\n                    \"load\": {\n                        \"UEs\": 1,\n                        \"Concurrency\": 1\n                    },\n                    \"totalUEPassFail\": {},\n                    \"steps\": {\n                        \"passed\": 64,\n                        \"failed\": 0,\n                        \"skipped\": 0,\n                        \"total\": 64\n                    },\n                    \"scenario\": {\n                        \"passed\": 1,\n                        \"failed\": 0,\n                        \"total\": 1\n                    },\n                    \"features\": {\n                        \"duration\": 10.557623386383057,\n                        \"status\": \"passed\"\n                    }\n                }\n            ],\n            \"totalSteps\": {\n                \"totalStepsPassed\": {\n                    \"totalStepsPassedNumber\": 64,\n                    \"totalStepsPassedPercentage\": 100\n                },\n                \"totalStepsFailed\": {\n                    \"totalStepsFailedNumber\": 0,\n                    \"totalStepsFailedPercentage\": 0\n                },\n                \"totalStepsSkipped\": {\n                    \"totalStepsSkippedNumber\": 0,\n                    \"totalStepsSkippedPercentage\": 0\n                },\n                \"totalStepsPending\": {\n                    \"totalStepsPendingNumber\": 0,\n                    \"totalStepsPendingPercentage\": 0\n                },\n                \"totalStepsUndefined\": {\n                    \"totalStepsUndefinedNumber\": 0,\n                    \"totalStepsUndefinedPercentage\": 0\n                },\n                \"totalStepsTotal\": {\n                    \"totalStepsTotalNumber\": 64,\n                    \"totalStepsTotalPercentage\": 100\n                }\n            },\n            \"totalScenarios\": {\n                \"totalScenariosPassed\": {\n                    \"totalScenariosPassedNumber\": 1,\n                    \"totalScenariosPassedPercentage\": 100\n                },\n                \"totalScenariosFailed\": {\n                    \"totalScenariosFailedNumber\": 0,\n                    \"totalScenariosFailedPercentage\": 0\n                },\n                \"totalScenariosTotal\": {\n                    \"totalScenariosTotalNumber\": 1,\n                    \"totalScenariosTotalPercentage\": 100\n                }\n            },\n            \"totalFeatures\": {\n                \"totalFeaturesduration\": {\n                    \"totalFeaturesdurationNumber\": 10.557623386383057,\n                    \"totalFeaturesdurationPercentage\": 100\n                },\n                \"totalFeaturesstatus\": {\n                    \"totalFeaturesstatusNumber\": 1,\n                    \"totalFeaturesstatusPercentage\": 100\n                }\n            },\n            \"totalNoOfFeatureFiles\": 1\n        }\n    }\n}"
        }
      ]
    },
    {
      "name": "8. Vendor key",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/rca/buildVendorList",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "rca",
            "buildVendorList"
          ]
        }
      },
      "response": [
        {
          "name": "8. Vendor key",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/rca/buildVendorList",
              "protocol": "http",
              "host": [
                "{{abot_endpoint}}"
              ],
              "path": [
                "abotrest",
                "abot",
                "api",
                "v5",
                "rca",
                "buildVendorList"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "key": "Date",
              "value": "Mon, 17 Jul 2023 07:41:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "5883"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,Authorization"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,PUT,POST,DELETE,OPTIONS"
            }
          ],
          "cookie": [],
          "body": "{\n    \"status\": 1,\n    \"statusMessage\": \"OK\",\n    \"isCloud\": false,\n    \"data\": [\n        {\n            \"buildName\": \"abot-build-20230711-08-37-49-584\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-08-37-49-584\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-16-11-27-542\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-16-11-27-542\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-08-21-17-519\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-08-21-17-519\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-12-56-44-059\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-12-56-44-059\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-11-45-13-367\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-11-45-13-367\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"default-build\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"default-build\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230710-15-33-45-427\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230710-15-33-45-427\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230710-18-28-34-061\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230710-18-28-34-061\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230710-18-43-56-701\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230710-18-43-56-701\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-09-31-50-596\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-09-31-50-596\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-11-16-48-958\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-11-16-48-958\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-11-27-15-991\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-11-27-15-991\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230710-16-20-42-995\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230710-16-20-42-995\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230710-17-28-08-430\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230710-17-28-08-430\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230710-18-05-14-297\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230710-18-05-14-297\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230710-18-37-00-348\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230710-18-37-00-348\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-08-12-38-694\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-08-12-38-694\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-11-06-31-733\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-11-06-31-733\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-11-12-04-268\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-11-12-04-268\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-11-55-30-019\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-11-55-30-019\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-12-30-48-032\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-12-30-48-032\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-12-45-48-535\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-12-45-48-535\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-16-11-27-542-Unit-Test\",\n            \"vendorName\": \"sipp\",\n            \"vendorKeys\": [\n                \"5f6f217f-b9f6-4f8d-a2ee-0afe94558a28\"\n            ]\n        },\n        {\n            \"buildName\": \"abot-build-20230711-16-11-27-542-Unit-Test\",\n            \"vendorName\": \"all-emulated\",\n            \"vendorKeys\": [\n                \"d015aaeb-e939-4dba-ae2f-71986e0ee210\"\n            ]\n        }\n    ]\n}"
        }
      ]
    },
    {
      "name": "9. Execution Pass/Fail result",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/rca/execFeatureSummary?buildId=default-build&vendorKeys=d015aaeb-e939-4dba-ae2f-71986e0ee210&accessTypes=5G%252C4G%252CORAN&loadState=0,1&executionType=0",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "rca",
            "execFeatureSummary"
          ],
          "query": [
            {
              "key": "buildId",
              "value": "default-build"
            },
            {
              "key": "vendorKeys",
              "value": "d015aaeb-e939-4dba-ae2f-71986e0ee210"
            },
            {
              "key": "accessTypes",
              "value": "5G%252C4G%252CORAN"
            },
            {
              "key": "loadState",
              "value": "0,1"
            },
            {
              "key": "executionType",
              "value": "0"
            }
          ]
        }
      },
      "response": [
        {
          "name": "9. Execution Pass/Fail result",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/rca/execFeatureSummary?buildId=default-build&vendorKeys=d015aaeb-e939-4dba-ae2f-71986e0ee210&accessTypes=5G%252C4G%252CORAN&loadState=0,1&executionType=0",
              "protocol": "http",
              "host": [
                "{{abot_endpoint}}"
              ],
              "path": [
                "abotrest",
                "abot",
                "api",
                "v5",
                "rca",
                "execFeatureSummary"
              ],
              "query": [
                {
                  "key": "buildId",
                  "value": "default-build"
                },
                {
                  "key": "vendorKeys",
                  "value": "d015aaeb-e939-4dba-ae2f-71986e0ee210"
                },
                {
                  "key": "accessTypes",
                  "value": "5G%252C4G%252CORAN"
                },
                {
                  "key": "loadState",
                  "value": "0,1"
                },
                {
                  "key": "executionType",
                  "value": "0"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "key": "Date",
              "value": "Mon, 17 Jul 2023 07:47:24 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "748"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,Authorization"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,PUT,POST,DELETE,OPTIONS"
            }
          ],
          "cookie": [],
          "body": "{\n    \"status\": 1,\n    \"statusMessage\": \"OK\",\n    \"data\": {\n        \"total\": 3,\n        \"passed\": 3,\n        \"failed\": 0,\n        \"passedPercentage\": \"100%\",\n        \"failedPercentage\": \"0%\",\n        \"details\": {\n            \"passed\": [\n                {\n                    \"featureFileName\": \"Initial_Attach.feature\",\n                    \"timestamp\": 1689003070084,\n                    \"buildName\": \"default-build\",\n                    \"artefactName\": \"10Jul2023-15:31:07.874162@initial-attach-test\",\n                    \"vendors\": [\n                        \"sipp\",\n                        \"all-emulated\"\n                    ]\n                },\n                {\n                    \"featureFileName\": \"Initial_Attach.feature\",\n                    \"timestamp\": 1689579230419,\n                    \"buildName\": \"default-build\",\n                    \"artefactName\": \"17Jul2023-07:33:48.203834@initial-attach-test\",\n                    \"vendors\": [\n                        \"sipp\",\n                        \"all-emulated\"\n                    ]\n                },\n                {\n                    \"featureFileName\": \"Initial_Attach.feature\",\n                    \"timestamp\": 1689579290300,\n                    \"buildName\": \"default-build\",\n                    \"artefactName\": \"17Jul2023-07:34:48.096650@initial-attach-test\",\n                    \"vendors\": [\n                        \"sipp\",\n                        \"all-emulated\"\n                    ]\n                }\n            ],\n            \"failed\": []\n        }\n    }\n}"
        }
      ]
    },
    {
      "name": "10. Failure Stats/Log",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/artifacts/execFailureDetails?foldername=17Jul2023-07:34:48.096650@initial-attach-test",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "artifacts",
            "execFailureDetails"
          ],
          "query": [
            {
              "key": "foldername",
              "value": "17Jul2023-07:34:48.096650@initial-attach-test"
            }
          ]
        }
      },
      "response": [
        {
          "name": "10. Failure Stats/Log",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/artifacts/execFailureDetails?foldername=17Jul2023-07:34:48.096650@initial-attach-test",
              "protocol": "http",
              "host": [
                "{{abot_endpoint}}"
              ],
              "path": [
                "abotrest",
                "abot",
                "api",
                "v5",
                "artifacts",
                "execFailureDetails"
              ],
              "query": [
                {
                  "key": "foldername",
                  "value": "17Jul2023-07:34:48.096650@initial-attach-test"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "key": "Date",
              "value": "Mon, 17 Jul 2023 07:51:35 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "36"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,Authorization"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,PUT,POST,DELETE,OPTIONS"
            }
          ],
          "cookie": [],
          "body": "{\n    \"status\": \"OK\",\n    \"failureDetails\": []\n}"
        }
      ]
    },
    {
      "name": "11. Get all Tags & FF contents",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/files?path=featureFiles/admin/3GPP-23401-4G/02.Attach_procedure_for_EPS_services/Initial_Attach.feature",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "files"
          ],
          "query": [
            {
              "key": "path",
              "value": "featureFiles/admin/3GPP-23401-4G/02.Attach_procedure_for_EPS_services/Initial_Attach.feature"
            }
          ]
        }
      },
      "response": [
        {
          "name": "11. Get all Tags & FF contents",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/files?path=featureFiles/{{user_id}}/3GPP-23401-4G/02.Attach_procedure_for_EPS_services/Initial_Attach.feature",
              "protocol": "http",
              "host": [
                "{{abot_endpoint}}"
              ],
              "path": [
                "abotrest",
                "abot",
                "api",
                "v5",
                "files"
              ],
              "query": [
                {
                  "key": "path",
                  "value": "featureFiles/{{user_id}}/3GPP-23401-4G/02.Attach_procedure_for_EPS_services/Initial_Attach.feature"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "key": "Date",
              "value": "Mon, 17 Jul 2023 07:53:52 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "187552"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,Authorization"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,PUT,POST,DELETE,OPTIONS"
            }
          ],
          "cookie": [],
          "body": "{\n    \"status\": \"OK\",\n    \"result\": {\n        \"file\": \"/var/lib/abot-volte-pro/featureFiles/admin/3GPP-23401-4G/02.Attach_procedure_for_EPS_services/Initial_Attach.feature\",\n        \"mime\": \"text/plain\",\n        \"message\": \"\",\n        \"message_css\": \"\",\n        \"download\": \"<div class=\\\"\\\"><a class=\\\"btn-download btn btn-lg btn-primary\\\" href=\\\"/var/lib/abot-volte-pro/featureFiles/admin/3GPP-23401-4G/02.Attach_procedure_for_EPS_services/Initial_Attach.feature\\\" target=\\\"_blank\\\"><i class=\\\"glyphicon glyphicon-download-alt\\\"></i> Download</a></div>\",\n        \"showDownload\": false,\n        \"containerScroll\": true,\n        \"content\": \"@initial-attach-test @2-attach-procedure-for-eps-services @23401-4g @4g-core-sanity @4g-core\\n\\nFeature: Attach procedure for EPS services\\n\\n  Scenario: Initial Attach with IMSI and PDN Connectivity Request\\n\\n    Given the steps below will be executed at the end\\n    When I run the SSH command {abotprop.SUT.DEFAULT.MME.CONFIG} at node MME1\\n    When I run the SSH command {abotprop.SUT.DEFAULT.ENB.CONFIG} at node eNodeB1\\n    When I run the SSH command {abotprop.SUT.DEFAULT.SGW.CONFIG} at node SGW1\\n    When I run the SSH command {abotprop.SUT.DEFAULT.PGW.CONFIG} at node PGW1\\n    When I run the SSH command {abotprop.SUT.DEFAULT.HSS.CONFIG} at node HSS1\\n    When I run the SSH command {abotprop.SUT.DEFAULT.PCRF.CONFIG} at node PCRF1\\n    Then the ending steps are complete\\n\\n    Given the test data is in file /featureFiles/MESSAGE_BUNDLES/EPC_MESSAGES.xml\\n\\n    When I run the SSH command {abotprop.SUT.CUSTOM.MME.CONFIG} and pause for {abotprop.WAIT_5_SEC} seconds at node MME1\\n    When I run the SSH command {abotprop.SUT.CUSTOM.ENB.CONFIG} and pause for {abotprop.WAIT_5_SEC} seconds at node eNodeB1\\n    When I run the SSH command {abotprop.SUT.CUSTOM.SGW.CONFIG} and pause for {abotprop.WAIT_5_SEC} seconds at node SGW1\\n    When I run the SSH command {abotprop.SUT.CUSTOM.PGW.CONFIG} and pause for {abotprop.WAIT_5_SEC} seconds at node PGW1\\n    When I run the SSH command {abotprop.SUT.CUSTOM.HSS.CONFIG} and pause for {abotprop.WAIT_5_SEC} seconds at node HSS1\\n    When I run the SSH command {abotprop.SUT.CUSTOM.PCRF.CONFIG} and pause for {abotprop.WAIT_5_SEC} seconds at node PCRF1\\n\\n    Given all configured endpoints for EPC are connected successfully\\n    \\n    Given I setup load scenario on interface S1-MME,S5-S8,S11,S6A,GX with the following parameters:\\n      | parameter              | value                  |\\n      | switch                 | {abotprop.LOAD_SWITCH} |\\n      | call_model             | initial-attach         |\\n      | num_subscribers        | 6                      |\\n      | concurrency            | 2                      |\\n      | load_percentage_factor | 100                    |\\n\\n### Capex - MME/HSS\\n\\n    When I send DIAMETER message DIA_CAPABILITIES_EXCHANGE_REQUEST on interface S6A with the following details from node MME1 to HSS1:\\n      | parameter                                          | value                                 |\\n      | Hop-by-Hop Identifier                              | 1                                     |\\n      | End-to-End Identifier                              | 2                                     |\\n      | Origin-Host                                        | {abotprop.SUT.S6A.CAPEX.ORIGIN.HOST}  |\\n      | Origin-Realm                                       | {abotprop.SUT.S6A.CAPEX.ORIGIN.REALM} |\\n      | Origin-State-Id                                    | 1562601028                            |\\n      | Host-IP-Address                                    | {abotprop.ABOT.SecureShell.IPAddress} |\\n      | Vendor-Id                                          | 0                                     |\\n      | Product-Name                                       | Diameter                              |\\n      | Firmware-Revision                                  | {abotprop.SUT.DIA.FIRM.REV}           |\\n      | Inband-Security-Id                                 | 1                                     |\\n      | Vendor-Specific-Application-Id.Vendor-Id           | {abotprop.SUT.3GPP.VENDOR.ID}         |\\n      | Vendor-Specific-Application-Id.Auth-Application-Id | {abotprop.SUT.3GPP.S6A.APPID}         |\\n      | Supported-Vendor-Id                                | {abotprop.SUT.3GPP.VENDOR.ID}         |\\n\\n### Capex - PCRF/PGW\\n\\n    When I send DIAMETER message DIA_CAPABILITIES_EXCHANGE_REQUEST on interface GX with the following details from node PCRF1 to PGW1:\\n      | parameter                                          | value                                  |\\n      | Hop-by-Hop Identifier                              | 123                                    |\\n      | End-to-End Identifier                              | 456                                    |\\n      | Origin-Host                                        | {abotprop.SUT.GX.CAPEX.ORIGIN.HOST}    |\\n      | Origin-Realm                                       | {abotprop.SUT.GX.CAPEX.ORIGIN.REALM}   |\\n      | Origin-State-Id                                    | 1584110503                             |\\n      | Host-IP-Address                                    | {abotprop.SUT.GX.CAPEX.ORIGIN.HOST.IP} |\\n      | Vendor-Id                                          | 0                                      |\\n      | Product-Name                                       | {abotprop.SUT.PRODUCT.NAME}            |\\n      | Firmware-Revision                                  | {abotprop.SUT.DIA.FIRM.REV}            |\\n      | Inband-Security-Id                                 | 0                                      |\\n      | Vendor-Specific-Application-Id.Vendor-Id           | {abotprop.SUT.3GPP.VENDOR.ID}          |\\n      | Vendor-Specific-Application-Id.Auth-Application-Id | {abotprop.SUT.3GPP.GX.APPID}           |\\n      | Supported-Vendor-Id                                | {abotprop.SUT.3GPP.VENDOR.ID}          |\\n\\n### S1 Setup\\nWhen I send S1AP message S1_SETUP_REQ on interface S1-MME with the following details from node eNodeB1 to MME1:\\n      | parameter                                                | value                               |\\n      | global_enb_id.plmn_identity.mcc                          | {abotprop.SUT.MCC}                  |\\n      | global_enb_id.plmn_identity.mnc                          | {abotprop.SUT.MNC}                  |\\n      | global_enb_id.macro_enb_id                               | {abotprop.SUT.GLOBAL.MACRO.ENB1.ID} |\\n      | enb_name                                                 | {abotprop.SUT.ENB.NAME}             |\\n      | supported_tas_list.0.tac                                 | {abotprop.SUT.TAC}                  |\\n      | supported_tas_list.0.broadcast_plmns.0.plmn_identity.mcc | {abotprop.SUT.MCC}                  |\\n      | supported_tas_list.0.broadcast_plmns.0.plmn_identity.mnc | {abotprop.SUT.MNC}                  |\\n      | paging_drx                                               | {abotprop.SUT.PAGING.DRX}           |\\n\\n    Then I receive and validate S1AP message S1_SETUP_REQ on interface S1-MME with the following details on node MME1 from eNodeB1:\\n      | parameter                                                | value                                            |\\n      | global_enb_id.plmn_identity.mcc                          | {integer:eq}({abotprop.SUT.MCC})                 |\\n      | global_enb_id.plmn_identity.mnc                          | {integer:eq}({abotprop.SUT.MNC})                 |\\n      | global_enb_id.macro_enb_id                               | {string:eq}({abotprop.SUT.GLOBAL.MACRO.ENB1.ID}) |\\n      | enb_name                                                 | {string:eq}({abotprop.SUT.ENB.NAME})             |\\n      | supported_tas_list.0.tac                                 | {integer:eq}({abotprop.SUT.TAC})                 |\\n      | supported_tas_list.0.broadcast_plmns.0.plmn_identity.mcc | {integer:eq}({abotprop.SUT.MCC})                 |\\n      | supported_tas_list.0.broadcast_plmns.0.plmn_identity.mnc | {integer:eq}({abotprop.SUT.MNC})                 |\\n      | paging_drx                                               | {string:eq}({abotprop.SUT.PAGING.DRX})           |\\n\\n    When I send S1AP message S1_SETUP_RES on interface S1-MME with the following details from node MME1 to eNodeB1:\\n      | parameter                                              | value                                      |\\n      | served_gummeis_list.0.served_plmns.0.plmn_identity.mcc | {abotprop.SUT.MCC}                         |\\n      | served_gummeis_list.0.served_plmns.0.plmn_identity.mnc | {abotprop.SUT.MNC}                         |\\n      | served_gummeis_list.0.served_group_ids.0.mme_group_id  | {abotprop.SUT.MME.GROUP.ID}                |\\n      | served_gummeis_list.0.served_mmecs.0.mme_code          | {abotprop.SUT.MME.CODE}                    |\\n      | relative_mme_capacity                                  | {abotprop.SUT.RELATIVE.MME.CAPACITY}       |\\n      | mme_name                                               | {abotprop.SUT.MME.NAME}                    |\\n      | mme_relay_support_indicator                            | {abotprop.SUT.MME.RELAY.SUPPORT.INDICATOR} |\\n\\n    Then I receive and validate S1AP message S1_SETUP_RES on interface S1-MME with the following details on node eNodeB1 from MME1:\\n      | parameter                                              | value                                                   |\\n      | served_gummeis_list.0.served_plmns.0.plmn_identity.mcc | {integer:eq}({abotprop.SUT.MCC})                        |\\n      | served_gummeis_list.0.served_plmns.0.plmn_identity.mnc | {integer:eq}({abotprop.SUT.MNC})                        |\\n      | served_gummeis_list.0.served_group_ids.0.mme_group_id  | save(MME_GROUP_ID)                                      |\\n      | served_gummeis_list.0.served_mmecs.0.mme_code          | {string:eq}({abotprop.SUT.MME.CODE})                    |\\n      | relative_mme_capacity                                  | save(RELATIVE_MME_CAPACITY)                             |\\n      | mme_name                                               | {string:eq}({abotprop.SUT.MME.NAME})                    |\\n      | mme_relay_support_indicator                            | {string:eq}({abotprop.SUT.MME.RELAY.SUPPORT.INDICATOR}) |\\n\\n\\n##################################\\n####\\n#### Initial Attach with default EPS Bearer setup for Default APN (internet)\\n####\\n###################################\\n\\n### 4G Initial Attach with PDN Connectivity Request Message for Default Bebarer Establishment\\n\\n    When I send S1AP message S1_INIT_UE_MSG_NAS_ATTACH_REQ_PDN_CON_REQ on interface S1-MME with the following details from node eNodeB1 to MME1:\\n        \\n      | parameter                                                                        | value                                              |\\n      | enb_ue_s1ap_id                                                                   | incr({abotprop.SUT.ENB.UE.S1AP.ID.START},1)        |\\n      | nas_pdu.protocol_discriminator.emm                                               | {abotprop.SUT.NAS.PROTO.EMM}                       |\\n      | nas_pdu.security_header_type.plain                                               | {abotprop.SUT.NAS.SECURITY.HEAD.PLAIN}             |\\n      | nas_pdu.message_type.emm                                                         | {abotprop.SUT.NAS.ATTACH.REQ.MSG.EMM}              |\\n      | nas_pdu.attach_request.eps_attach_type                                           | {abotprop.SUT.NAS.ATTACH.REQ.EPS.ATTACH.TYPE}      |\\n      | nas_pdu.attach_request.type_of_security_context                                  | {abotprop.SUT.NAS.TYPE.OF.SEC.CTXT}                |\\n      | nas_pdu.attach_request.nas_key_set_identifier                                    | {abotprop.SUT.NAS.ATTACH.KEY.SET.ID}               |\\n      | nas_pdu.attach_request.eps_mobile_identity.imsi                                  | incr({abotprop.SUT.IMSI.START},1)                  |\\n      | nas_pdu.attach_request.ue_network_capability.eia                                 | {abotprop.SUT.NETWORK.CAPABILITY.EIA}              |\\n      | nas_pdu.attach_request.ue_network_capability.eea                                 | {abotprop.SUT.NETWORK.CAPABILITY.EEA}              |\\n      | nas_pdu.esm_message.protocol_discriminator.esm                                   | {abotprop.SUT.NAS.ESM.PROTO.ESM}                   |\\n      | nas_pdu.esm_message.eps_bearer_identity.esm                                      | {abotprop.SUT.NAS.ESM.EPS.BEARER.IDN.ESM}          |\\n      | nas_pdu.esm_message.pti                                                          | {abotprop.SUT.NAS.ESM.PTI}                         |\\n      | nas_pdu.esm_message.message_type.esm                                             | 0xd0                                               |\\n      | nas_pdu.esm_message.pdn_connectivity_request.request_type                        | {abotprop.SUT.NAS.ESM.PDN.CON.REQ.REQ.TYPE}        |\\n      | nas_pdu.esm_message.pdn_connectivity_request.pdn_type                            | {abotprop.SUT.NAS.ESM.PDN.CON.REQ.PDN.TYPE}        |\\n      | nas_pdu.esm_message.pdn_connectivity_request.pco.configuration_protocol          | {abotprop.SUT.NAS.ESM.PCO.CONFIG.PROTO}            |\\n      | nas_pdu.esm_message.pdn_connectivity_request.pco.num_protocol_id_or_container_id | {abotprop.SUT.NAS.ESM.PCO.CONFIG.PID.OR.CID}       |\\n      | nas_pdu.esm_message.pdn_connectivity_request.pco.protocol_contents.0.id          | {abotprop.SUT.NAS.ESM.PCO.PROTO.CONTENTS.ID}       |\\n      | nas_pdu.esm_message.pdn_connectivity_request.pco.protocol_contents.0.length      | {abotprop.SUT.NAS.ESM.PCO.PROTO.CONTENTS.LEN}      |\\n      | nas_pdu.esm_message.pdn_connectivity_request.pco.protocol_contents.0.contents    | {abotprop.SUT.NAS.ESM.PCO.PROTO.CONTENTS.CONTENTS} |\\n      | tai.plmn_identity.mcc                                                            | {abotprop.SUT.MCC}                                 |\\n      | tai.plmn_identity.mnc                                                            | {abotprop.SUT.MNC}                                 |\\n      | tai.tac                                                                          | {abotprop.SUT.TAC}                                 |\\n      | eutran_cgi.plmn_identity.mcc                                                     | {abotprop.SUT.MCC}                                 |\\n      | eutran_cgi.plmn_identity.mnc                                                     | {abotprop.SUT.MNC}                                 |\\n      | eutran_cgi.cell_id                                                               | {abotprop.SUT.CGI.CELL.ID}                         |\\n      | rrc_establishment_cause                                                          | {abotprop.SUT.RRC.ESTABLISHMENT.CAUSE}             |\\n\\n    Then I receive and validate S1AP message S1_INIT_UE_MSG_NAS_ATTACH_REQ_PDN_CON_REQ on interface S1-MME with the following details on node MME1 from eNodeB1:\\n      | parameter                                                                        | value                                                           |\\n      | enb_ue_s1ap_id                                                                   | save(ENB_UE_S1AP_ID)                                            |\\n      | nas_pdu.protocol_discriminator.emm                                               | {string:eq}({abotprop.SUT.NAS.PROTO.EMM})                       |\\n      | nas_pdu.security_header_type.plain                                               | {string:eq}({abotprop.SUT.NAS.SECURITY.HEAD.PLAIN})             |\\n      | nas_pdu.message_type.emm                                                         | {string:eq}({abotprop.SUT.NAS.ATTACH.REQ.MSG.EMM})              |\\n      | nas_pdu.attach_request.eps_attach_type                                           | {string:eq}({abotprop.SUT.NAS.ATTACH.REQ.EPS.ATTACH.TYPE})      |\\n      | nas_pdu.attach_request.type_of_security_context                                  | {string:eq}({abotprop.SUT.NAS.TYPE.OF.SEC.CTXT})                |\\n      | nas_pdu.attach_request.nas_key_set_identifier                                    | save(KEY_SET_ID)                                                |\\n      | nas_pdu.attach_request.eps_mobile_identity.imsi                                  | save(IMSI)                                                      |\\n      | nas_pdu.attach_request.ue_network_capability.eia                                 | {string:eq}({abotprop.SUT.NETWORK.CAPABILITY.EIA})              |\\n      | nas_pdu.attach_request.ue_network_capability.eea                                 | {string:eq}({abotprop.SUT.NETWORK.CAPABILITY.EEA})              |\\n      | nas_pdu.esm_message.protocol_discriminator.esm                                   | {string:eq}({abotprop.SUT.NAS.ESM.PROTO.ESM})                   |\\n      | nas_pdu.esm_message.eps_bearer_identity.esm                                      | {string:eq}({abotprop.SUT.NAS.ESM.EPS.BEARER.IDN.ESM})          |\\n      | nas_pdu.esm_message.pti                                                          | {string:eq}({abotprop.SUT.NAS.ESM.PTI})                         |\\n      | nas_pdu.esm_message.message_type.esm                                             | {string:eq}(0xd0)                                               |\\n      | nas_pdu.esm_message.pdn_connectivity_request.request_type                        | {string:eq}({abotprop.SUT.NAS.ESM.PDN.CON.REQ.REQ.TYPE})        |\\n      | nas_pdu.esm_message.pdn_connectivity_request.pdn_type                            | {string:eq}({abotprop.SUT.NAS.ESM.PDN.CON.REQ.PDN.TYPE})        |\\n      | nas_pdu.esm_message.pdn_connectivity_request.pco.configuration_protocol          | {string:eq}({abotprop.SUT.NAS.ESM.PCO.CONFIG.PROTO})            |\\n      | nas_pdu.esm_message.pdn_connectivity_request.pco.num_protocol_id_or_container_id | {string:eq}({abotprop.SUT.NAS.ESM.PCO.CONFIG.PID.OR.CID})       |\\n      | nas_pdu.esm_message.pdn_connectivity_request.pco.protocol_contents.0.id          | {string:eq}({abotprop.SUT.NAS.ESM.PCO.PROTO.CONTENTS.ID})       |\\n      | nas_pdu.esm_message.pdn_connectivity_request.pco.protocol_contents.0.length      | {string:eq}({abotprop.SUT.NAS.ESM.PCO.PROTO.CONTENTS.LEN})      |\\n      | nas_pdu.esm_message.pdn_connectivity_request.pco.protocol_contents.0.contents    | {string:eq}({abotprop.SUT.NAS.ESM.PCO.PROTO.CONTENTS.CONTENTS}) |\\n      | tai.plmn_identity.mcc                                                            | {integer:eq}({abotprop.SUT.MCC})                                |\\n      | tai.plmn_identity.mnc                                                            | {integer:eq}({abotprop.SUT.MNC})                                |\\n      | tai.tac                                                                          | {integer:eq}({abotprop.SUT.TAC})                                |\\n      | eutran_cgi.plmn_identity.mcc                                                     | {integer:eq}({abotprop.SUT.MCC})                                |\\n      | eutran_cgi.plmn_identity.mnc                                                     | {integer:eq}({abotprop.SUT.MNC})                                |\\n      | eutran_cgi.cell_id                                                               | {string:eq}({abotprop.SUT.CGI.CELL.ID})                         |\\n      | rrc_establishment_cause                                                          | {string:eq}({abotprop.SUT.RRC.ESTABLISHMENT.CAUSE})             |\\n\\n\\n\\n### Authentication and Security Context Setup Procedure\\n\\n    When I send DIAMETER message DIA_AUTHENTICATION_INFORMATION_REQUEST on interface S6A with the following details from node MME1 to HSS1:\\n      | parameter                                                         | value                                      |\\n      | Hop-by-Hop Identifier                                             | 124                                        |\\n      | End-to-End Identifier                                             | 456                                        |\\n      | Session-Id                                                        | incr({abotprop.SUT.3GPP.S6A.SESSION.ID},1) |\\n      | DRMP                                                              | {abotprop.SUT.DRMP.PRIORITY.1}             |\\n      | Vendor-Specific-Application-Id.Vendor-Id                          | {abotprop.SUT.3GPP.VENDOR.ID}              |\\n      | Vendor-Specific-Application-Id.Auth-Application-Id                | {abotprop.SUT.3GPP.S6A.APPID}              |\\n      | Vendor-Specific-Application-Id.Acct-Application-Id                | {abotprop.SUT.DIA.VEND.ACC.APP.ID}         |\\n      | Auth-Session-State                                                | {abotprop.SUT.DIA.AUTH.SESS.STATE.1}       |\\n      | Origin-Host                                                       | {abotprop.SUT.S6A.CAPEX.ORIGIN.HOST}       |\\n      | Origin-Realm                                                      | {abotprop.SUT.S6A.CAPEX.ORIGIN.REALM}      |\\n      | Destination-Host                                                  | {abotprop.SUT.S6A.CAPEX.DEST.HOST}         |\\n      | Destination-Realm                                                 | {abotprop.SUT.S6A.CAPEX.DEST.REALM}        |\\n      | User-Name                                                         | $(IMSI)                                    |\\n      | OC-Supported-Features.OC-Feature-Vector                           | 88                                         |\\n      | Supported-Features.Vendor-Id                                      | {abotprop.SUT.DIA.SUPP.FEA.VEND.ID}        |\\n      | Supported-Features.Feature-List-ID                                | {abotprop.SUT.DIA.SUP.FEA.LIS.ID}          |\\n      | Supported-Features.Feature-List                                   | 28                                         |\\n      | Requested-EUTRAN-Authentication-Info.Number-Of-Requested-Vectors  | 1                                          |\\n      | Requested-EUTRAN-Authentication-Info.Immediate-Response-Preferred | 0                                          |\\n      | Visited-PLMN-Id                                                   | {abotprop.SUT.VISITED.PLMN.ID}             |\\n\\n    Then I receive and validate DIAMETER message DIA_AUTHENTICATION_INFORMATION_REQUEST on interface S6A with the following details on node HSS1 from MME1:\\n      | parameter                                                         | value                                              |\\n      | Hop-by-Hop Identifier                                             | save(HOP_BY_HOP_ID)                                |\\n      | End-to-End Identifier                                             | save(END_TO_END_ID)                                |\\n      | Session-Id                                                        | save(DIA_SESS_ID_S6A)                              |\\n      | DRMP                                                              | {string:eq}({abotprop.SUT.DRMP.PRIORITY.1})        |\\n      | Vendor-Specific-Application-Id.Vendor-Id                          | {string:eq}({abotprop.SUT.3GPP.VENDOR.ID})         |\\n      | Vendor-Specific-Application-Id.Auth-Application-Id                | {string:eq}({abotprop.SUT.3GPP.S6A.APPID})         |\\n      | Vendor-Specific-Application-Id.Acct-Application-Id                | {string:eq}({abotprop.SUT.DIA.VEND.ACC.APP.ID})    |\\n      | Auth-Session-State                                                | {string:eq}({abotprop.SUT.DIA.AUTH.SESS.STATE.1})  |\\n      | Origin-Host                                                       | {string:eq}({abotprop.SUT.S6A.CAPEX.ORIGIN.HOST})  |\\n      | Origin-Realm                                                      | {string:eq}({abotprop.SUT.S6A.CAPEX.ORIGIN.REALM}) |\\n      | Destination-Host                                                  | {string:eq}({abotprop.SUT.S6A.CAPEX.DEST.HOST})    |\\n      | Destination-Realm                                                 | {string:eq}({abotprop.SUT.S6A.CAPEX.DEST.REALM})   |\\n      | User-Name                                                         | save(IMSI)                                         |\\n      | OC-Supported-Features.OC-Feature-Vector                           | {integer:eq}(88)                                   |\\n      | Supported-Features.Vendor-Id                                      | {string:eq}({abotprop.SUT.DIA.SUPP.FEA.VEND.ID})   |\\n      | Supported-Features.Feature-List-ID                                | {string:eq}({abotprop.SUT.DIA.SUP.FEA.LIS.ID})     |\\n      | Supported-Features.Feature-List                                   | {integer:eq}(28)                                   |\\n      | Requested-EUTRAN-Authentication-Info.Number-Of-Requested-Vectors  | {integer:eq}(1)                                    |\\n      | Requested-EUTRAN-Authentication-Info.Immediate-Response-Preferred | {integer:eq}(0)                                    |\\n      | Visited-PLMN-Id                                                   | {string:eq}({abotprop.SUT.VISITED.PLMN.ID})        |\\n\\n\\n    When I send DIAMETER message DIA_AUTHENTICATION_INFORMATION_ANSWER on interface S6A with the following details from node HSS1 to MME1:\\n    \\n      | parameter                                            | value                                      |\\n      | Hop-by-Hop Identifier                                | $(HOP_BY_HOP_ID)                           |\\n      | End-to-End Identifier                                | $(END_TO_END_ID)                           |\\n      | Session-Id                                           | $(DIA_SESS_ID_S6A)                         |\\n      | DRMP                                                 | {abotprop.SUT.DRMP.PRIORITY.1}             |\\n      | Vendor-Specific-Application-Id.Vendor-Id             | {abotprop.SUT.3GPP.VENDOR.ID}              |\\n      | Vendor-Specific-Application-Id.Auth-Application-Id   | {abotprop.SUT.3GPP.S6A.APPID}              |\\n      | Vendor-Specific-Application-Id.Acct-Application-Id   | {abotprop.SUT.DIA.VEND.ACC.APP.ID}         |\\n      | Result-Code                                          | {abotprop.SUT.3GPP.S6A.DIA_RESULT_CODE}    |\\n      | Experimental-Result.Vendor-Id                        | 0                                          |\\n      | Experimental-Result.Experimental-Result-Code         | {abotprop.SUT.DIA.EXP.RESULT.CODE}         |\\n      | Error-Diagnostic                                     | 4                                          |\\n      | Auth-Session-State                                   | {abotprop.SUT.DIA.AUTH.SESS.STATE.1}       |\\n      | Origin-Host                                          | {abotprop.SUT.S6A.CAPEX.ORIGIN.HOST}       |\\n      | Origin-Realm                                         | {abotprop.SUT.S6A.CAPEX.ORIGIN.REALM}      |\\n      | OC-Supported-Features.OC-Feature-Vector              | 88                                         |\\n      | OC-OLR.OC-Sequence-Number                            | {abotprop.SUT.OC.OLR.SEQ.NUMBER}           |\\n      | OC-OLR.OC-Report-Type                                | 1                                          |\\n      | OC-OLR.OC-Reduction-Percentage                       | {abotprop.SUT.OC.OLR.REDUCTION.PERCENTAGE} |\\n      | OC-OLR.OC-Validity-Duration                          | {abotprop.SUT.OC_OLR.VALIDITY.DURATION}    |\\n      | Supported-Features.Vendor-Id                         | {abotprop.SUT.DIA.SUPP.FEA.VEND.ID}        |\\n      | Supported-Features.Feature-List-ID                   | {abotprop.SUT.DIA.SUP.FEA.LIS.ID}          |\\n      | Supported-Features.Feature-List                      | 28                                         |\\n      | Authentication-Info.E-UTRAN-Vector.Item-Number       | 22                                         |\\n      | Authentication-Info.E-UTRAN-Vector.RAND              | {abotprop.SUT.MILENAGE.RAND}               |\\n      | Authentication-Info.E-UTRAN-Vector.XRES              | {abotprop.SUT.MILENAGE.XRES}               |\\n      | Authentication-Info.E-UTRAN-Vector.AUTN              | {abotprop.SUT.MILENAGE.AUTN}               |\\n      | Authentication-Info.E-UTRAN-Vector.KASME             | {abotprop.SUT.MILENAGE.KASME}              |\\n      | Authentication-Info.UTRAN-Vector.Item-Number         | 22                                         |\\n      | Authentication-Info.UTRAN-Vector.RAND                | {abotprop.SUT.MILENAGE.RAND}               |\\n      | Authentication-Info.UTRAN-Vector.XRES                | {abotprop.SUT.MILENAGE.XRES}               |\\n      | Authentication-Info.UTRAN-Vector.AUTN                | {abotprop.SUT.MILENAGE.AUTN}               |\\n      | Authentication-Info.UTRAN-Vector.Confidentiality-Key | {abotprop.SUT.MILENAGE.CONFIDENTIALIT-KEY} |\\n      | Authentication-Info.UTRAN-Vector.Integrity-Key       | {abotprop.SUT.MILENAGE.INTEGRITY-KEY}      |\\n\\n    Then I receive and validate DIAMETER message DIA_AUTHENTICATION_INFORMATION_ANSWER on interface S6A with the following details on node MME1 from HSS1:\\n      | parameter                                            | value                                                   |\\n      | Hop-by-Hop Identifier                                | save(HOP_BY_HOP_ID)                                     |\\n      | End-to-End Identifier                                | save(END_TO_END_ID)                                     |\\n      | Session-Id                                           | save(DIA_SESS_ID_S6A)                                   |\\n      | DRMP                                                 | {string:eq}({abotprop.SUT.DRMP.PRIORITY.1})             |\\n      | Vendor-Specific-Application-Id.Vendor-Id             | {string:eq}({abotprop.SUT.3GPP.VENDOR.ID})              |\\n      | Vendor-Specific-Application-Id.Auth-Application-Id   | {string:eq}({abotprop.SUT.3GPP.S6A.APPID})              |\\n      | Vendor-Specific-Application-Id.Acct-Application-Id   | {string:eq}({abotprop.SUT.DIA.VEND.ACC.APP.ID})         |\\n      | Result-Code                                          | {integer:eq}({abotprop.SUT.3GPP.S6A.DIA_RESULT_CODE})   |\\n      | Experimental-Result.Vendor-Id                        | {integer:eq}(0)                                         |\\n      | Experimental-Result.Experimental-Result-Code         | {string:eq}({abotprop.SUT.DIA.EXP.RESULT.CODE})         |\\n      | Error-Diagnostic                                     | {integer:eq}(4)                                         |\\n      | Auth-Session-State                                   | {string:eq}({abotprop.SUT.DIA.AUTH.SESS.STATE.1})       |\\n      | Origin-Host                                          | {string:eq}({abotprop.SUT.S6A.CAPEX.ORIGIN.HOST})       |\\n      | Origin-Realm                                         | {string:eq}({abotprop.SUT.S6A.CAPEX.ORIGIN.REALM})      |\\n      | OC-Supported-Features.OC-Feature-Vector              | {integer:eq}(88)                                        |\\n      | OC-OLR.OC-Sequence-Number                            | {string:eq}({abotprop.SUT.OC.OLR.SEQ.NUMBER})           |\\n      | OC-OLR.OC-Report-Type                                | {integer:eq}(1)                                         |\\n      | OC-OLR.OC-Reduction-Percentage                       | {string:eq}({abotprop.SUT.OC.OLR.REDUCTION.PERCENTAGE}) |\\n      | OC-OLR.OC-Validity-Duration                          | {string:eq}({abotprop.SUT.OC_OLR.VALIDITY.DURATION})    |\\n      | Supported-Features.Vendor-Id                         | {string:eq}({abotprop.SUT.DIA.SUPP.FEA.VEND.ID})        |\\n      | Supported-Features.Feature-List-ID                   | {string:eq}({abotprop.SUT.DIA.SUP.FEA.LIS.ID})          |\\n      | Supported-Features.Feature-List                      | {integer:eq}(28)                                        |\\n      | Authentication-Info.E-UTRAN-Vector.Item-Number       | {integer:eq}(22)                                        |\\n      | Authentication-Info.E-UTRAN-Vector.RAND              | {string:eq}({abotprop.SUT.MILENAGE.RAND})               |\\n      | Authentication-Info.E-UTRAN-Vector.XRES              | {string:eq}({abotprop.SUT.MILENAGE.XRES})               |\\n      | Authentication-Info.E-UTRAN-Vector.AUTN              | {string:eq}({abotprop.SUT.MILENAGE.AUTN})               |\\n      | Authentication-Info.E-UTRAN-Vector.KASME             | {string:eq}({abotprop.SUT.MILENAGE.KASME})              |\\n      | Authentication-Info.UTRAN-Vector.Item-Number         | {integer:eq}(22)                                        |\\n      | Authentication-Info.UTRAN-Vector.RAND                | {string:eq}({abotprop.SUT.MILENAGE.RAND})               |\\n      | Authentication-Info.UTRAN-Vector.XRES                | {string:eq}({abotprop.SUT.MILENAGE.XRES})               |\\n      | Authentication-Info.UTRAN-Vector.AUTN                | {string:eq}({abotprop.SUT.MILENAGE.AUTN})               |\\n      | Authentication-Info.UTRAN-Vector.Confidentiality-Key | {string:eq}({abotprop.SUT.MILENAGE.CONFIDENTIALIT-KEY}) |\\n      | Authentication-Info.UTRAN-Vector.Integrity-Key       | {string:eq}({abotprop.SUT.MILENAGE.INTEGRITY-KEY})      |\\n\\n\\n\\n    When I send S1AP message S1_DOWNLINK_NAS_AUTHENTICATION_REQ on interface S1-MME with the following details from node MME1 to eNodeB1:\\n      | parameter                                               | value                                  |\\n      | mme_ue_s1ap_id                                          | incr(92274976,1)                       |\\n      | enb_ue_s1ap_id                                          | $(ENB_UE_S1AP_ID)                      |\\n      | nas_pdu.protocol_discriminator.emm                      | {abotprop.SUT.NAS.PROTO.EMM}           |\\n      | nas_pdu.security_header_type.plain                      | {abotprop.SUT.NAS.SECURITY.HEAD.PLAIN} |\\n      | nas_pdu.message_type.emm                                | {abotprop.SUT.NAS.AUTH.REQ.MSG.EMM}    |\\n      | nas_pdu.authentication_request.type_of_security_context | {abotprop.SUT.NAS.TYPE.OF.SEC.CTXT}    |\\n      | nas_pdu.authentication_request.nas_key_set_identifier   | {abotprop.SUT.NAS.DETACH.KEY.SET.ID}   |\\n      | nas_pdu.authentication_request.RAND                     | {abotprop.SUT.MILENAGE.RAND}           |\\n      | nas_pdu.authentication_request.AUTN                     | {abotprop.SUT.MILENAGE.AUTN}           |\\n      | nas_pdu.authentication_request.AMF                      | {abotprop.SUT.MILENAGE.AMF}            |\\n      | nas_pdu.authentication_request.K                        | {abotprop.SUT.MILENAGE.K}              |\\n      | nas_pdu.authentication_request.OP                       | {abotprop.SUT.MILENAGE.OP}             |\\n      | nas_pdu.authentication_request.selected_plmn            | {abotprop.SUT.SELECTED.PLMN}           |\\n\\n    Then I receive and validate S1AP message S1_DOWNLINK_NAS_AUTHENTICATION_REQ on interface S1-MME with the following details on node eNodeB1 from MME1:\\n      | parameter                                               | value                                               |\\n      | mme_ue_s1ap_id                                          | save(MME_UE_S1AP_ID)                                |\\n      | enb_ue_s1ap_id                                          | save(ENB_UE_S1AP_ID)                                |\\n      | nas_pdu.protocol_discriminator.emm                      | {string:eq}({abotprop.SUT.NAS.PROTO.EMM})           |\\n      | nas_pdu.security_header_type.plain                      | {string:eq}({abotprop.SUT.NAS.SECURITY.HEAD.PLAIN}) |\\n      | nas_pdu.message_type.emm                                | {string:eq}({abotprop.SUT.NAS.AUTH.REQ.MSG.EMM})    |\\n      | nas_pdu.authentication_request.type_of_security_context | {string:eq}({abotprop.SUT.NAS.TYPE.OF.SEC.CTXT})    |\\n      | nas_pdu.authentication_request.nas_key_set_identifier   | save(KEY_SET_ID)                                    |\\n      | nas_pdu.authentication_request.AMF                      | {abotprop.SUT.MILENAGE.AMF}                         |\\n      | nas_pdu.authentication_request.K                        | {abotprop.SUT.MILENAGE.K}                           |\\n      | nas_pdu.authentication_request.OP                       | {abotprop.SUT.MILENAGE.OP}                          |\\n      | nas_pdu.authentication_request.selected_plmn            | {abotprop.SUT.SELECTED.PLMN}                        |\\n      | nas_pdu.authentication_request.RAND                     | save(RAND)                                          |\\n      | nas_pdu.authentication_request.AUTN                     | save(AUTN)                                          |\\n      | nas_pdu.authentication_request.authentication_status    | {string:eq}(SUCCESS)                                |\\n      | nas_pdu.authentication_request.RES                      | save(NAS_PDU_RES)                                   |\\n\\n    When I send S1AP message S1_UPLINK_NAS_AUTHENTICATION_RES on interface S1-MME with the following details from node eNodeB1 to MME1:\\n      | parameter                           | value                                  |\\n      | mme_ue_s1ap_id                      | $(MME_UE_S1AP_ID)                      |\\n      | enb_ue_s1ap_id                      | $(ENB_UE_S1AP_ID)                      |\\n      | nas_pdu.protocol_discriminator.emm  | {abotprop.SUT.NAS.PROTO.EMM}           |\\n      | nas_pdu.security_header_type.plain  | {abotprop.SUT.NAS.SECURITY.HEAD.PLAIN} |\\n      | nas_pdu.message_type.emm            | {abotprop.SUT.NAS.AUTH.RES.MSG.EMM}    |\\n      | nas_pdu.authentication_response.RES | $(NAS_PDU_RES)                         |\\n      | eutran_cgi.plmn_identity.mcc        | {abotprop.SUT.MCC}                     |\\n      | eutran_cgi.plmn_identity.mnc        | {abotprop.SUT.MNC}                     |\\n      | eutran_cgi.cell_id                  | {abotprop.SUT.CGI.CELL.ID}             |\\n      | tai.plmn_identity.mcc               | {abotprop.SUT.MCC}                     |\\n      | tai.plmn_identity.mnc               | {abotprop.SUT.MNC}                     |\\n      | tai.tac                             | {abotprop.SUT.TAC}                     |\\n\\n    Then I receive and validate S1AP message S1_UPLINK_NAS_AUTHENTICATION_RES on interface S1-MME with the following details on node MME1 from eNodeB1:\\n      | parameter                           | value                                               |\\n      | mme_ue_s1ap_id                      | save(MME_UE_S1AP_ID)                                |\\n      | enb_ue_s1ap_id                      | {string:eq}($(ENB_UE_S1AP_ID))                      |\\n      | nas_pdu.protocol_discriminator.emm  | {string:eq}({abotprop.SUT.NAS.PROTO.EMM})           |\\n      | nas_pdu.security_header_type.plain  | {string:eq}({abotprop.SUT.NAS.SECURITY.HEAD.PLAIN}) |\\n      | nas_pdu.message_type.emm            | {string:eq}({abotprop.SUT.NAS.AUTH.RES.MSG.EMM})    |\\n      | nas_pdu.authentication_response.RES | save(NAS_PDU_RES)                                   |\\n      | eutran_cgi.plmn_identity.mcc        | {integer:eq}({abotprop.SUT.MCC})                    |\\n      | eutran_cgi.plmn_identity.mnc        | {integer:eq}({abotprop.SUT.MNC})                    |\\n      | eutran_cgi.cell_id                  | {string:eq}({abotprop.SUT.CGI.CELL.ID})             |\\n      | tai.plmn_identity.mcc               | {integer:eq}({abotprop.SUT.MCC})                    |\\n      | tai.plmn_identity.mnc               | {integer:eq}({abotprop.SUT.MNC})                    |\\n      | tai.tac                             | {integer:eq}({abotprop.SUT.TAC})                    |\\n\\n\\n\\n    When I send S1AP message S1_DOWNLINK_NAS_SECURITY_MODE_CMD on interface S1-MME with the following details from node MME1 to eNodeB1:\\n      | parameter                                                 | value                                  |\\n      | mme_ue_s1ap_id                                            | $(MME_UE_S1AP_ID)                      |\\n      | enb_ue_s1ap_id                                            | $(ENB_UE_S1AP_ID)                      |\\n      | nas_pdu.protocol_discriminator.emm                        | {abotprop.SUT.NAS.PROTO.EMM}           |\\n      | nas_pdu.security_header_protocol_discriminator            | {abotprop.SUT.SECURITY_HEADER_PD}      |\\n      | nas_pdu.security_header_type.plain                        | {abotprop.SUT.NAS.SECURITY.HEAD.PLAIN} |\\n      | nas_pdu.message_type.emm                                  | {abotprop.SUT.NAS.SEC.MOD.CMD.MSG.EMM} |\\n      | nas_pdu.security_header_type.protected                    | {abotprop.SUT.NAS.SECURITY.HEAD.EPS.INT.PROTECTED} |\\n      | nas_pdu.message_authentication_code                       | {abotprop.SUT.NAS.AUTH.CODE}           |\\n      | nas_pdu.sequence_number                                   | {abotprop.SUT.NAS.MME.SEQ.NO.OFFSET}   |\\n      | nas_pdu.security_mode_command.nas_security_algorithms.eea | {abotprop.SUT.SECURITY.ALGO.EEA}       |\\n      | nas_pdu.security_mode_command.nas_security_algorithms.eia | {abotprop.SUT.SECURITY.ALGO.EIA}       |\\n      | nas_pdu.security_mode_command.ue_security_capability.eia  | {abotprop.SUT.SECURITY.CAPABILITY.EIA} |\\n      | nas_pdu.security_mode_command.ue_security_capability.eea  | {abotprop.SUT.SECURITY.CAPABILITY.EEA} |\\n      | nas_pdu.security_mode_command.nas_key_set_identifier      | 0                                      | \\n      | nas_pdu.security_mode_command.type_of_security_context    | {abotprop.SUT.NAS.TYPE.OF.SEC.CTXT}    |\\n\\n    Then I receive and validate S1AP message S1_DOWNLINK_NAS_SECURITY_MODE_CMD on interface S1-MME with the following details on node eNodeB1 from MME1:\\n      | parameter                                                 | value                                               |\\n      | mme_ue_s1ap_id                                            | {string:eq}($(MME_UE_S1AP_ID))                      |\\n      | enb_ue_s1ap_id                                            | {string:eq}($(ENB_UE_S1AP_ID))                      |\\n      | nas_pdu.protocol_discriminator.emm                        | {string:eq}({abotprop.SUT.NAS.PROTO.EMM})           |\\n      | nas_pdu.security_header_protocol_discriminator            | {string:eq}({abotprop.SUT.SECURITY_HEADER_PD})      |\\n      | nas_pdu.security_header_type.plain                        | {string:eq}({abotprop.SUT.NAS.SECURITY.HEAD.PLAIN}) |\\n      | nas_pdu.message_type.emm                                  | {string:eq}({abotprop.SUT.NAS.SEC.MOD.CMD.MSG.EMM}) |\\n      | nas_pdu.security_header_type.protected                    | {string:eq}({abotprop.SUT.NAS.SECURITY.HEAD.EPS.INT.PROTECTED}) |\\n      | nas_pdu.message_authentication_code                       | save(MAC)                                           |\\n      | nas_pdu.sequence_number                                   | save(NAS_MME_SEQ_NO)                                |\\n      | nas_pdu.security_mode_command.nas_security_algorithms.eea | {integer:eq}({abotprop.SUT.SECURITY.ALGO.EEA})      |\\n      | nas_pdu.security_mode_command.nas_security_algorithms.eia | {integer:eq}({abotprop.SUT.SECURITY.ALGO.EIA})      |\\n      | nas_pdu.security_mode_command.ue_security_capability.eia  | {string:eq}({abotprop.SUT.SECURITY.CAPABILITY.EIA}) |\\n      | nas_pdu.security_mode_command.ue_security_capability.eea  | {string:eq}({abotprop.SUT.SECURITY.CAPABILITY.EEA}) |\\n      | nas_pdu.security_mode_command.nas_key_set_identifier      | save(KEY_SET_ID)                                    |\\n      | nas_pdu.security_mode_command.type_of_security_context    | {string:eq}({abotprop.SUT.NAS.TYPE.OF.SEC.CTXT})    |\\n\\n    When I send S1AP message S1_UPLINK_NAS_SECURITY_MODE_COMPLETE on interface S1-MME with the following details from node eNodeB1 to MME1:\\n    \\n      | parameter                                      | value                                  |\\n      | mme_ue_s1ap_id                                 | $(MME_UE_S1AP_ID)                      |\\n      | enb_ue_s1ap_id                                 | $(ENB_UE_S1AP_ID)                      |\\n      | nas_pdu.protocol_discriminator.emm             | {abotprop.SUT.NAS.PROTO.EMM}           |\\n      | nas_pdu.security_header_protocol_discriminator | {abotprop.SUT.SECURITY_HEADER_PD}      |\\n      | nas_pdu.security_header_type.plain             | {abotprop.SUT.NAS.SECURITY.HEAD.PLAIN} |\\n      | nas_pdu.message_type.emm                       | {abotprop.SUT.NAS.SEC.MOD.COM.MSG.EMM} |\\n      | nas_pdu.security_header_type.protected         | {abotprop.SUT.NAS.SECURITY.HEAD.EPS.PROTECTED} |\\n      | nas_pdu.sequence_number                        | {abotprop.SUT.NAS.UE.SEQ.NO.OFFSET}    |\\n      | eutran_cgi.plmn_identity.mcc                   | {abotprop.SUT.MCC}                     |\\n      | eutran_cgi.plmn_identity.mnc                   | {abotprop.SUT.MNC}                     |\\n      | eutran_cgi.cell_id                             | {abotprop.SUT.CGI.CELL.ID}             |\\n      | tai.plmn_identity.mcc                          | {abotprop.SUT.MCC}                     |\\n      | tai.plmn_identity.mnc                          | {abotprop.SUT.MNC}                     |\\n      | tai.tac                                        | {abotprop.SUT.TAC}                     |\\n\\n    Then I receive and validate S1AP message S1_UPLINK_NAS_SECURITY_MODE_COMPLETE on interface S1-MME with the following details on node MME1 from eNodeB1:\\n      | parameter                                      | value                                               |\\n      | mme_ue_s1ap_id                                 | {string:eq}($(MME_UE_S1AP_ID))                      |\\n      | enb_ue_s1ap_id                                 | {string:eq}($(ENB_UE_S1AP_ID))                      |\\n      | nas_pdu.protocol_discriminator.emm             | {string:eq}({abotprop.SUT.NAS.PROTO.EMM})           |\\n      | nas_pdu.security_header_protocol_discriminator | {string:eq}({abotprop.SUT.SECURITY_HEADER_PD})      |\\n      | nas_pdu.security_header_type.plain             | {string:eq}({abotprop.SUT.NAS.SECURITY.HEAD.PLAIN}) |\\n      | nas_pdu.message_type.emm                       | {string:eq}({abotprop.SUT.NAS.SEC.MOD.COM.MSG.EMM}) |\\n      | nas_pdu.security_header_type.protected         | {string:eq}({abotprop.SUT.NAS.SECURITY.HEAD.EPS.PROTECTED}) |\\n      | nas_pdu.sequence_number                        | save(NAS_UE_SEQ_NO)                                 |\\n      | eutran_cgi.plmn_identity.mcc                   | {integer:eq}({abotprop.SUT.MCC})                    |\\n      | eutran_cgi.plmn_identity.mnc                   | {integer:eq}({abotprop.SUT.MNC})                    |\\n      | eutran_cgi.cell_id                             | {string:eq}({abotprop.SUT.CGI.CELL.ID})             |\\n      | tai.plmn_identity.mcc                          | {integer:eq}({abotprop.SUT.MCC})                    |\\n      | tai.plmn_identity.mnc                          | {integer:eq}({abotprop.SUT.MNC})                    |\\n      | tai.tac                                        | {string:eq}({abotprop.SUT.TAC})                     |\\n\\n\\n\\n\\n\\n### Retrieve UE Subscription Data from HSS\\n\\n    When I send DIAMETER message DIA_UPDATE_LOCATION_REQUEST on interface S6A with the following details from node MME1 to HSS1:\\n    \\n      | parameter                             | value                                                |\\n      | Hop-by-Hop Identifier                 | 125                                                  |\\n      | End-to-End Identifier                 | 456                                                  |\\n      | Session-Id                            | $(DIA_SESS_ID_S6A)                                   |\\n      | Auth-Session-State                    | {abotprop.SUT.DIA.AUTH.SESS.STATE.1}                 |\\n      | Origin-Host                           | {abotprop.SUT.S6A.CAPEX.ORIGIN.HOST}                 |\\n      | Origin-Realm                          | {abotprop.SUT.S6A.CAPEX.ORIGIN.REALM}                |\\n      | Destination-Host                      | {abotprop.SUT.S6A.CAPEX.DEST.HOST}                   |\\n      | Destination-Realm                     | {abotprop.SUT.S6A.CAPEX.DEST.REALM}                  |\\n      | User-Name                             | $(IMSI)                                              |\\n      | Visited-PLMN-Id                       | {abotprop.SUT.VISITED.PLMN.ID}                       |\\n      | RAT-Type                              | {abotprop.SUT.RAT.TYPE}                              |\\n      | ULR-Flags                             | 34                                                   |\\n      | Terminal-Information.IMEI             | incr({abotprop.SUT.IMEI.START},1)                    |\\n      | Terminal-Information.Software-Version | {abotprop.SUT.TERMINAL.INFORMATION.SOFTWARE.VERSION} |\\n\\n    Then I receive and validate DIAMETER message DIA_UPDATE_LOCATION_REQUEST on interface S6A with the following details on node HSS1 from MME1:\\n      | parameter                             | value                                                             |\\n      | Hop-by-Hop Identifier                 | save(HOP_BY_HOP_ID)                                               |\\n      | End-to-End Identifier                 | save(END_TO_END_ID)                                               |\\n      | Session-Id                            | {string:eq}($(DIA_SESS_ID_S6A))                                   |\\n      | Auth-Session-State                    | {string:eq}({abotprop.SUT.DIA.AUTH.SESS.STATE.1})                 |\\n      | Origin-Host                           | {string:eq}({abotprop.SUT.S6A.CAPEX.ORIGIN.HOST})                 |\\n      | Origin-Realm                          | {string:eq}({abotprop.SUT.S6A.CAPEX.ORIGIN.REALM})                |\\n      | Destination-Host                      | {string:eq}({abotprop.SUT.S6A.CAPEX.DEST.HOST})                   |\\n      | Destination-Realm                     | {string:eq}({abotprop.SUT.S6A.CAPEX.DEST.REALM})                  |\\n      | User-Name                             | save(IMSI)                                                        |\\n      | Visited-PLMN-Id                       | {string:eq}({abotprop.SUT.VISITED.PLMN.ID})                       |\\n      | RAT-Type                              | {string:eq}({abotprop.SUT.RAT.TYPE})                                                |\\n      | ULR-Flags                             | {integer:eq}(34)                                                  |\\n      | Terminal-Information.IMEI             | save(IMEI)                                                        |\\n      | Terminal-Information.Software-Version | {string:eq}({abotprop.SUT.TERMINAL.INFORMATION.SOFTWARE.VERSION}) |\\n\\n    When I send DIAMETER message DIA_UPDATE_LOCATION_ANSWER on interface S6A with the following details from node HSS1 to MME1:\\n      | parameter                                                                                                                                        | value                                             |\\n      | Hop-by-Hop Identifier                                                                                                                            | $(HOP_BY_HOP_ID)                                  |\\n      | End-to-End Identifier                                                                                                                            | $(END_TO_END_ID)                                  |\\n      | Session-Id                                                                                                                                       | $(DIA_SESS_ID_S6A)                                |\\n      | ULA-Flags                                                                                                                                        | 1                                                 |\\n      | Subscription-Data.MSISDN                                                                                                                         | {abotprop.SUT.MSISDN.START}                       |\\n      | Subscription-Data.Access-Restriction-Data                                                                                                        | 47                                                |\\n      | Subscription-Data.Subscriber-Status                                                                                                              | 0                                                 |\\n      | Subscription-Data.Network-Access-Mode                                                                                                            | 2                                                 |\\n      | Subscription-Data.APN-OI-Replacement                                                                                                             | mnc001.mcc001.3gppnetwork.org                     |\\n      | Subscription-Data.AMBR.Max-Requested-Bandwidth-UL                                                                                                | {abotprop.SUT.UE.AMBR.UL}                         |\\n      | Subscription-Data.AMBR.Max-Requested-Bandwidth-DL                                                                                                | {abotprop.SUT.UE.AMBR.DL}                         |\\n      | Subscription-Data.APN-Configuration-Profile.Context-Identifier                                                                                   | 1                                                 |\\n      | Subscription-Data.APN-Configuration-Profile.All-APN-Configurations-Included-Indicator                                                            | 0                                                 |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.Context-Identifier                                                                 | 1                                                 |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.PDN-Type                                                                           | 0                                                 |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.Service-Selection                                                                  | internet                                          |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.QoS-Class-Identifier                                    | {abotprop.SUT.DEF.ERAB.QCI}                       |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.Allocation-Retention-Priority.Priority-Level            | {abotprop.SUT.DEF.ERAB.ARP.PRIORITY.LEVEL}        |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.Allocation-Retention-Priority.Pre-emption-Capability    | {abotprop.SUT.DEF.ERAB.ARP.PREEMPT.CAPABILITY}    |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.Allocation-Retention-Priority.Pre-emption-Vulnerability | {abotprop.SUT.DEF.ERAB.ARP.PREEMPT.VULNERABILITY} |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.AMBR.Max-Requested-Bandwidth-UL                                                    | {abotprop.SUT.UE.AMBR.UL}                         |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.AMBR.Max-Requested-Bandwidth-DL                                                    | {abotprop.SUT.UE.AMBR.DL}                         |\\n      | Subscription-Data.Subscribed-Periodic-RAU-TAU-Timer                                                                                              | 120                                               |\\n      | Auth-Session-State                                                                                                                               | {abotprop.SUT.DIA.AUTH.SESS.STATE.1}              |\\n      | Origin-Host                                                                                                                                      | {abotprop.SUT.S6A.CAPEX.ORIGIN.HOST}              |\\n      | Origin-Realm                                                                                                                                     | {abotprop.SUT.S6A.CAPEX.ORIGIN.REALM}             |\\n      | Result-Code                                                                                                                                      | {abotprop.SUT.3GPP.S6A.DIA_RESULT_CODE}           |\\n\\n    Then I receive and validate DIAMETER message DIA_UPDATE_LOCATION_ANSWER on interface S6A with the following details on node MME1 from HSS1:\\n      | parameter                                                                                                                                        | value                                                          |\\n      | Hop-by-Hop Identifier                                                                                                                            | save(HOP_BY_HOP_ID)                                            |\\n      | End-to-End Identifier                                                                                                                            | save(END_TO_END_ID)                                            |\\n      | Session-Id                                                                                                                                       | {string:eq}($(DIA_SESS_ID_S6A))                                |\\n      | ULA-Flags                                                                                                                                        | {integer:eq}(1)                                                |\\n      | Subscription-Data.MSISDN                                                                                                                         | {string:eq}({abotprop.SUT.MSISDN.START})                       |\\n      | Subscription-Data.Access-Restriction-Data                                                                                                        | {integer:eq}(47)                                               |\\n      | Subscription-Data.Subscriber-Status                                                                                                              | {integer:eq}(0)                                                |\\n      | Subscription-Data.Network-Access-Mode                                                                                                            | {integer:eq}(2)                                                |\\n      | Subscription-Data.APN-OI-Replacement                                                                                                             | {string:eq}(mnc001.mcc001.3gppnetwork.org)                     |\\n      | Subscription-Data.AMBR.Max-Requested-Bandwidth-UL                                                                                                | {string:eq}({abotprop.SUT.UE.AMBR.UL})                         |\\n      | Subscription-Data.AMBR.Max-Requested-Bandwidth-DL                                                                                                | {string:eq}({abotprop.SUT.UE.AMBR.DL})                         |\\n      | Subscription-Data.APN-Configuration-Profile.Context-Identifier                                                                                   | {integer:eq}(1)                                                |\\n      | Subscription-Data.APN-Configuration-Profile.All-APN-Configurations-Included-Indicator                                                            | {integer:eq}(0)                                                |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.Context-Identifier                                                                 | {integer:eq}(1)                                                |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.PDN-Type                                                                           | {integer:eq}(0)                                                |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.Service-Selection                                                                  | {string:eq}(internet)                                          |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.QoS-Class-Identifier                                    | {string:eq}({abotprop.SUT.DEF.ERAB.QCI})                       |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.Allocation-Retention-Priority.Priority-Level            | {string:eq}({abotprop.SUT.DEF.ERAB.ARP.PRIORITY.LEVEL})        |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.Allocation-Retention-Priority.Pre-emption-Capability    | {string:eq}({abotprop.SUT.DEF.ERAB.ARP.PREEMPT.CAPABILITY})    |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.Allocation-Retention-Priority.Pre-emption-Vulnerability | {string:eq}({abotprop.SUT.DEF.ERAB.ARP.PREEMPT.VULNERABILITY}) |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.AMBR.Max-Requested-Bandwidth-UL                                                    | {string:eq}({abotprop.SUT.UE.AMBR.UL})                         |\\n      | Subscription-Data.APN-Configuration-Profile.APN-Configuration.AMBR.Max-Requested-Bandwidth-DL                                                    | {string:eq}({abotprop.SUT.UE.AMBR.DL})                         |\\n      | Subscription-Data.Subscribed-Periodic-RAU-TAU-Timer                                                                                              | {integer:eq}(120)                                              |\\n      | Auth-Session-State                                                                                                                               | {string:eq}({abotprop.SUT.DIA.AUTH.SESS.STATE.1})              |\\n      | Origin-Host                                                                                                                                      | {abotprop.SUT.S6A.CAPEX.ORIGIN.HOST}                           |\\n      | Origin-Realm                                                                                                                                     | {abotprop.SUT.S6A.CAPEX.ORIGIN.REALM}                          |\\n      | Result-Code                                                                                                                                      | {integer:eq}({abotprop.SUT.3GPP.S6A.DIA_RESULT_CODE})          |\\n\\n\\n\\n\\n## S11 - Create Session (MME sends SGW : 1. MME S11 Tunnel Endpoint(Sender F-TEID), 2. Bearer Context Setup, 3. UE Static IP from HSS)\\n\\n    When I send GTPV2C message GTPV2C_CREATE_SESSION_REQUEST on interface S11 with the following details from node MME1 to SGW1:\\n      | parameter                                                     | value                                     |\\n      | header.message_type                                           | 32                                        |\\n      | header.teid                                                   | 0                                         |\\n      | header.seq_number                                             | incr(1,8)                                 |\\n      | imsi                                                          | $(IMSI)                                   |\\n      | msisdn                                                        | incr(22331010101010,1)                    |\\n      | meid                                                          | incr(123456789012345,1)                   |\\n      | serving_network.mcc                                           | {abotprop.SUT.MCC}                        |\\n      | serving_network.mnc                                           | {abotprop.SUT.MNC}                        |\\n      | sender_fteid_cntrl_plane.fq_teid.interface_type               | 10                                        |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv4_flag                    | {abotprop.SUT.GTPV2.IPV4.PRES}            |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv6_flag                    | {abotprop.SUT.GTPV2.IPV6.ABS}             |\\n      | sender_fteid_cntrl_plane.fq_teid.teid                         | incr(10000000,1)                          |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv4_add                     | {abotprop.SUT.IPV4_ADDRESS}               |\\n      | pgw_s5_s8_address_cntrl_plane.fq_teid.interface_type          | {abotprop.SUT.GTPV2.PGW.GTPC.INTERFACE}   |\\n      | pgw_s5_s8_address_cntrl_plane.fq_teid.ipv4_flag               | {abotprop.SUT.GTPV2.IPV4.PRES}            |\\n      | pgw_s5_s8_address_cntrl_plane.fq_teid.ipv6_flag               | {abotprop.SUT.GTPV2.IPV6.ABS}             |\\n      | pgw_s5_s8_address_cntrl_plane.fq_teid.teid                    | 0                                         |\\n      | pgw_s5_s8_address_cntrl_plane.fq_teid.ipv4_add                | 0.0.0.0                                   |\\n      | apn                                                           | {abotprop.SUT.3GPP.PDN1.APN}              |\\n      | selection_mode                                                | {abotprop.SUT.GTPV2.NET.PROV.APN.SNV}     |\\n      | pdn_type                                                      | {abotprop.SUT.3GPP.PDN_TYPE}              |\\n      | pdn_address_allocation.pdn_type                               | {abotprop.SUT.3GPP.PDN_TYPE}              |\\n      | pdn_address_allocation.pdn_address_and_prefix                 | incr(172.16.0.10,1)                       |\\n      | maxm_apn_restriction.apn_restriction_value                    | {abotprop.SUT.GTPV2.APN.REST.VALUE.PUBLIC}|\\n      | ambr.apn_ambr_uplink                                          | {abotprop.SUT.MAX_BIT_RATE_UL}            |\\n      | ambr.apn_ambr_downlink                                        | {abotprop.SUT.MAX_BIT_RATE_DL}            |\\n      | linked.eps_bearer_id                                          | {abotprop.SUT.3GPP.LINKED.EPS_BEARER_ID1} |\\n      | recovery                                                      | {abotprop.SUT.GTPV2.RECV.RESTART.COUNTER} |\\n      | rat_type                                                      | {abotprop.SUT.GTPV2.RAT.TYPE.EUTRAN}      |\\n      | indication                                                    | {abotprop.SUT.GTPV2_INDICATION}           |\\n      | charging_char                                                 | {abotprop.SUT.3GPP.GTPV2C.CHARGING_CHAR}  |\\n      | protocol_config_options                                       | {abotprop.SUT.GTPV2.PCO}                  |\\n      | ue_timezone.time_zone                                         | {abotprop.SUT.GTPV2.UE.TIMEZONE}          |\\n      | ue_timezone.daylight_saving_time                              | {abotprop.SUT.UE.DAYLIGHT.SAVING.TIME}    |\\n      | lapi                                                          | {abotprop.SUT.GTPV2.LAPI}                 |\\n      | bearer_contexts_to_create.0.eps_bearer_id                     | {abotprop.SUT.EBI.0.EPS.BEAR.ID}          |\\n      | bearer_contexts_to_create.0.bearer_qos.pvi                    | {abotprop.SUT.GTPV2.BEARER_QOS.PVI}       |\\n      | bearer_contexts_to_create.0.bearer_qos.pl                     | {abotprop.SUT.GTPV2.PGW.BEARER_QOS.PL}    |\\n      | bearer_contexts_to_create.0.bearer_qos.pci                    | {abotprop.SUT.GTPV2.BER.CTXT.QOS.PCI}     |\\n      | bearer_contexts_to_create.0.bearer_qos.qci                    | {abotprop.SUT.3GPP.BEARER_QCI}            |\\n      | bearer_contexts_to_create.0.bearer_qos.max_bit_rate_ul        | {abotprop.SUT.MAX_BIT_RATE_UL}            |\\n      | bearer_contexts_to_create.0.bearer_qos.max_bit_rate_dl        | {abotprop.SUT.MAX_BIT_RATE_DL}            |\\n      | bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_ul | {abotprop.SUT.GUARANTEED_BIT_RATE_UL}     |\\n      | bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_dl | {abotprop.SUT.GUARANTEED_BIT_RATE_DL}     |\\n      | user_location_info.uli_flags                                  | 10                                        |\\n      | user_location_info.ecgi.plmn_identity.mcc                     | {abotprop.SUT.MCC}                        |\\n      | user_location_info.ecgi.plmn_identity.mnc                     | {abotprop.SUT.MNC}                        |\\n      | user_location_info.ecgi.cell_id                               | {abotprop.SUT.ECGI.CELL.ID1}              |\\n      | mme.fq_csid.node_id_type                                      | 0                                         |\\n      | mme.fq_csid.node_id                                           | {abotprop.SUT.IPV4_ADDRESS}               |\\n      | mme.fq_csid.csid                                              | 1                                         |\\n\\n    Then I receive and validate GTPV2C message GTPV2C_CREATE_SESSION_REQUEST on interface S11 with the following details on node SGW1 from MME1:\\n      | parameter                                                     | value                                                  |\\n      | header.message_type                                           | {string:eq}(32)                                        |\\n      | header.teid                                                   | {string:eq}(0)                                         |\\n      | header.seq_number                                             | save(GTPV2C_HDR_SEQ_NO_S11)                            |\\n      | imsi                                                          | save(IMSI)                                             |\\n      | msisdn                                                        | save(MSISDN)                                           |\\n      | meid                                                          | save(MEID)                                             |\\n      | serving_network.mcc                                           | {integer:eq}({abotprop.SUT.MCC})                       |\\n      | serving_network.mnc                                           | {integer:eq}({abotprop.SUT.MNC})                       |\\n      | sender_fteid_cntrl_plane.fq_teid.interface_type               | {string:eq}(10)                                        |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv4_flag                    | {string:eq}({abotprop.SUT.GTPV2.IPV4.PRES})            |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv6_flag                    | {string:eq}({abotprop.SUT.GTPV2.IPV6.ABS} )            |\\n      | sender_fteid_cntrl_plane.fq_teid.teid                         | save(GTPV2C_HDR_DL_TEID_MME_S11)                       |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv4_add                     | save(GTPV2C_HDR_DL_IP_S11)                             |\\n      | pgw_s5_s8_address_cntrl_plane.fq_teid.interface_type          | {string:eq}({abotprop.SUT.GTPV2.PGW.GTPC.INTERFACE})   |\\n      | pgw_s5_s8_address_cntrl_plane.fq_teid.ipv4_flag               | {string:eq}({abotprop.SUT.GTPV2.IPV4.PRES})            |\\n      | pgw_s5_s8_address_cntrl_plane.fq_teid.ipv6_flag               | {string:eq}({abotprop.SUT.GTPV2.IPV6.ABS})             |\\n      | pgw_s5_s8_address_cntrl_plane.fq_teid.teid                    | {string:eq}(0)                                         |\\n      | pgw_s5_s8_address_cntrl_plane.fq_teid.ipv4_add                | {string:eq}(0.0.0.0)                                   |\\n      | apn                                                           | {string:eq}({abotprop.SUT.3GPP.PDN1.APN})              |\\n      | selection_mode                                                | {string:eq}({abotprop.SUT.GTPV2.NET.PROV.APN.SNV})     |\\n      | pdn_type                                                      | {string:eq}({abotprop.SUT.3GPP.PDN_TYPE})              |\\n      | pdn_address_allocation.pdn_type                               | {string:eq}({abotprop.SUT.3GPP.PDN_TYPE})              |\\n      | pdn_address_allocation.pdn_address_and_prefix                 | save(UE_IP)                                            |\\n      | maxm_apn_restriction.apn_restriction_value                    | {string:eq}({abotprop.SUT.GTPV2.APN.REST.VALUE.PUBLIC})|\\n      | ambr.apn_ambr_uplink                                          | {string:eq}({abotprop.SUT.MAX_BIT_RATE_UL})            |\\n      | ambr.apn_ambr_downlink                                        | {string:eq}({abotprop.SUT.MAX_BIT_RATE_DL})            |\\n      | linked.eps_bearer_id                                          | {string:eq}({abotprop.SUT.3GPP.LINKED.EPS_BEARER_ID1}) |\\n      | recovery                                                      | {string:eq}({abotprop.SUT.GTPV2.RECV.RESTART.COUNTER}) |\\n      | rat_type                                                      | {string:eq}({abotprop.SUT.GTPV2.RAT.TYPE.EUTRAN})      |\\n      | indication                                                    | {string:eq}({abotprop.SUT.GTPV2_INDICATION})           |\\n      | charging_char                                                 | {string:eq}({abotprop.SUT.3GPP.GTPV2C.CHARGING_CHAR})  |\\n      | protocol_config_options                                       | {string:eq}({abotprop.SUT.GTPV2.PCO})                  |\\n      | ue_timezone.time_zone                                         | {string:eq}({abotprop.SUT.GTPV2.UE.TIMEZONE})          |\\n      | ue_timezone.daylight_saving_time                              | {string:eq}({abotprop.SUT.UE.DAYLIGHT.SAVING.TIME})    |\\n      | lapi                                                          | {string:eq}({abotprop.SUT.GTPV2.LAPI})                 |\\n      | bearer_contexts_to_create.0.eps_bearer_id                     | {string:eq}({abotprop.SUT.EBI.0.EPS.BEAR.ID})          |\\n      | bearer_contexts_to_create.0.bearer_qos.pvi                    | {string:eq}({abotprop.SUT.GTPV2.BEARER_QOS.PVI})       |\\n      | bearer_contexts_to_create.0.bearer_qos.pl                     | {string:eq}({abotprop.SUT.GTPV2.PGW.BEARER_QOS.PL})    |\\n      | bearer_contexts_to_create.0.bearer_qos.pci                    | {string:eq}({abotprop.SUT.GTPV2.BER.CTXT.QOS.PCI})     |\\n      | bearer_contexts_to_create.0.bearer_qos.qci                    | {string:eq}({abotprop.SUT.3GPP.BEARER_QCI})            |\\n      | bearer_contexts_to_create.0.bearer_qos.max_bit_rate_ul        | {string:eq}({abotprop.SUT.MAX_BIT_RATE_UL})            |\\n      | bearer_contexts_to_create.0.bearer_qos.max_bit_rate_dl        | {string:eq}({abotprop.SUT.MAX_BIT_RATE_DL})            |\\n      | bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_ul | {string:eq}({abotprop.SUT.GUARANTEED_BIT_RATE_UL})     |\\n      | bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_dl | {string:eq}({abotprop.SUT.GUARANTEED_BIT_RATE_DL})     |\\n      | user_location_info.uli_flags                                  | {string:eq}(10)                                        |\\n      | user_location_info.ecgi.plmn_identity.mcc                     | {string:eq}({abotprop.SUT.MCC})                        |\\n      | user_location_info.ecgi.plmn_identity.mnc                     | {string:eq}({abotprop.SUT.MNC})                        |\\n      | user_location_info.ecgi.cell_id                               | {string:eq}({abotprop.SUT.ECGI.CELL.ID1})              |\\n      | mme.fq_csid.node_id_type                                      | {string:eq}(0)                                         |\\n      | mme.fq_csid.node_id                                           | {string:eq}({abotprop.SUT.IPV4_ADDRESS})               |\\n      | mme.fq_csid.csid                                              | {string:eq}(1)                                         |\\n\\n\\n\\n\\n\\n\\n\\n## S5-S8 - Create Session (SGW sends to PGW : 1. SGW S5-S8 Tunnel Endpoint(Sender F-TEID), 2. Bearer Context Setup, 3. UE Static IP from HSS)\\n\\n    When I send GTPV2C message GTPV2C_CREATE_SESSION_REQUEST on interface S5-S8 with the following details from node SGW1 to PGW1:\\n    \\n      | parameter                                                         | value                                     |\\n      | header.message_type                                               | 32                                        |\\n      | header.teid                                                       | 0                                         |\\n      | header.seq_number                                                 | incr(1,6)                                 |\\n      | imsi                                                              | $(IMSI)                                   |\\n      | msisdn                                                            | $(MSISDN)                                 |\\n      | meid                                                              | $(MEID)                                   |\\n      | serving_network.mcc                                               | {abotprop.SUT.MCC}                        |\\n      | serving_network.mnc                                               | {abotprop.SUT.MNC}                        |\\n      | sender_fteid_cntrl_plane.fq_teid.interface_type                   | 6                                         |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv4_flag                        | {abotprop.SUT.GTPV2.IPV4.PRES}            |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv6_flag                        | {abotprop.SUT.GTPV2.IPV6.ABS}             |\\n      | sender_fteid_cntrl_plane.fq_teid.teid                             | incr(30000000,1)                          |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv4_add                         | {abotprop.SUT.IPV4_ADDRESS}               |\\n      | apn                                                               | {abotprop.SUT.3GPP.PDN1.APN}              |\\n      | selection_mode                                                    | {abotprop.SUT.GTPV2.NET.PROV.APN.SNV}     |\\n      | pdn_type                                                          | {abotprop.SUT.3GPP.PDN_TYPE}              |\\n      | pdn_address_allocation.pdn_type                                   | {abotprop.SUT.3GPP.PDN_TYPE}              |\\n      | pdn_address_allocation.pdn_address_and_prefix                     | $(UE_IP)                                  |\\n      | maxm_apn_restriction.apn_restriction_value                        | {abotprop.SUT.GTPV2.APN.REST.VALUE.PUBLIC}|\\n      | ambr.apn_ambr_uplink                                              | {abotprop.SUT.MAX_BIT_RATE_UL}            |\\n      | ambr.apn_ambr_downlink                                            | {abotprop.SUT.MAX_BIT_RATE_DL}            |\\n      | linked.eps_bearer_id                                              | {abotprop.SUT.3GPP.LINKED.EPS_BEARER_ID1} |\\n      | recovery                                                          | {abotprop.SUT.GTPV2.RECV.RESTART.COUNTER} |\\n      | rat_type                                                          | {abotprop.SUT.GTPV2.RAT.TYPE.EUTRAN}      |\\n      | indication                                                        | {abotprop.SUT.GTPV2_INDICATION}           |\\n      | charging_char                                                     | {abotprop.SUT.3GPP.GTPV2C.CHARGING_CHAR}  |\\n      | protocol_config_options                                           | {abotprop.SUT.GTPV2.PCO}                  |\\n      | ue_timezone.time_zone                                             | {abotprop.SUT.GTPV2.UE.TIMEZONE}          |\\n      | ue_timezone.daylight_saving_time                                  | {abotprop.SUT.UE.DAYLIGHT.SAVING.TIME}    |\\n      | lapi                                                              | {abotprop.SUT.GTPV2.LAPI}                 |\\n      | bearer_contexts_to_create.0.eps_bearer_id                         | {abotprop.SUT.EBI.0.EPS.BEAR.ID}          |\\n      | bearer_contexts_to_create.0.bearer_qos.pvi                        | {abotprop.SUT.GTPV2.BEARER_QOS.PVI}       |\\n      | bearer_contexts_to_create.0.bearer_qos.pl                         | {abotprop.SUT.GTPV2.PGW.BEARER_QOS.PL}    |\\n      | bearer_contexts_to_create.0.bearer_qos.pci                        | {abotprop.SUT.GTPV2.BER.CTXT.QOS.PCI}     |\\n      | bearer_contexts_to_create.0.bearer_qos.qci                        | {abotprop.SUT.3GPP.BEARER_QCI}            |\\n      | bearer_contexts_to_create.0.bearer_qos.max_bit_rate_ul            | {abotprop.SUT.MAX_BIT_RATE_UL}            |\\n      | bearer_contexts_to_create.0.bearer_qos.max_bit_rate_dl            | {abotprop.SUT.MAX_BIT_RATE_DL}            |\\n      | bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_ul     | {abotprop.SUT.GUARANTEED_BIT_RATE_UL}     |\\n      | bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_dl     | {abotprop.SUT.GUARANTEED_BIT_RATE_DL}     |\\n      | bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.interface_type | 4                                         |\\n      | bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.ipv4_flag      | {abotprop.SUT.GTPV2.IPV4.PRES}            |\\n      | bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.ipv6_flag      | {abotprop.SUT.GTPV2.IPV6.ABS}             |\\n      | bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.teid           | incr(30000000,1)                          |\\n      | bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.ipv4_add       | 10.10.0.21                                |\\n      | user_location_info.uli_flags                                      | 10                                        |\\n      | user_location_info.ecgi.plmn_identity.mcc                         | {abotprop.SUT.MCC}                        |\\n      | user_location_info.ecgi.plmn_identity.mnc                         | {abotprop.SUT.MNC}                        |\\n      | user_location_info.ecgi.cell_id                                   | {abotprop.SUT.ECGI.CELL.ID1}              |\\n      | mme.fq_csid.node_id_type                                          | 0                                         |\\n      | mme.fq_csid.node_id                                               | {abotprop.SUT.IPV4_ADDRESS}               |\\n      | mme.fq_csid.csid                                                  | 1                                         |\\n      | sgw.fq_csid.node_id_type                                          | 0                                         |\\n      | sgw.fq_csid.node_id                                               | {abotprop.SUT.IPV4_ADDRESS}               |\\n      | sgw.fq_csid.csid                                                  | 2                                         |\\n\\n    Then I receive and validate GTPV2C message GTPV2C_CREATE_SESSION_REQUEST on interface S5-S8 with the following details on node PGW1 from SGW1:\\n      | parameter                                                         | value                                                  |\\n      | header.message_type                                               | {string:eq}(32)                                        |\\n      | header.teid                                                       | {string:eq}(0)                                         |\\n      | header.seq_number                                                 | save(GTPV2C_HDR_SEQ_NO_S5S8)                           |\\n      | imsi                                                              | save(IMSI)                                             |\\n      | msisdn                                                            | save(MSISDN)                                           |\\n      | meid                                                              | save(MEID)                                             |\\n      | serving_network.mcc                                               | {integer:eq}({abotprop.SUT.MCC})                       |\\n      | serving_network.mnc                                               | {integer:eq}({abotprop.SUT.MNC})                       |\\n      | sender_fteid_cntrl_plane.fq_teid.interface_type                   | {string:eq}(6)                                         |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv4_flag                        | {string:eq}({abotprop.SUT.GTPV2.IPV4.PRES})            |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv6_flag                        | {string:eq}({abotprop.SUT.GTPV2.IPV6.ABS} )            |\\n      | sender_fteid_cntrl_plane.fq_teid.teid                             | save(GTPV2C_HDR_DL_TEID_SGW_S5S8)                      |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv4_add                         | save(GTPV2C_HDR_DL_IP_SGW_S5S8)                        |\\n      | apn                                                               | {string:eq}({abotprop.SUT.3GPP.PDN1.APN})              |\\n      | selection_mode                                                    | {string:eq}({abotprop.SUT.GTPV2.NET.PROV.APN.SNV})     |\\n      | pdn_type                                                          | {string:eq}({abotprop.SUT.3GPP.PDN_TYPE})              |\\n      | pdn_address_allocation.pdn_type                                   | {string:eq}({abotprop.SUT.3GPP.PDN_TYPE})              |\\n      | pdn_address_allocation.pdn_address_and_prefix                     | save(UE_IP)                                            |\\n      | maxm_apn_restriction.apn_restriction_value                        | {string:eq}({abotprop.SUT.GTPV2.APN.REST.VALUE.PUBLIC})|\\n      | ambr.apn_ambr_uplink                                              | {string:eq}({abotprop.SUT.MAX_BIT_RATE_UL})            |\\n      | ambr.apn_ambr_downlink                                            | {string:eq}({abotprop.SUT.MAX_BIT_RATE_DL})            |\\n      | linked.eps_bearer_id                                              | {string:eq}({abotprop.SUT.3GPP.LINKED.EPS_BEARER_ID1}) |\\n      | recovery                                                          | {string:eq}({abotprop.SUT.GTPV2.RECV.RESTART.COUNTER}) |\\n      | rat_type                                                          | {string:eq}({abotprop.SUT.GTPV2.RAT.TYPE.EUTRAN})      |\\n      | indication                                                        | {string:eq}({abotprop.SUT.GTPV2_INDICATION})           |\\n      | charging_char                                                     | {string:eq}({abotprop.SUT.3GPP.GTPV2C.CHARGING_CHAR})  |\\n      | protocol_config_options                                           | {string:eq}({abotprop.SUT.GTPV2.PCO})                  |\\n      | ue_timezone.time_zone                                             | {string:eq}({abotprop.SUT.GTPV2.UE.TIMEZONE})          |\\n      | ue_timezone.daylight_saving_time                                  | {string:eq}({abotprop.SUT.UE.DAYLIGHT.SAVING.TIME})    |\\n      | lapi                                                              | {string:eq}({abotprop.SUT.GTPV2.LAPI})                 |\\n      | bearer_contexts_to_create.0.eps_bearer_id                         | {string:eq}({abotprop.SUT.EBI.0.EPS.BEAR.ID})          |\\n      | bearer_contexts_to_create.0.bearer_qos.pvi                        | {string:eq}({abotprop.SUT.GTPV2.BEARER_QOS.PVI})       |\\n      | bearer_contexts_to_create.0.bearer_qos.pl                         | {string:eq}({abotprop.SUT.GTPV2.PGW.BEARER_QOS.PL})    |\\n      | bearer_contexts_to_create.0.bearer_qos.pci                        | {string:eq}({abotprop.SUT.GTPV2.BER.CTXT.QOS.PCI})     |\\n      | bearer_contexts_to_create.0.bearer_qos.qci                        | {string:eq}({abotprop.SUT.3GPP.BEARER_QCI})            |\\n      | bearer_contexts_to_create.0.bearer_qos.max_bit_rate_ul            | {string:eq}({abotprop.SUT.MAX_BIT_RATE_UL})            |\\n      | bearer_contexts_to_create.0.bearer_qos.max_bit_rate_dl            | {string:eq}({abotprop.SUT.MAX_BIT_RATE_DL})            |\\n      | bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_ul     | {string:eq}({abotprop.SUT.GUARANTEED_BIT_RATE_UL})     |\\n      | bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_dl     | {string:eq}({abotprop.SUT.GUARANTEED_BIT_RATE_DL})     |\\n      | bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.interface_type | {string:eq}(4)                                         |\\n      | bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.ipv4_flag      | {string:eq}({abotprop.SUT.GTPV2.IPV4.PRES})            |\\n      | bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.ipv6_flag      | {string:eq}({abotprop.SUT.GTPV2.IPV6.ABS})             |\\n      | bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.teid           | save(S5S8_U_SGW_GTPU_DL_TEID)                          |\\n      | bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.ipv4_add       | save(S5S8_U_SGW_GTPU_DL_IP)                            |\\n      | user_location_info.uli_flags                                      | {string:eq}(10)                                        |\\n      | user_location_info.ecgi.plmn_identity.mcc                         | {string:eq}({abotprop.SUT.MCC})                        |\\n      | user_location_info.ecgi.plmn_identity.mnc                         | {string:eq}({abotprop.SUT.MNC})                        |\\n      | user_location_info.ecgi.cell_id                                   | {string:eq}({abotprop.SUT.ECGI.CELL.ID1})              |\\n      | mme.fq_csid.node_id_type                                          | {string:eq}(0)                                         |\\n      | mme.fq_csid.node_id                                               | {string:eq}({abotprop.SUT.IPV4_ADDRESS})               |\\n      | mme.fq_csid.csid                                                  | {string:eq}(1)                                         |\\n      | sgw.fq_csid.node_id_type                                          | {string:eq}(0)                                         |\\n      | sgw.fq_csid.node_id                                               | {string:eq}({abotprop.SUT.IPV4_ADDRESS})               |\\n      | sgw.fq_csid.csid                                                  | {string:eq}(2)                                         |\\n\\n\\n\\n\\n\\n### Gx - PCRF IP-CAN Session Establishment\\n\\n    When I send DIAMETER message DIA_CREDIT_CONTROL_REQUEST on interface GX with the following details from node PGW1 to PCRF1:\\n      | parameter                                                                      | value                                             |\\n      | Hop-by-Hop Identifier                                                          | 224                                               |\\n      | End-to-End Identifier                                                          | 556                                               |\\n      | Session-Id                                                                     | incr({abotprop.SUT.3GPP.GX.SESSION.ID},1)         |\\n      | DRMP                                                                           | {abotprop.SUT.DRMP.PRIORITY.1}                    |\\n      | Auth-Application-Id                                                            | {abotprop.SUT.DIA.AUTH.APP.ID}                    |\\n      | Origin-Host                                                                    | {abotprop.SUT.GX.CAPEX.ORIGIN.HOST}               |\\n      | Origin-Realm                                                                   | {abotprop.SUT.GX.CAPEX.ORIGIN.REALM}              |\\n      | Destination-Realm                                                              | {abotprop.SUT.GX.CAPEX.DEST.REALM}                |\\n      | CC-Request-Type                                                                | {abotprop.SUT.CC.REQ.INITIAL.REQ}                 |\\n      | CC-Request-Number                                                              | {abotprop.SUT.DIA.CC.REQ.NUMBER}                  |\\n      | Credit-Management-Status                                                       | {abotprop.SUT.DIA.CREDIT.MANAGEMENT.STATUS}       |\\n      | Destination-Host                                                               | {abotprop.SUT.GX.CAPEX.DEST.HOST}                 |\\n      | Origin-State-Id                                                                | {abotprop.SUT.DIA.ORI.STATE.ID}                   |\\n      | Subscription-ID.Subscription-ID-Type                                           | {abotprop.SUT.SUBSCRIPTION.ID.TYPE}               |\\n      | Subscription-ID.Subscription-ID-Data                                           | $(IMSI)                                           |\\n      | IP-CAN-Type                                                                    | {abotprop.SUT.TYPE.OF.CONNECTIVITY.ACCESS}        |\\n      | RAT-Type                                                                       | {abotprop.SUT.RAT.TYPE}                           |\\n      | Offline                                                                        | 1                                                 |\\n      | Online                                                                         | 0                                                 |\\n      | Called-Station-ID                                                              | internet                                          |\\n      #| QoS-Information.QoS-Class-Identifier                                           | {abotprop.SUT.DIA.QOS.QCI}                       |\\n      | QoS-Information.APN-Aggregate-Max-Bitrate-UL                                   | {abotprop.SUT.UE.AMBR.UL}                         |\\n      | QoS-Information.APN-Aggregate-Max-Bitrate-DL                                   | {abotprop.SUT.UE.AMBR.DL}                         |\\n      | Default-EPS-Bearer-QoS.QoS-Class-Identifier                                    | {abotprop.SUT.DEF.ERAB.QCI}                       |\\n      | Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Priority-Level            | {abotprop.SUT.DEF.ERAB.ARP.PRIORITY.LEVEL}        |\\n      | Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Capability    | {abotprop.SUT.DEF.ERAB.ARP.PREEMPT.CAPABILITY}    |\\n      | Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Vulnerability | {abotprop.SUT.DEF.ERAB.ARP.PREEMPT.VULNERABILITY} |\\n\\n    Then I receive and validate DIAMETER message DIA_CREDIT_CONTROL_REQUEST on interface GX with the following details on node PCRF1 from PGW1:\\n      | parameter                                                                      | value                                                          |\\n      | Hop-by-Hop Identifier                                                          | save(HOP_BY_HOP_ID)                                            |\\n      | End-to-End Identifier                                                          | save(END_TO_END_ID)                                            |\\n      | Session-Id                                                                     | save(DIA_GX_SESS_ID)                                           |\\n      | DRMP                                                                           | {string:eq}({abotprop.SUT.DRMP.PRIORITY.1})                    |\\n      | Auth-Application-Id                                                            | {string:eq}({abotprop.SUT.DIA.AUTH.APP.ID})                    |\\n      | Origin-Host                                                                    | {string:eq}({abotprop.SUT.GX.CAPEX.ORIGIN.HOST})               |\\n      | Origin-Realm                                                                   | {string:eq}({abotprop.SUT.GX.CAPEX.ORIGIN.REALM})              |\\n      | Destination-Realm                                                              | {string:eq}({abotprop.SUT.GX.CAPEX.DEST.REALM})                |\\n      | CC-Request-Type                                                                | {string:eq}({abotprop.SUT.CC.REQ.INITIAL.REQ})                 |\\n      | CC-Request-Number                                                              | {string:eq}({abotprop.SUT.DIA.CC.REQ.NUMBER})                  |\\n      | Credit-Management-Status                                                       | {string:eq}({abotprop.SUT.DIA.CREDIT.MANAGEMENT.STATUS})       |\\n      | Destination-Host                                                               | {string:eq}({abotprop.SUT.GX.CAPEX.DEST.HOST})                 |\\n      | Origin-State-Id                                                                | {string:eq}({abotprop.SUT.DIA.ORI.STATE.ID})                   |\\n      | Subscription-ID.Subscription-ID-Type                                           | {string:eq}({abotprop.SUT.SUBSCRIPTION.ID.TYPE})               |\\n      | Subscription-ID.Subscription-ID-Data                                           | save(IMSI)                                                     |\\n      | IP-CAN-Type                                                                    | {string:eq}({abotprop.SUT.TYPE.OF.CONNECTIVITY.ACCESS})        |\\n      | RAT-Type                                                                       | {string:eq}({abotprop.SUT.RAT.TYPE})                           |\\n      | Offline                                                                        | {integer:eq}(1)                                                |\\n      | Online                                                                         | {integer:eq}(0)                                                |\\n      | Called-Station-ID                                                              | {integer:eq}(internet)                                         |\\n      #| QoS-Information.QoS-Class-Identifier                                           | {string:eq}({abotprop.SUT.DIA.QOS.QCI})                       |\\n      | QoS-Information.APN-Aggregate-Max-Bitrate-UL                                   | {string:eq}({abotprop.SUT.UE.AMBR.UL})                         |\\n      | QoS-Information.APN-Aggregate-Max-Bitrate-DL                                   | {string:eq}({abotprop.SUT.UE.AMBR.DL})                         |\\n      | Default-EPS-Bearer-QoS.QoS-Class-Identifier                                    | {string:eq}({abotprop.SUT.DEF.ERAB.QCI})                       |\\n      | Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Priority-Level            | {string:eq}({abotprop.SUT.DEF.ERAB.ARP.PRIORITY.LEVEL})        |\\n      | Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Capability    | {string:eq}({abotprop.SUT.DEF.ERAB.ARP.PREEMPT.CAPABILITY})    |\\n      | Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Vulnerability | {string:eq}({abotprop.SUT.DEF.ERAB.ARP.PREEMPT.VULNERABILITY}) |\\n\\n\\n    When I send DIAMETER message DIA_CREDIT_CONTROL_ANSWER on interface GX with the following details from node PCRF1 to PGW1:\\n    \\n      | parameter                                                                                 | value                                                                         |\\n      | Hop-by-Hop Identifier                                                                     | $(HOP_BY_HOP_ID)                                                              |\\n      | End-to-End Identifier                                                                     | $(END_TO_END_ID)                                                              |\\n      | Session-Id                                                                                | $(DIA_GX_SESS_ID)                                                             |\\n      | DRMP                                                                                      | {abotprop.SUT.DRMP.PRIORITY.1}                                                |\\n      | Auth-Application-Id                                                                       | {abotprop.SUT.DIA.AUTH.APP.ID}                                                |\\n      | Origin-Host                                                                               | {abotprop.SUT.GX.CAPEX.ORIGIN.HOST}                                           |\\n      | Origin-Realm                                                                              | {abotprop.SUT.GX.CAPEX.ORIGIN.REALM}                                          |\\n      | Result-Code                                                                               | {abotprop.SUT.3GPP.S6A.DIA_RESULT_CODE}                                       |\\n      | Experimental-Result.Vendor-Id                                                             | 0                                                                             |\\n      | Experimental-Result.Experimental-Result-Code                                              | {abotprop.SUT.DIA.EXP.RESULT.CODE}                                            |\\n      | CC-Request-Type                                                                           | {abotprop.SUT.CC.REQ.INITIAL.REQ}                                             |\\n      | CC-Request-Number                                                                         | {abotprop.SUT.DIA.CC.REQ.NUMBER}                                              |\\n      | IP-CAN-Type                                                                               | {abotprop.SUT.TYPE.OF.CONNECTIVITY.ACCESS}                                    |\\n      | Offline                                                                                   | 1                                                                             |\\n      | Online                                                                                    | 0                                                                             |\\n      | Charging-Rule-Install.Charging-Correlation-Indicator                                      | 0                                                                             |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Charging-Rule-Name                         | rule-1                                                                        |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Service-Identifier                         | {abotprop.SUT.SERVICE.ID}                                                     |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Rating-Group                               | {abotprop.SUT.GY.RATING.GROUP}                                                |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Flow-Information.Flow-Description          | permit out 17 from 43.225.55.127/16 {7000-8000} to 172.16.0.10/16 {6000-7000} |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Flow-Information.ToS-Traffic-Class         | 2345                                                                          |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Flow-Information.Packet-Filter-Usage       | 1                                                                             |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Flow-Status                                | 2                                                                             |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Monitoring-Key                             | incr({abotprop.SUT.MONITORING.KEY},1)                                         |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Reporting-Level                            | {abotprop.SUT.GY.REPORTING.LEVEL}                                             |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Online                                     | 0                                                                             |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Offline                                    | 1                                                                             |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Precedence                                 | 1                                                                             |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Metering-Method                            | 1                                                                             |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Default-Bearer-Indication                  | 0                                                                             |\\n      #| Charging-Rule-Install.Charging-Rule-Definition.QoS-Information.QoS-Class-Identifier       | 2                                                                             |\\n      #| Charging-Rule-Install.Charging-Rule-Definition.QoS-Information.Max-Requested-Bandwidth-UL | 256000                                                                        |\\n      #| Charging-Rule-Install.Charging-Rule-Definition.QoS-Information.Max-Requested-Bandwidth-DL | 256000                                                                        |\\n      #| QoS-Information.QoS-Class-Identifier                                                      | {abotprop.SUT.DIA.QOS.QCI}                                                   |\\n      | QoS-Information.APN-Aggregate-Max-Bitrate-UL                                              | {abotprop.SUT.UE.AMBR.UL}                                                     |\\n      | QoS-Information.APN-Aggregate-Max-Bitrate-DL                                              | {abotprop.SUT.UE.AMBR.DL}                                                     |\\n      | Default-EPS-Bearer-QoS.QoS-Class-Identifier                                               | {abotprop.SUT.DEF.ERAB.QCI}                                                   |\\n      | Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Priority-Level                       | {abotprop.SUT.DEF.ERAB.ARP.PRIORITY.LEVEL}                                    |\\n      | Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Capability               | {abotprop.SUT.DEF.ERAB.ARP.PREEMPT.CAPABILITY}                                |\\n      | Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Vulnerability            | {abotprop.SUT.DEF.ERAB.ARP.PREEMPT.VULNERABILITY}                             |\\n\\n    Then I receive and validate DIAMETER message DIA_CREDIT_CONTROL_ANSWER on interface GX with the following details on node PGW1 from PCRF1:\\n      | parameter                                                                                 | value                                                          |\\n      | Hop-by-Hop Identifier                                                                     | save(HOP_BY_HOP_ID)                                            |\\n      | End-to-End Identifier                                                                     | save(END_TO_END_ID)                                            |\\n      | Session-Id                                                                                | save(DIA_GX_SESS_ID)                                           |\\n      | DRMP                                                                                      | {string:eq}({abotprop.SUT.DRMP.PRIORITY.1})                    |\\n      | Auth-Application-Id                                                                       | {string:eq}({abotprop.SUT.DIA.AUTH.APP.ID})                    |\\n      | Origin-Host                                                                               | {string:eq}({abotprop.SUT.GX.CAPEX.ORIGIN.HOST})               |\\n      | Origin-Realm                                                                              | {string:eq}({abotprop.SUT.GX.CAPEX.ORIGIN.REALM})              |\\n      | Result-Code                                                                               | {integer:eq}({abotprop.SUT.3GPP.S6A.DIA_RESULT_CODE})          |\\n      | Experimental-Result.Vendor-Id                                                             | {integer:eq}(0)                                                |\\n      | Experimental-Result.Experimental-Result-Code                                              | {string:eq}({abotprop.SUT.DIA.EXP.RESULT.CODE})                |\\n      | CC-Request-Type                                                                           | {string:eq}({abotprop.SUT.CC.REQ.INITIAL.REQ})                 |\\n      | CC-Request-Number                                                                         | {string:eq}({abotprop.SUT.DIA.CC.REQ.NUMBER})                  |\\n      | IP-CAN-Type                                                                               | {string:eq}({abotprop.SUT.TYPE.OF.CONNECTIVITY.ACCESS})        |\\n      | Offline                                                                                   | {integer:eq}(1)                                                |\\n      | Online                                                                                    | {integer:eq}(0)                                                |\\n      | Charging-Rule-Install.Charging-Correlation-Indicator                                      | {integer:eq}(0)                                                |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Charging-Rule-Name                         | {string:eq}(rule-1)                                            |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Service-Identifier                         | {string:eq}({abotprop.SUT.SERVICE.ID})                         |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Rating-Group                               | {string:eq}({abotprop.SUT.GY.RATING.GROUP})                    |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Flow-Information.Flow-Description          | save(SDF_PKT_FILTER)                                           |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Flow-Information.ToS-Traffic-Class         | {string:eq}(2345)                                              |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Flow-Information.Packet-Filter-Usage       | {integer:eq}(1)                                                |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Flow-Status                                | {integer:eq}(2)                                                |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Monitoring-Key                             | save(MONITORING_KEY)                                           |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Reporting-Level                            | {integer:eq}({abotprop.SUT.GY.REPORTING.LEVEL})                |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Online                                     | {integer:eq}(0)                                                |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Offline                                    | {integer:eq}(1)                                                |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Precedence                                 | {integer:eq}(1)                                                |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Metering-Method                            | {integer:eq}(1)                                                |\\n      | Charging-Rule-Install.Charging-Rule-Definition.Default-Bearer-Indication                  | {integer:eq}(0)                                                |\\n      #| Charging-Rule-Install.Charging-Rule-Definition.QoS-Information.QoS-Class-Identifier       | {integer:eq}(2)                                                |\\n      #| Charging-Rule-Install.Charging-Rule-Definition.QoS-Information.Max-Requested-Bandwidth-UL | {integer:eq}(256000)                                           |\\n      #| Charging-Rule-Install.Charging-Rule-Definition.QoS-Information.Max-Requested-Bandwidth-DL | {integer:eq}(256000)                                           |\\n      #| QoS-Information.QoS-Class-Identifier                                                      | {string:eq}({abotprop.SUT.DIA.QOS.QCI})                       |\\n      | QoS-Information.APN-Aggregate-Max-Bitrate-UL                                              | {string:eq}({abotprop.SUT.UE.AMBR.UL})                         |\\n      | QoS-Information.APN-Aggregate-Max-Bitrate-DL                                              | {string:eq}({abotprop.SUT.UE.AMBR.DL})                         |\\n      | Default-EPS-Bearer-QoS.QoS-Class-Identifier                                               | {string:eq}({abotprop.SUT.DEF.ERAB.QCI})                       |\\n      | Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Priority-Level                       | {string:eq}({abotprop.SUT.DEF.ERAB.ARP.PRIORITY.LEVEL})        |\\n      | Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Capability               | {string:eq}({abotprop.SUT.DEF.ERAB.ARP.PREEMPT.CAPABILITY})    |\\n      | Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Vulnerability            | {string:eq}({abotprop.SUT.DEF.ERAB.ARP.PREEMPT.VULNERABILITY}) |\\n\\n\\n\\n\\n\\n## S5-S8 - Create Session Response (PGW sends to SGW : 1. PGW S5-S8 Tunnel Endpoint(Sender F-TEID), 2. PGWU S5-S8-U Tunnel Endpoint)\\n\\n    When I send GTPV2C message GTPV2C_CREATE_SESSION_RESPONSE on interface S5-S8 with the following details from node PGW1 to SGW1:\\n      | parameter                                                       | value                                       |\\n      | header.message_type                                             | 33                                          |\\n      | header.teid                                                     | $(GTPV2C_HDR_DL_TEID_SGW_S5S8)              |\\n      | header.seq_number                                               | $(GTPV2C_HDR_SEQ_NO_S5S8)                   |\\n      | cause.cause_value                                               | {abotprop.SUT.CAUSE.VALUE.REQUEST_ACCEPTED} |\\n      | cause.cause_flags                                               | {abotprop.SUT.CAUSE.CAUSE_FLAGS}            |\\n      | change_reporting_actn                                           | {abotprop.SUT.GTPV2.CHANGE.REPORT.ACTN}     |\\n      | csg_information_reporting_action.csg_info                       | {abotprop.SUT.GTPV2.CSG.INFO}               |\\n      | henb_info_reporting                                             | {abotprop.SUT.GTPV2.HENB.INFO.REPORTING}    |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.interface_type            | {abotprop.SUT.GTPV2.PGW.GTPC.INTERFACE}     |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_flag                 | {abotprop.SUT.GTPV2.IPV4.PRES}              |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv6_flag                 | {abotprop.SUT.GTPV2.IPV6.ABS}               |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.teid                      | incr(40000000,1)                            |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_add                  | {abotprop.SUT.IPV4_ADDRESS}                 |\\n      #| pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv6_add                  | 0                                          |\\n      | pdn_address_allocation.pdn_type                                 | {abotprop.SUT.3GPP.PDN_TYPE}                |\\n      | pdn_address_allocation.pdn_address_and_prefix                   | $(UE_IP)                                    |\\n      | apn_restriction_value                                           | {abotprop.SUT.GTPV2.APN.REST.VALUE.PUBLIC}  |\\n      | ambr.apn_ambr_uplink                                            | {abotprop.SUT.MAX_BIT_RATE_UL}              |\\n      | ambr.apn_ambr_downlink                                          | {abotprop.SUT.MAX_BIT_RATE_DL}              |\\n      | linked.eps_bearer_id                                            | {abotprop.SUT.3GPP.LINKED.EPS_BEARER_ID1}   |\\n      | protocol_config_options                                         | {abotprop.SUT.GTPV2.PCO}                    |\\n      | recovery                                                        | {abotprop.SUT.GTPV2.RECV.RESTART.COUNTER}   |\\n      | charging_gateway_name.fqdn                                      | {abotprop.SUT.CHARGING_GATEWAY_DOMAIN}      |\\n      | indication                                                      | {abotprop.SUT.GTPV2_INDICATION}             |\\n      | charging_id                                                     | {abotprop.SUT.GTPV2.CHARG.ID.111}           |\\n      | bearer_contexts_created.0.eps_bearer_id                         | {abotprop.SUT.EBI.0.EPS.BEAR.ID}            |\\n      | bearer_contexts_created.0.bearer_qos.pvi                        | {abotprop.SUT.GTPV2.BEARER_QOS.PVI}         |\\n      | bearer_contexts_created.0.bearer_qos.pl                         | {abotprop.SUT.GTPV2.PGW.BEARER_QOS.PL}      |\\n      | bearer_contexts_created.0.bearer_qos.pci                        | {abotprop.SUT.GTPV2.BER.CTXT.QOS.PCI}       |\\n      | bearer_contexts_created.0.bearer_qos.qci                        | {abotprop.SUT.3GPP.BEARER_QCI}              |\\n      | bearer_contexts_created.0.bearer_qos.max_bit_rate_ul            | {abotprop.SUT.MAX_BIT_RATE_UL}              |\\n      | bearer_contexts_created.0.bearer_qos.max_bit_rate_dl            | {abotprop.SUT.MAX_BIT_RATE_DL}              |\\n      | bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_ul     | {abotprop.SUT.GUARANTEED_BIT_RATE_UL}       |\\n      | bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_dl     | {abotprop.SUT.GUARANTEED_BIT_RATE_DL}       |\\n      | bearer_contexts_created.0.cause.cause_value                     | {abotprop.SUT.CAUSE.VALUE.REQUEST_ACCEPTED} |\\n      | bearer_contexts_created.0.cause.cause_flags                     | {abotprop.SUT.CAUSE.CAUSE_FLAGS}            |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.interface_type | {abotprop.SUT.GTPV2.PGW.S5_S8.INTERFACE_TYPE}|\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_flag      | {abotprop.SUT.GTPV2.IPV4.PRES}              |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv6_flag      | {abotprop.SUT.GTPV2.IPV6.ABS}               |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.teid           | incr(40000000,1)                            |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_add       | 10.10.0.22                                  |\\n      #| bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv46_add      | 0                                           |\\n      | bearer_contexts_created.0.charging_id                           | {abotprop.SUT.GTPV2.CHARG.ID.111}           |\\n      | bearer_contexts_created.0.bearer_flags                          | {abotprop.SUT.GTPV2.BEARER_FLAGS}           |\\n      | pgw.fq_csid.node_id_type                                        | 0                                           |\\n      | pgw.fq_csid.node_id                                             | {abotprop.SUT.IPV4_ADDRESS}                 |\\n      | pgw.fq_csid.csid                                                | {abotprop.SUT.GTPV2.PGW.FQ.CSID}            |\\n\\n    Then I receive and validate GTPV2C message GTPV2C_CREATE_SESSION_RESPONSE on interface S5-S8 with the following details on node SGW1 from PGW1:\\n      | parameter                                                       | value                                                    |\\n      | header.message_type                                             | {string:eq}(33)                                          |\\n      | header.teid                                                     | save(GTPV2C_HDR_DL_TEID_SGW_S5S8)                        |\\n      | header.seq_number                                               | save(GTPV2C_HDR_SEQ_NO_S5S8)                             |\\n      | cause.cause_value                                               | {string:eq}({abotprop.SUT.CAUSE.VALUE.REQUEST_ACCEPTED}) |\\n      | cause.cause_flags                                               | {string:eq}({abotprop.SUT.CAUSE.CAUSE_FLAGS})            |\\n      | change_reporting_actn                                           | {string:eq}({abotprop.SUT.GTPV2.CHANGE.REPORT.ACTN})     |\\n      | csg_information_reporting_action.csg_info                       | {string:eq}({abotprop.SUT.GTPV2.CSG.INFO})               |\\n      | henb_info_reporting                                             | {string:eq}({abotprop.SUT.GTPV2.HENB.INFO.REPORTING})    |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.interface_type            | {string:eq}({abotprop.SUT.GTPV2.PGW.GTPC.INTERFACE})     |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_flag                 | {string:eq}({abotprop.SUT.GTPV2.IPV4.PRES})              |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv6_flag                 | {string:eq}({abotprop.SUT.GTPV2.IPV6.ABS})               |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.teid                      | save(GTPV2C_HDR_UL_TEID_PGW_S5S8)                        |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_add                  | save(GTPV2C_HDR_UL_IP_PGW_S5S8)                          |\\n      #| pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv6_add                  | {string:eq}(0)                                           |\\n      | pdn_address_allocation.pdn_type                                 | {string:eq}({abotprop.SUT.3GPP.PDN_TYPE})                |\\n      | pdn_address_allocation.pdn_address_and_prefix                   | save(UE_IP)                                              |\\n      | apn_restriction_value                                           | {string:eq}({abotprop.SUT.GTPV2.APN.REST.VALUE.PUBLIC})  |\\n      | ambr.apn_ambr_uplink                                            | {string:eq}({abotprop.SUT.MAX_BIT_RATE_UL})              |\\n      | ambr.apn_ambr_downlink                                          | {string:eq}({abotprop.SUT.MAX_BIT_RATE_DL})              |\\n      | linked.eps_bearer_id                                            | {string:eq}({abotprop.SUT.3GPP.LINKED.EPS_BEARER_ID1})   |\\n      | protocol_config_options                                         | {string:eq}({abotprop.SUT.GTPV2.PCO})                    |\\n      | recovery                                                        | {string:eq}({abotprop.SUT.GTPV2.RECV.RESTART.COUNTER})   |\\n      | charging_gateway_name.fqdn                                      | {string:eq}({abotprop.SUT.CHARGING_GATEWAY_DOMAIN})      |\\n      | indication                                                      | {string:eq}({abotprop.SUT.GTPV2_INDICATION})             |\\n      | charging_id                                                     | {string:eq}({abotprop.SUT.GTPV2.CHARG.ID.111})           |\\n      | bearer_contexts_created.0.eps_bearer_id                         | {string:eq}({abotprop.SUT.EBI.0.EPS.BEAR.ID})            |\\n      | bearer_contexts_created.0.bearer_qos.pvi                        | {string:eq}({abotprop.SUT.GTPV2.BEARER_QOS.PVI})         |\\n      | bearer_contexts_created.0.bearer_qos.pl                         | {string:eq}({abotprop.SUT.GTPV2.PGW.BEARER_QOS.PL})      |\\n      | bearer_contexts_created.0.bearer_qos.pci                        | {string:eq}({abotprop.SUT.GTPV2.BER.CTXT.QOS.PCI})       |\\n      | bearer_contexts_created.0.bearer_qos.qci                        | {string:eq}({abotprop.SUT.3GPP.BEARER_QCI})              |\\n      | bearer_contexts_created.0.bearer_qos.max_bit_rate_ul            | {string:eq}({abotprop.SUT.MAX_BIT_RATE_UL})              |\\n      | bearer_contexts_created.0.bearer_qos.max_bit_rate_dl            | {string:eq}({abotprop.SUT.MAX_BIT_RATE_DL})              |\\n      | bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_ul     | {string:eq}({abotprop.SUT.GUARANTEED_BIT_RATE_UL})       |\\n      | bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_dl     | {string:eq}({abotprop.SUT.GUARANTEED_BIT_RATE_DL})       |\\n      | bearer_contexts_created.0.cause.cause_value                     | {string:eq}({abotprop.SUT.CAUSE.VALUE.REQUEST_ACCEPTED}) |\\n      | bearer_contexts_created.0.cause.cause_flags                     | {string:eq}({abotprop.SUT.CAUSE.CAUSE_FLAGS})            |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.interface_type | {string:eq}({abotprop.SUT.GTPV2.PGW.S5_S8.INTERFACE_TYPE})|\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_flag      | {string:eq}({abotprop.SUT.GTPV2.IPV4.PRES})              |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv6_flag      | {string:eq}({abotprop.SUT.GTPV2.IPV6.ABS})               |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.teid           | save(S5S8_U_PGW_GTPU_UL_TEID)                            |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_add       | save(S5S8_U_PGW_GTPU_UL_IP)                              |\\n      #| bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv46_add      | {string:eq}(0)                                           |\\n      | bearer_contexts_created.0.charging_id                           | {string:eq}({abotprop.SUT.GTPV2.CHARG.ID.111})           |\\n      | bearer_contexts_created.0.bearer_flags                          | {string:eq}({abotprop.SUT.GTPV2.BEARER_FLAGS})           |\\n      | pgw.fq_csid.node_id_type                                        | {string:eq}(0)                                           |\\n      | pgw.fq_csid.node_id                                             | {string:eq}({abotprop.SUT.IPV4_ADDRESS})                 |\\n      | pgw.fq_csid.csid                                                | {string:eq}({abotprop.SUT.GTPV2.PGW.FQ.CSID})            |\\n\\n\\n\\n## S11 - Create Session Response (SGW sends to MME : 1. SGW S11 Tunnel Endpoint(Sender F-TEID), 2. PGW S5-S8 Tunnel Endpoint, 3. SGWU S1-U Tunnel Endpoint, 4. PGWU S5-S8-U Tunnel Endpoint)\\n\\n    When I send GTPV2C message GTPV2C_CREATE_SESSION_RESPONSE on interface S11 with the following details from node SGW1 to MME1:\\n    \\n      | parameter                                                       | value                                       |\\n      | header.message_type                                             | 33                                          |\\n      | header.teid                                                     | $(GTPV2C_HDR_DL_TEID_MME_S11)               |\\n      | header.seq_number                                               | $(GTPV2C_HDR_SEQ_NO_S11)                    |\\n      | cause.cause_value                                               | {abotprop.SUT.CAUSE.VALUE.REQUEST_ACCEPTED} |\\n      | cause.cause_flags                                               | {abotprop.SUT.CAUSE.CAUSE_FLAGS}            |\\n      | change_reporting_actn                                           | {abotprop.SUT.GTPV2.CHANGE.REPORT.ACTN}     |\\n      | csg_information_reporting_action.csg_info                       | {abotprop.SUT.GTPV2.CSG.INFO}               |\\n      | henb_info_reporting                                             | {abotprop.SUT.GTPV2.HENB.INFO.REPORTING}    |\\n      | sender_fteid_cntrl_plane.fq_teid.interface_type                 | 11                                          |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv4_flag                      | {abotprop.SUT.GTPV2.IPV4.PRES}              |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv6_flag                      | {abotprop.SUT.GTPV2.IPV6.ABS}               |\\n      | sender_fteid_cntrl_plane.fq_teid.teid                           | incr(20000000,1)                            |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv4_add                       | {abotprop.SUT.IPV4_ADDRESS}                 |\\n      #| sender_fteid_cntrl_plane.fq_teid.ipv6_add                       | 0                                           |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.interface_type            | {abotprop.SUT.GTPV2.PGW.GTPC.INTERFACE}     |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_flag                 | {abotprop.SUT.GTPV2.IPV4.PRES}              |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv6_flag                 | {abotprop.SUT.GTPV2.IPV6.ABS}               |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.teid                      | $(GTPV2C_HDR_UL_TEID_PGW_S5S8)              |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_add                  | $(GTPV2C_HDR_UL_IP_PGW_S5S8)                |\\n      #| pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv6_add                  | 0                                           |\\n      | pdn_address_allocation.pdn_type                                 | {abotprop.SUT.3GPP.PDN_TYPE}                |\\n      | pdn_address_allocation.pdn_address_and_prefix                   | $(UE_IP)                                    |\\n      | apn_restriction_value                                           | {abotprop.SUT.GTPV2.APN.REST.VALUE.PUBLIC}  |\\n      | ambr.apn_ambr_uplink                                            | {abotprop.SUT.MAX_BIT_RATE_UL}              |\\n      | ambr.apn_ambr_downlink                                          | {abotprop.SUT.MAX_BIT_RATE_DL}              |\\n      | linked.eps_bearer_id                                            | {abotprop.SUT.3GPP.LINKED.EPS_BEARER_ID1}   |\\n      | protocol_config_options                                         | {abotprop.SUT.GTPV2.PCO}                    |\\n      | recovery                                                        | {abotprop.SUT.GTPV2.RECV.RESTART.COUNTER}   |\\n      | charging_gateway_name.fqdn                                      | {abotprop.SUT.CHARGING_GATEWAY_DOMAIN}      |\\n      | charging_id                                                     | {abotprop.SUT.GTPV2.CHARG.ID.111}           |\\n      | indication                                                      | {abotprop.SUT.GTPV2_INDICATION}             |\\n      | bearer_contexts_created.0.eps_bearer_id                         | {abotprop.SUT.EBI.0.EPS.BEAR.ID}            |\\n      | bearer_contexts_created.0.bearer_qos.pvi                        | {abotprop.SUT.GTPV2.BEARER_QOS.PVI}         |\\n      | bearer_contexts_created.0.bearer_qos.pl                         | {abotprop.SUT.GTPV2.PGW.BEARER_QOS.PL}      |\\n      | bearer_contexts_created.0.bearer_qos.pci                        | {abotprop.SUT.GTPV2.BER.CTXT.QOS.PCI}       |\\n      | bearer_contexts_created.0.bearer_qos.qci                        | {abotprop.SUT.3GPP.BEARER_QCI}              |\\n      | bearer_contexts_created.0.bearer_qos.max_bit_rate_ul            | {abotprop.SUT.MAX_BIT_RATE_UL}              |\\n      | bearer_contexts_created.0.bearer_qos.max_bit_rate_dl            | {abotprop.SUT.MAX_BIT_RATE_DL}              |\\n      | bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_ul     | {abotprop.SUT.GUARANTEED_BIT_RATE_UL}       |\\n      | bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_dl     | {abotprop.SUT.GUARANTEED_BIT_RATE_DL}       |\\n      | bearer_contexts_created.0.cause.cause_value                     | {abotprop.SUT.CAUSE.VALUE.REQUEST_ACCEPTED} |\\n      | bearer_contexts_created.0.cause.cause_flags                     | {abotprop.SUT.CAUSE.CAUSE_FLAGS}            |\\n      | bearer_contexts_created.0.s1u_sgw.fq_teid.interface_type        | 1                                           |\\n      | bearer_contexts_created.0.s1u_sgw.fq_teid.ipv4_flag             | {abotprop.SUT.GTPV2.IPV4.PRES}              |\\n      | bearer_contexts_created.0.s1u_sgw.fq_teid.ipv6_flag             | {abotprop.SUT.GTPV2.IPV6.ABS}               |\\n      | bearer_contexts_created.0.s1u_sgw.fq_teid.teid                  | incr(20000000,1)                            |\\n      | bearer_contexts_created.0.s1u_sgw.fq_teid.ipv4_add              | 10.10.0.12                                  |\\n      #| bearer_contexts_created.0.s1u_sgw.fq_teid.ipv46_add             | 0                                           |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.interface_type | {abotprop.SUT.GTPV2.PGW.S5_S8.INTERFACE_TYPE} |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_flag      | {abotprop.SUT.GTPV2.IPV4.PRES}              |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv6_flag      | {abotprop.SUT.GTPV2.IPV6.ABS}               |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.teid           | $(S5S8_U_PGW_GTPU_UL_TEID)                  |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_add       | $(S5S8_U_PGW_GTPU_UL_IP)                    |\\n      #| bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv46_add      | 0                                           |\\n      | bearer_contexts_created.0.charging_id                           | {abotprop.SUT.GTPV2.CHARG.ID.111}           |\\n      | bearer_contexts_created.0.bearer_flags                          | {abotprop.SUT.GTPV2.BEARER_FLAGS}           |\\n      | pgw.fq_csid.node_id_type                                        | 0                                           |\\n      | pgw.fq_csid.node_id                                             | {abotprop.SUT.IPV4_ADDRESS}                 |\\n      | pgw.fq_csid.csid                                                | {abotprop.SUT.GTPV2.PGW.FQ.CSID}            |\\n      | sgw.fq_csid.node_id_type                                        | 0                                           |\\n      | sgw.fq_csid.node_id                                             | {abotprop.SUT.IPV4_ADDRESS}                 |\\n      | sgw.fq_csid.csid                                                | 2                                           |\\n      #| pgw.ldn                                                         | A                                           |\\n      #| sgw.ldn                                                         | B                                           |\\n      #| pgw_back_off_time.epc_timer.timer_unit                          | 2                                           |\\n      #| pgw_back_off_time.epc_timer.timer_value                         | 1                                           |\\n\\n    Then I receive and validate GTPV2C message GTPV2C_CREATE_SESSION_RESPONSE on interface S11 with the following details on node MME1 from SGW1:\\n      | parameter                                                       | value                                                    |\\n      | header.message_type                                             | {string:eq}(33)                                          |\\n      | header.teid                                                     | save(GTPV2C_HDR_DL_TEID_MME_S11)                         |\\n      | header.seq_number                                               | save(GTPV2C_HDR_SEQ_NO_S11)                              |\\n      | cause.cause_value                                               | {string:eq}({abotprop.SUT.CAUSE.VALUE.REQUEST_ACCEPTED}) |\\n      | cause.cause_flags                                               | {string:eq}({abotprop.SUT.CAUSE.CAUSE_FLAGS})            |\\n      | change_reporting_actn                                           | {string:eq}({abotprop.SUT.GTPV2.CHANGE.REPORT.ACTN})     |\\n      | csg_information_reporting_action.csg_info                       | {string:eq}({abotprop.SUT.GTPV2.CSG.INFO})               |\\n      | henb_info_reporting                                             | {string:eq}({abotprop.SUT.GTPV2.HENB.INFO.REPORTING})    |\\n      | sender_fteid_cntrl_plane.fq_teid.interface_type                 | {string:eq}(11)                                          |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv4_flag                      | {string:eq}({abotprop.SUT.GTPV2.IPV4.PRES})              |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv6_flag                      | {string:eq}({abotprop.SUT.GTPV2.IPV6.ABS})               |\\n      | sender_fteid_cntrl_plane.fq_teid.teid                           | save(GTPV2C_HDR_UL_TEID_SGW_S11)                         |\\n      | sender_fteid_cntrl_plane.fq_teid.ipv4_add                       | save(GTPV2C_HDR_UL_IP_SGW_S11)                           |\\n      #| sender_fteid_cntrl_plane.fq_teid.ipv6_add                       | {string:eq}(0)                                           |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.interface_type            | {string:eq}({abotprop.SUT.GTPV2.PGW.GTPC.INTERFACE})     |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_flag                 | {string:eq}({abotprop.SUT.GTPV2.IPV4.PRES})              |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv6_flag                 | {string:eq}({abotprop.SUT.GTPV2.IPV6.ABS})               |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.teid                      | save(GTPV2C_HDR_UL_TEID_PGW_S5S8)                        |\\n      | pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_add                  | save(GTPV2C_HDR_UL_IP_PGW_S5S8)                          |\\n      #| pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv6_add                  | {string:eq}(0)                                           |\\n      | pdn_address_allocation.pdn_type                                 | {string:eq}({abotprop.SUT.3GPP.PDN_TYPE})                |\\n      | pdn_address_allocation.pdn_address_and_prefix                   | save(UE_IP)                                              |\\n      | apn_restriction_value                                           | {string:eq}({abotprop.SUT.GTPV2.APN.REST.VALUE.PUBLIC})  |\\n      | ambr.apn_ambr_uplink                                            | {string:eq}({abotprop.SUT.MAX_BIT_RATE_UL})              |\\n      | ambr.apn_ambr_downlink                                          | {string:eq}({abotprop.SUT.MAX_BIT_RATE_DL})              |\\n      | linked.eps_bearer_id                                            | {string:eq}({abotprop.SUT.3GPP.LINKED.EPS_BEARER_ID1})   |\\n      | protocol_config_options                                         | {string:eq}({abotprop.SUT.GTPV2.PCO})                    |\\n      | recovery                                                        | {string:eq}({abotprop.SUT.GTPV2.RECV.RESTART.COUNTER})   |\\n      | charging_gateway_name.fqdn                                      | {string:eq}({abotprop.SUT.CHARGING_GATEWAY_DOMAIN})      |\\n      | charging_id                                                     | {string:eq}({abotprop.SUT.GTPV2.CHARG.ID.111})           |\\n      | indication                                                      | {string:eq}({abotprop.SUT.GTPV2_INDICATION})             |\\n      | bearer_contexts_created.0.eps_bearer_id                         | {string:eq}({abotprop.SUT.EBI.0.EPS.BEAR.ID})            |\\n      | bearer_contexts_created.0.bearer_qos.pvi                        | {string:eq}({abotprop.SUT.GTPV2.BEARER_QOS.PVI})         |\\n      | bearer_contexts_created.0.bearer_qos.pl                         | {string:eq}({abotprop.SUT.GTPV2.PGW.BEARER_QOS.PL})      |\\n      | bearer_contexts_created.0.bearer_qos.pci                        | {string:eq}({abotprop.SUT.GTPV2.BER.CTXT.QOS.PCI})       |\\n      | bearer_contexts_created.0.bearer_qos.qci                        | {string:eq}({abotprop.SUT.3GPP.BEARER_QCI})              |\\n      | bearer_contexts_created.0.bearer_qos.max_bit_rate_ul            | {string:eq}({abotprop.SUT.MAX_BIT_RATE_UL})              |\\n      | bearer_contexts_created.0.bearer_qos.max_bit_rate_dl            | {string:eq}({abotprop.SUT.MAX_BIT_RATE_DL})              |\\n      | bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_ul     | {string:eq}({abotprop.SUT.GUARANTEED_BIT_RATE_UL})       |\\n      | bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_dl     | {string:eq}({abotprop.SUT.GUARANTEED_BIT_RATE_DL})       |\\n      | bearer_contexts_created.0.cause.cause_value                     | {string:eq}({abotprop.SUT.CAUSE.VALUE.REQUEST_ACCEPTED}) |\\n      | bearer_contexts_created.0.cause.cause_flags                     | {string:eq}({abotprop.SUT.CAUSE.CAUSE_FLAGS})            |\\n      | bearer_contexts_created.0.s1u_sgw.fq_teid.interface_type        | {string:eq}(1)                                           |\\n      | bearer_contexts_created.0.s1u_sgw.fq_teid.ipv4_flag             | {string:eq}({abotprop.SUT.GTPV2.IPV4.PRES})              |\\n      | bearer_contexts_created.0.s1u_sgw.fq_teid.ipv6_flag             | {string:eq}({abotprop.SUT.GTPV2.IPV6.ABS})               |\\n      | bearer_contexts_created.0.s1u_sgw.fq_teid.teid                  | save(S1_U_SGW_GTPU_UL_TEID)                              |\\n      | bearer_contexts_created.0.s1u_sgw.fq_teid.ipv4_add              | save(S1_U_SGW_GTPU_UL_IP)                                |\\n      #| bearer_contexts_created.0.s1u_sgw.fq_teid.ipv6_add              | {string:eq}(0)                                           |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.interface_type | {string:eq}({abotprop.SUT.GTPV2.PGW.S5_S8.INTERFACE_TYPE}) |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_flag      | {string:eq}({abotprop.SUT.GTPV2.IPV4.PRES})              |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv6_flag      | {string:eq}({abotprop.SUT.GTPV2.IPV6.ABS})               |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.teid           | save(S5S8_U_PGW_GTPU_UL_TEID)                            |\\n      | bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_add       | save(S5S8_U_PGW_GTPU_UL_IP)                              |\\n      #| bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv46_add      | {string:eq}(0)                                           |\\n      | bearer_contexts_created.0.charging_id                           | {string:eq}({abotprop.SUT.GTPV2.CHARG.ID.111})           |\\n      | bearer_contexts_created.0.bearer_flags                          | {string:eq}({abotprop.SUT.GTPV2.BEARER_FLAGS})           |\\n      | pgw.fq_csid.node_id_type                                        | {string:eq}(0)                                           |\\n      | pgw.fq_csid.node_id                                             | {string:eq}({abotprop.SUT.IPV4_ADDRESS})                 |\\n      | pgw.fq_csid.csid                                                | {string:eq}({abotprop.SUT.GTPV2.PGW.FQ.CSID})            |\\n      | sgw.fq_csid.node_id_type                                        | {string:eq}(0)                                           |\\n      | sgw.fq_csid.node_id                                             | {string:eq}({abotprop.SUT.IPV4_ADDRESS})                 |\\n      | sgw.fq_csid.csid                                                | {string:eq}(2)                                           |\\n      #| pgw.ldn                                                         | {string:eq}(A)                                           |\\n      #| sgw.ldn                                                         | {string:eq}(B)                                           |\\n      #| pgw_back_off_time.epc_timer.timer_unit                          | {string:eq}(2)                                           |\\n      #| pgw_back_off_time.epc_timer.timer_value                         | {string:eq}(1)                                           |\\n\\n\\n\\n\\n\\n## Initial Context Setup Request (Attach Accept) (MME sends to eNodeB : 1. SGW S1-U Tunnel Endpoint, 2. UE Static IP from SGW)\\n\\n    When I send S1AP message S1_INIT_CTXT_SET_REQ_NAS_ATTACH_ACC_ACTIVATE_DEF_B_REQ on interface S1-MME with the following details from node MME1 to eNodeB1:\\n    \\n      | parameter                                                                                                          | value                                                         |\\n      | mme_ue_s1ap_id                                                                                                     | $(MME_UE_S1AP_ID)                                             |\\n      | enb_ue_s1ap_id                                                                                                     | $(ENB_UE_S1AP_ID)                                             |\\n      | ue_ambr.dl                                                                                                         | {abotprop.SUT.UE.AMBR.UL}                                     |\\n      | ue_ambr.ul                                                                                                         | {abotprop.SUT.UE.AMBR.DL}                                     |\\n      | ue_security_capabilities.eea                                                                                       | {abotprop.SUT.S1AP.UE.SECURITY.CAPABILITY.EEA}                |\\n      | ue_security_capabilities.eia                                                                                       | {abotprop.SUT.S1AP.UE.SECURITY.CAPABILITY.EIA}                |\\n      | security_key                                                                                                       | {abotprop.SUT.SECURITY.KEY}                                   |\\n      | erab_to_be_setup_list.0.erab_id                                                                                    | {abotprop.SUT.EBI.0.EPS.BEAR.ID}                              |\\n      | erab_to_be_setup_list.0.gtp_teid                                                                                   | $(S1_U_SGW_GTPU_UL_TEID)                                      |\\n      | erab_to_be_setup_list.0.transport_layer_address                                                                    | $(S1_U_SGW_GTPU_UL_IP)                                        |\\n      | erab_to_be_setup_list.0.erab_level_qos.qci                                                                         | {abotprop.SUT.3GPP.BEARER_QCI}                                |\\n      | erab_to_be_setup_list.0.erab_level_qos.arp.priority_level                                                          | {abotprop.SUT.DEF.ERAB.ARP.PRIORITY.LEVEL}                    |\\n      | erab_to_be_setup_list.0.erab_level_qos.arp.preemption_vulnerability                                                | {abotprop.SUT.DEF.ERAB.ARP.PREEMPT.CAPABILITY}                |\\n      | erab_to_be_setup_list.0.erab_level_qos.arp.preemption_capability                                                   | {abotprop.SUT.DEF.ERAB.ARP.PREEMPT.VULNERABILITY}             |\\n      | erab_to_be_setup_list.0.nas_pdu.protocol_discriminator.emm                                                         | {abotprop.SUT.NAS.PROTO.EMM}                                  |\\n      | erab_to_be_setup_list.0.nas_pdu.security_header_type.plain                                                         | {abotprop.SUT.NAS.SECURITY.HEAD.PLAIN}                        |\\n      | erab_to_be_setup_list.0.nas_pdu.security_header_type.protected                                                     | {abotprop.SUT.NAS.SECURITY.HEAD.PROTECTED}                    |\\n      | erab_to_be_setup_list.0.nas_pdu.security_header_protocol_discriminator                                             | {abotprop.SUT.SECURITY_HEADER_PD}                             |\\n      | erab_to_be_setup_list.0.nas_pdu.message_authentication_code                                                        | {abotprop.SUT.NAS.AUTH.CODE}                                  |\\n      | erab_to_be_setup_list.0.nas_pdu.sequence_number                                                                    | flow_incr({abotprop.SUT.NAS.MME.SEQ.NO.OFFSET},1)             |\\n      | erab_to_be_setup_list.0.nas_pdu.message_type.emm                                                                   | {abotprop.SUT.NAS.ATTACH.ACC.MSG.EMM}                         |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.eps_attach_result                                                    | 1                                                             |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.gprs_timer.unit                                                      | {abotprop.SUT.NAS.ATTACH.ACC.GPRS.TIMER.UNIT}                 |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.gprs_timer.timer_value                                               | {abotprop.SUT.NAS.ATTACH.ACC.GPRS.TIMER.TIMER.VALUE}          |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.type_of_list                                                | {abotprop.SUT.NAS.TAU.TAI.LIST.TYPE.OF.LIST}                  |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.number_of_elements                                          | {abotprop.SUT.NAS.TAU.TAI.LIST.NO.OF.ELEM}                    |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.mcc                                                         | {abotprop.SUT.MCC}                                            |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.mnc                                                         | {abotprop.SUT.MNC}                                            |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.tac                                                         | {abotprop.SUT.TAC}                                            |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.protocol_discriminator.esm                                             | {abotprop.SUT.NAS.ESM.PROTO.ESM}                              |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.eps_bearer_identity.esm                                                | {abotprop.SUT.EBI.0.EPS.BEAR.ID}                              |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.pti                                                                    | {abotprop.SUT.NAS.ESM.PTI}                                    |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.message_type.esm                                                       | {abotprop.SUT.NAS.ATTACH.ACC.ACTIVATE.DEF.BEARER.REQ.MSG.ESM} |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.eps_quality_of_service.qci | {abotprop.SUT.3GPP.BEARER_QCI}                                |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.apn                        | {abotprop.SUT.3GPP.PDN1.APN}                                  |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.pdn_type                   | {abotprop.SUT.NAS.ESM.PDN.CON.REQ.PDN.TYPE}                   |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.pdn_address                | $(UE_IP)                                                      |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mcc                                                        | {abotprop.SUT.MCC}                                            |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mnc                                                        | {abotprop.SUT.MNC}                                            |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mme_group_id                                               | {abotprop.SUT.MME.GROUP.ID}                                   |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mme_code                                                   | {abotprop.SUT.MME.CODE}                                       |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.m_tmsi                                                     | {abotprop.SUT.EPS.GUTI.MTMSI}                                 |\\n\\n\\n    Then I receive and validate S1AP message S1_INIT_CTXT_SET_REQ_NAS_ATTACH_ACC_ACTIVATE_DEF_B_REQ on interface S1-MME with the following details on node eNodeB1 from MME1:\\n      | parameter                                                                                                          | value                                                                      |\\n      | mme_ue_s1ap_id                                                                                                     | {string:eq}($(MME_UE_S1AP_ID))                                             |\\n      | enb_ue_s1ap_id                                                                                                     | {string:eq}($(ENB_UE_S1AP_ID))                                             |\\n      | ue_ambr.dl                                                                                                         | {string:eq}({abotprop.SUT.UE.AMBR.UL})                                     |\\n      | ue_ambr.ul                                                                                                         | {string:eq}({abotprop.SUT.UE.AMBR.DL})                                     |\\n      | ue_security_capabilities.eea                                                                                       | {string:eq}({abotprop.SUT.S1AP.UE.SECURITY.CAPABILITY.EEA})                |\\n      | ue_security_capabilities.eia                                                                                       | {string:eq}({abotprop.SUT.S1AP.UE.SECURITY.CAPABILITY.EIA})                |\\n      | security_key                                                                                                       | {string:eq}({abotprop.SUT.SECURITY.KEY})                                   |\\n      | erab_to_be_setup_list.0.erab_id                                                                                    | save(ERAB_ID)                                                              |\\n      | erab_to_be_setup_list.0.gtp_teid                                                                                   | save(S1_U_SGW_GTPU_UL_TEID)                                                |\\n      | erab_to_be_setup_list.0.transport_layer_address                                                                    | save(S1_U_SGW_GTPU_UL_IP)                                                  |\\n      | erab_to_be_setup_list.0.erab_level_qos.qci                                                                         | {string:eq}({abotprop.SUT.3GPP.BEARER_QCI})                                |\\n      | erab_to_be_setup_list.0.erab_level_qos.arp.priority_level                                                          | {string:eq}({abotprop.SUT.DEF.ERAB.ARP.PRIORITY.LEVEL})                    |\\n      | erab_to_be_setup_list.0.erab_level_qos.arp.preemption_vulnerability                                                | {string:eq}({abotprop.SUT.DEF.ERAB.ARP.PREEMPT.CAPABILITY})                |\\n      | erab_to_be_setup_list.0.erab_level_qos.arp.preemption_capability                                                   | {string:eq}({abotprop.SUT.DEF.ERAB.ARP.PREEMPT.VULNERABILITY})             |\\n      | erab_to_be_setup_list.0.nas_pdu.protocol_discriminator.emm                                                         | {string:eq}({abotprop.SUT.NAS.PROTO.EMM})                                  |\\n      | erab_to_be_setup_list.0.nas_pdu.security_header_type.plain                                                         | {string:eq}({abotprop.SUT.NAS.SECURITY.HEAD.PLAIN})                        |\\n      | erab_to_be_setup_list.0.nas_pdu.security_header_type.protected                                                     | {string:eq}({abotprop.SUT.NAS.SECURITY.HEAD.PROTECTED})                    |\\n      | erab_to_be_setup_list.0.nas_pdu.security_header_protocol_discriminator                                             | {string:eq}({abotprop.SUT.SECURITY_HEADER_PD})                             |\\n      | erab_to_be_setup_list.0.nas_pdu.message_authentication_code                                                        | save(MAC)                                                                  |\\n      | erab_to_be_setup_list.0.nas_pdu.sequence_number                                                                    | save(NAS_MME_SEQ_NO)                                                       |\\n      | erab_to_be_setup_list.0.nas_pdu.message_type.emm                                                                   | {string:eq}({abotprop.SUT.NAS.ATTACH.ACC.MSG.EMM})                         |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.eps_attach_result                                                    | {string:eq}(1)                                                             |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.gprs_timer.unit                                                      | {string:eq}({abotprop.SUT.NAS.ATTACH.ACC.GPRS.TIMER.UNIT})                 |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.gprs_timer.timer_value                                               | {string:eq}({abotprop.SUT.NAS.ATTACH.ACC.GPRS.TIMER.TIMER.VALUE})          |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.type_of_list                                                | {string:eq}({abotprop.SUT.NAS.TAU.TAI.LIST.TYPE.OF.LIST})                  |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.number_of_elements                                          | {string:eq}({abotprop.SUT.NAS.TAU.TAI.LIST.NO.OF.ELEM})                    |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.mcc                                                         | {string:eq}({abotprop.SUT.MCC})                                            |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.mnc                                                         | {string:eq}({abotprop.SUT.MNC})                                            |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.tac                                                         | {string:eq}({abotprop.SUT.TAC})                                            |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.protocol_discriminator.esm                                             | {string:eq}({abotprop.SUT.NAS.ESM.PROTO.ESM})                              |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.eps_bearer_identity.esm                                                | {string:eq}({abotprop.SUT.EBI.0.EPS.BEAR.ID})                              |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.pti                                                                    | {string:eq}({abotprop.SUT.NAS.ESM.PTI})                                    |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.message_type.esm                                                       | {string:eq}({abotprop.SUT.NAS.ATTACH.ACC.ACTIVATE.DEF.BEARER.REQ.MSG.ESM}) |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.eps_quality_of_service.qci | {string:eq}({abotprop.SUT.3GPP.BEARER_QCI})                                |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.apn                        | {string:eq}({abotprop.SUT.3GPP.PDN1.APN})                                  |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.pdn_type                   | {string:eq}({abotprop.SUT.NAS.ESM.PDN.CON.REQ.PDN.TYPE})                   |\\n      | erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.pdn_address                | save(UE_IP)                                                                |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mcc                                                        | {abotprop.SUT.MCC}                                                         |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mnc                                                        | {string:eq}({abotprop.SUT.MNC})                                            |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mme_group_id                                               | {string:eq}({abotprop.SUT.MME.GROUP.ID})                                   |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mme_code                                                   | {string:eq}({abotprop.SUT.MME.CODE})                                       |\\n      | erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.m_tmsi                                                     | save(GUTI_M_TMSI)                                                          |\\n\\n\\n## Initial Context Setup Response (eNodeB sends to MME : 1. ENB S1-U Tunnel Endpoint)\\n\\n    When I send S1AP message S1_INIT_CTXT_SET_RES on interface S1-MME with the following details from node eNodeB1 to MME1:\\n      | parameter                                 | value             |\\n      | mme_ue_s1ap_id                            | $(MME_UE_S1AP_ID) |\\n      | enb_ue_s1ap_id                            | $(ENB_UE_S1AP_ID) |\\n      | erab_setup_list.0.erab_id                 | $(ERAB_ID)        |\\n      | erab_setup_list.0.gtp_teid                | incr(10000000,1)  |\\n      | erab_setup_list.0.transport_layer_address | 10.10.0.11        |\\n\\n    Then I receive and validate S1AP message S1_INIT_CTXT_SET_RES on interface S1-MME with the following details on node MME1 from eNodeB1:\\n      | parameter                                 | value                          |\\n      | mme_ue_s1ap_id                            | {string:eq}($(MME_UE_S1AP_ID)) |\\n      | enb_ue_s1ap_id                            | {string:eq}($(ENB_UE_S1AP_ID)) |\\n      | erab_setup_list.0.erab_id                 | save(ERAB_ID)                  |\\n      | erab_setup_list.0.gtp_teid                | save(S1_U_GNB_GTPU_DL_TEID)    |\\n      | erab_setup_list.0.transport_layer_address | save(S1_U_GNB_GTPU_DL_IP)      |\\n\\n    When I send S1AP message S1_UPLINK_NAS_ATTACH_COMPLETE_ACTIVATE_DEF_B_ACC on interface S1-MME with the following details from node eNodeB1 to MME1:\\n    \\n      | parameter                                                                                          | value                                            |\\n      | mme_ue_s1ap_id                                                                                     | $(MME_UE_S1AP_ID)                                |\\n      | enb_ue_s1ap_id                                                                                     | $(ENB_UE_S1AP_ID)                                |\\n      | nas_pdu.protocol_discriminator.emm                                                                 | {abotprop.SUT.NAS.PROTO.EMM}                     |\\n      | nas_pdu.security_header_type.plain                                                                 | {abotprop.SUT.NAS.SECURITY.HEAD.PLAIN}           |\\n      | nas_pdu.message_type.emm                                                                           | {abotprop.SUT.NAS.ATTACH.COM.MSG.EMM}            |\\n      | nas_pdu.security_header_type.protected                                                             | {abotprop.SUT.NAS.SECURITY.HEAD.PROTECTED}       |\\n      | nas_pdu.security_header_protocol_discriminator                                                     | {abotprop.SUT.SECURITY_HEADER_PD}                |\\n      | nas_pdu.message_authentication_code                                                                | {abotprop.SUT.NAS.AUTH.CODE}                     |\\n      | nas_pdu.sequence_number                                                                            | flow_incr({abotprop.SUT.NAS.UE.SEQ.NO.OFFSET},1) |\\n      | nas_pdu.esm_message.protocol_discriminator.esm                                                     | {abotprop.SUT.NAS.ESM.PROTO.ESM}                 |\\n      | nas_pdu.esm_message.eps_bearer_identity.esm                                                        | {abotprop.SUT.EBI.0.EPS.BEAR.ID}                 |\\n      | nas_pdu.esm_message.pti                                                                            | {abotprop.SUT.NAS.ESM.PTI}                       |\\n      | nas_pdu.esm_message.message_type.esm                                                               | {abotprop.SUT.NAS.ESM.MSG.TYPE.ESM}              |\\n      | nas_pdu.esm_message.activate_default_eps_bearer_context_accept.pco.configuration_protocol          | {abotprop.SUT.NAS.ESM.PCO.CONFIG.PROTO}          |\\n      | nas_pdu.esm_message.activate_default_eps_bearer_context_accept.pco.num_protocol_id_or_container_id | {abotprop.SUT.NAS.ESM.PCO.CONFIG.PID.OR.CID}     |\\n      | eutran_cgi.plmn_identity.mcc                                                                       | {abotprop.SUT.MCC}                               |\\n      | eutran_cgi.plmn_identity.mnc                                                                       | {abotprop.SUT.MNC}                               |\\n      | eutran_cgi.cell_id                                                                                 | {abotprop.SUT.CGI.CELL.ID}                       |\\n      | tai.plmn_identity.mcc                                                                              | {abotprop.SUT.MCC}                               |\\n      | tai.plmn_identity.mnc                                                                              | {abotprop.SUT.MNC}                               |\\n      | tai.tac                                                                                            | {abotprop.SUT.TAC}                               |\\n\\n    Then I receive and validate S1AP message S1_UPLINK_NAS_ATTACH_COMPLETE_ACTIVATE_DEF_B_ACC on interface S1-MME with the following details on node MME1 from eNodeB1:\\n      | parameter                                                                                          | value                                                     |\\n      | mme_ue_s1ap_id                                                                                     | {string:eq}($(MME_UE_S1AP_ID))                            |\\n      | enb_ue_s1ap_id                                                                                     | {string:eq}($(ENB_UE_S1AP_ID))                            |\\n      | nas_pdu.protocol_discriminator.emm                                                                 | {string:eq}({abotprop.SUT.NAS.PROTO.EMM})                 |\\n      | nas_pdu.security_header_type.plain                                                                 | {string:eq}({abotprop.SUT.NAS.SECURITY.HEAD.PLAIN})       |\\n      | nas_pdu.message_type.emm                                                                           | {string:eq}({abotprop.SUT.NAS.ATTACH.COM.MSG.EMM})        |\\n      | nas_pdu.security_header_type.protected                                                             | {string:eq}({abotprop.SUT.NAS.SECURITY.HEAD.PROTECTED})   |\\n      | nas_pdu.security_header_protocol_discriminator                                                     | {string:eq}({abotprop.SUT.SECURITY_HEADER_PD})            |\\n      | nas_pdu.message_authentication_code                                                                | save(MAC)                                                 |\\n      | nas_pdu.sequence_number                                                                            | save(NAS_UE_SEQ_NO)                                       |\\n      | nas_pdu.esm_message.protocol_discriminator.esm                                                     | {string:eq}({abotprop.SUT.NAS.ESM.PROTO.ESM})             |\\n      | nas_pdu.esm_message.eps_bearer_identity.esm                                                        | {string:eq}({abotprop.SUT.EBI.0.EPS.BEAR.ID})             |\\n      | nas_pdu.esm_message.pti                                                                            | {string:eq}({abotprop.SUT.NAS.ESM.PTI})                   |\\n      | nas_pdu.esm_message.message_type.esm                                                               | {string:eq}({abotprop.SUT.NAS.ESM.MSG.TYPE.ESM})          |\\n      | nas_pdu.esm_message.activate_default_eps_bearer_context_accept.pco.configuration_protocol          | {string:eq}({abotprop.SUT.NAS.ESM.PCO.CONFIG.PROTO})      |\\n      | nas_pdu.esm_message.activate_default_eps_bearer_context_accept.pco.num_protocol_id_or_container_id | {string:eq}({abotprop.SUT.NAS.ESM.PCO.CONFIG.PID.OR.CID}) |\\n      | eutran_cgi.plmn_identity.mcc                                                                       | {integer:eq}({abotprop.SUT.MCC})                          |\\n      | eutran_cgi.plmn_identity.mnc                                                                       | {integer:eq}({abotprop.SUT.MNC})                          |\\n      | eutran_cgi.cell_id                                                                                 | {string:eq}({abotprop.SUT.CGI.CELL.ID})                   |\\n      | tai.plmn_identity.mcc                                                                              | {integer:eq}({abotprop.SUT.MCC})                          |\\n      | tai.plmn_identity.mnc                                                                              | {integer:eq}({abotprop.SUT.MNC})                          |\\n      | tai.tac                                                                                            | {integer:eq}({abotprop.SUT.TAC})                          |\\n\\n\\n\\n## S11 - Modify Bearer (MME sends to SGW : 1. eNodeB S1-U Tunnel Endpoint)\\n\\n    When I send GTPV2C message GTPV2C_MODIFY_BEARER_REQUEST on interface S11 with the following details from node MME1 to SGW1:\\n      | parameter                                                    | value                                     |\\n      | header.message_type                                          | 34                                        |\\n      | header.teid                                                  | $(GTPV2C_HDR_UL_TEID_SGW_S11)             |\\n      | header.seq_number                                            | incr(2,8)                                 |\\n      | meid                                                         | incr(123456789012345,1)                   |\\n      | serving_network.mcc                                          | {abotprop.SUT.MCC}                        |\\n      | serving_network.mnc                                          | {abotprop.SUT.MNC}                        |\\n      | rat_type                                                     | {abotprop.SUT.GTPV2.RAT.TYPE.EUTRAN}      |\\n      | indication                                                   | {abotprop.SUT.GTPV2_INDICATION}           |\\n      #| ambr.apn_ambr_uplink                                         | {abotprop.SUT.MAX_BIT_RATE_UL}            |\\n      #| ambr.apn_ambr_downlink                                       | {abotprop.SUT.MAX_BIT_RATE_DL}            |\\n      #| delay_dwnlink_packet_notification_request.delay_value        | {abotprop.SUT.GTPV2.PACK.REQ.DELAY.VALUE} |\\n      #| recovery                                                     | {abotprop.SUT.GTPV2.RECV.RESTART.COUNTER} |\\n      #| ue_timezone.time_zone                                        | {abotprop.SUT.GTPV2.UE.TIMEZONE}          |\\n      #| ue_timezone.daylight_saving_time                             | {abotprop.SUT.UE.DAYLIGHT.SAVING.TIME}    |\\n      | bearer_contexts_to_modify.0.eps_bearer_id                    | {abotprop.SUT.EBI.0.EPS.BEAR.ID}          |\\n      | bearer_contexts_to_modify.0.s1_enodeb.fq_teid.interface_type | 0                                         |\\n      | bearer_contexts_to_modify.0.s1_enodeb.fq_teid.ipv4_flag      | {abotprop.SUT.GTPV2.IPV4.PRES}            |\\n      | bearer_contexts_to_modify.0.s1_enodeb.fq_teid.ipv6_flag      | {abotprop.SUT.GTPV2.IPV6.ABS}             |\\n      | bearer_contexts_to_modify.0.s1_enodeb.fq_teid.teid           | $(S1_U_GNB_GTPU_DL_TEID)                  |\\n      | bearer_contexts_to_modify.0.s1_enodeb.fq_teid.ipv4_add       | $(S1_U_GNB_GTPU_DL_IP)                    |\\n      #| bearer_contexts_to_modify.0.s1_enodeb.fq_teid.ipv6_add       | {abotprop.SUT.GTPV2.IPV6.ABS}             |\\n      #| bearer_contexts_to_remove.0.eps_bearer_id                    | 7                                         |\\n      #| user_location_info.uli_flags                                 | {abotprop.SUT.USER_LOCATION.INFO.ULI_FLAGS} |\\n      #| user_location_info.tai.plmn_identity.mcc                     | {abotprop.SUT.MCC}                        |\\n      #| user_location_info.tai.plmn_identity.mnc                     | {abotprop.SUT.MNC}                        |\\n      #| user_location_info.tai.tac                                   | {abotprop.SUT.TAC}                        |\\n      | mme.fq_csid.node_id_type                                     | 0                                         |\\n      | mme.fq_csid.node_id                                          | {abotprop.SUT.IPV4_ADDRESS}               |\\n      | mme.fq_csid.csid                                             | 1                                         |\\n\\n    Then I receive and validate GTPV2C message GTPV2C_MODIFY_BEARER_REQUEST on interface S11 with the following details on node SGW1 from MME1:\\n      | parameter                                                    | value                                                  |\\n      | header.message_type                                          | {string:eq}(34)                                        |\\n      | header.teid                                                  | save(GTPV2C_HDR_UL_TEID_SGW_S11)                       |\\n      | header.seq_number                                            | save(GTPV2C_HDR_SEQ_NO_S11)                            |\\n      | meid                                                         | save(MEID)                                             |\\n      | serving_network.mcc                                          | {integer:eq}({abotprop.SUT.MCC})                       |\\n      | serving_network.mnc                                          | {integer:eq}({abotprop.SUT.MNC})                       |\\n      | rat_type                                                     | {string:eq}({abotprop.SUT.GTPV2.RAT.TYPE.EUTRAN})      |\\n      | indication                                                   | {string:eq}({abotprop.SUT.GTPV2_INDICATION})           |\\n      #| ambr.apn_ambr_uplink                                         | {string:eq}({abotprop.SUT.MAX_BIT_RATE_UL})            |\\n      #| ambr.apn_ambr_downlink                                       | {string:eq}({abotprop.SUT.MAX_BIT_RATE_DL})            |\\n      #| delay_dwnlink_packet_notification_request.delay_value        | {string:eq}({abotprop.SUT.GTPV2.PACK.REQ.DELAY.VALUE}) |\\n      #| recovery                                                     | {string:eq}({abotprop.SUT.GTPV2.RECV.RESTART.COUNTER}) |\\n      #| ue_timezone.time_zone                                        | {string:eq}({abotprop.SUT.GTPV2.UE.TIMEZONE})          |\\n      #| ue_timezone.daylight_saving_time                             | {string:eq}({abotprop.SUT.UE.DAYLIGHT.SAVING.TIME})    |\\n      | bearer_contexts_to_modify.0.eps_bearer_id                    | {string:eq}({abotprop.SUT.EBI.0.EPS.BEAR.ID})          |\\n      | bearer_contexts_to_modify.0.s1_enodeb.fq_teid.interface_type | {string:eq}(0)                                         |\\n      | bearer_contexts_to_modify.0.s1_enodeb.fq_teid.ipv4_flag      | {string:eq}({abotprop.SUT.GTPV2.IPV4.PRES})            |\\n      | bearer_contexts_to_modify.0.s1_enodeb.fq_teid.ipv6_flag      | {string:eq}({abotprop.SUT.GTPV2.IPV6.ABS})             |\\n      | bearer_contexts_to_modify.0.s1_enodeb.fq_teid.teid           | save(S1_U_GNB_GTPU_DL_TEID)                            |\\n      | bearer_contexts_to_modify.0.s1_enodeb.fq_teid.ipv4_add       | save(S1_U_GNB_GTPU_DL_IP)                              |\\n      #| bearer_contexts_to_modify.0.s1_enodeb.fq_teid.ipv6_add       | {string:eq}({abotprop.SUT.GTPV2.IPV6.ABS})             |\\n      #| bearer_contexts_to_remove.0.eps_bearer_id                    | {string:eq}(7)                                         |\\n      #| user_location_info.uli_flags                                 | {string:eq}({abotprop.SUT.USER_LOCATION.INFO.ULI_FLAGS}) |\\n      #| user_location_info.tai.plmn_identity.mcc                     | {string:eq}({abotprop.SUT.MCC})                        |\\n      #| user_location_info.tai.plmn_identity.mnc                     | {string:eq}({abotprop.SUT.MNC})                        |\\n      #| user_location_info.tai.tac                                   | {string:eq}({abotprop.SUT.TAC})                        |\\n      | mme.fq_csid.node_id_type                                     | {string:eq}(0)                                         |\\n      | mme.fq_csid.node_id                                          | {string:eq}({abotprop.SUT.IPV4_ADDRESS})               |\\n      | mme.fq_csid.csid                                             | {string:eq}(1)                                         |\\n\\n\\n## S11 - Modify Bearer Response (SGW sends to MME : 1. Current SGW S1-U Tunnel Endpoint - that was sent in previous GTPV2C_CREATE_SESSION_RESPONSE to MME)\\n\\n    When I send GTPV2C message GTPV2C_MODIFY_BEARER_RESPONSE on interface S11 with the following details from node SGW1 to MME1:\\n    \\n      | parameter                                                | value                                       |\\n      | header.message_type                                      | 35                                          |\\n      | header.teid                                              | $(GTPV2C_HDR_DL_TEID_MME_S11)               |\\n      | header.seq_number                                        | $(GTPV2C_HDR_SEQ_NO_S11)                    |\\n      | cause.cause_value                                        | {abotprop.SUT.CAUSE.VALUE.REQUEST_ACCEPTED} |\\n      | cause.cause_flags                                        | {abotprop.SUT.CAUSE.CAUSE_FLAGS}            |\\n      #| msisdn                                                   | $(MSISDN)                                   |\\n      #| linked.eps_bearer_id                                     | {abotprop.SUT.3GPP.LINKED.EPS_BEARER_ID1}   |\\n      #| ambr.apn_ambr_uplink                                     | {abotprop.SUT.MAX_BIT_RATE_UL}              |\\n      #| ambr.apn_ambr_downlink                                   | {abotprop.SUT.MAX_BIT_RATE_DL}              |\\n      #| apn_restriction_value                                    | {abotprop.SUT.GTPV2.APN.REST.VALUE.PUBLIC}  |\\n      #| protocol_config_options                                  | {abotprop.SUT.GTPV2.PCO}                    |\\n      #| change_reporting_actn                                    | {abotprop.SUT.GTPV2.CHANGE.REPORT.ACTN}     |\\n      #| csg_information_reporting_action.csg_info                | {abotprop.SUT.GTPV2.CSG.INFO}               |\\n      #| charging_gateway_name.fqdn                               | {abotprop.SUT.CHARGING_GATEWAY_DOMAIN}      |\\n      | indication                                               | {abotprop.SUT.GTPV2_INDICATION}             |\\n      | bearer_contexts_modified.0.eps_bearer_id                 | {abotprop.SUT.EBI.0.EPS.BEAR.ID}            |\\n      | bearer_contexts_modified.0.s1_sgw.fq_teid.interface_type | 1                                           |\\n      | bearer_contexts_modified.0.s1_sgw.fq_teid.ipv4_flag      | {abotprop.SUT.GTPV2.IPV4.PRES}              |\\n      | bearer_contexts_modified.0.s1_sgw.fq_teid.ipv6_flag      | {abotprop.SUT.GTPV2.IPV6.ABS}               |\\n      | bearer_contexts_modified.0.s1_sgw.fq_teid.teid           | incr(20000000,1)                            |\\n      | bearer_contexts_modified.0.s1_sgw.fq_teid.ipv4_add       | 10.10.0.12                                  |\\n      #| bearer_contexts_modified.0.s1_sgw.fq_teid.ipv6_add       | {abotprop.SUT.GTPV2.IPV6.ABS}               |\\n      | bearer_contexts_modified.0.cause.cause_value             | {abotprop.SUT.CAUSE.VALUE.REQUEST_ACCEPTED} |\\n      | bearer_contexts_modified.0.cause.cause_flags             | {abotprop.SUT.CAUSE.CAUSE_FLAGS}            |\\n      | bearer_contexts_modified.0.bearer_flags                  | 1                                           |\\n      | bearer_contexts_modified.0.charging_id                   | {abotprop.SUT.GTPV2.CHARG.ID.111}           |\\n      #| bearer_contexts_to_remove.0.eps_bearer_id                | 7                                           |\\n      #| bearer_contexts_to_remove.0.cause.cause_value            | 16                                          |\\n      #| bearer_contexts_to_remove.0.cause.cause_flags            | 0                                           |\\n      | sgw.fq_csid.node_id_type                                 | 0                                           |\\n      | sgw.fq_csid.node_id                                      | {abotprop.SUT.IPV4_ADDRESS}                 |\\n      | sgw.fq_csid.csid                                         | 2                                           |\\n\\n    Then I receive and validate GTPV2C message GTPV2C_MODIFY_BEARER_RESPONSE on interface S11 with the following details on node MME1 from SGW1:\\n      | parameter                                                | value                                                    |\\n      | header.message_type                                      | {string:eq}(35)                                          |\\n      | header.teid                                              | save(GTPV2C_HDR_DL_TEID_MME_S11)                         |\\n      | header.seq_number                                        | save(GTPV2C_HDR_SEQ_NO_S11)                              |\\n      | cause.cause_value                                        | {string:eq}({abotprop.SUT.CAUSE.VALUE.REQUEST_ACCEPTED}) |\\n      | cause.cause_flags                                        | {string:eq}({abotprop.SUT.CAUSE.CAUSE_FLAGS})            |\\n      #| msisdn                                                   | save(MSISDN)                                             |\\n      #| linked.eps_bearer_id                                     | {string:eq}({abotprop.SUT.3GPP.LINKED.EPS_BEARER_ID1})   |\\n      #| ambr.apn_ambr_uplink                                     | {string:eq}({abotprop.SUT.MAX_BIT_RATE_UL})              |\\n      #| ambr.apn_ambr_downlink                                   | {string:eq}({abotprop.SUT.MAX_BIT_RATE_DL})              |\\n      #| apn_restriction_value                                    | {string:eq}({abotprop.SUT.GTPV2.APN.REST.VALUE.PUBLIC})  |\\n      #| protocol_config_options                                  | {string:eq}({abotprop.SUT.GTPV2.PCO})                    |\\n      #| change_reporting_actn                                    | {string:eq}({abotprop.SUT.GTPV2.CHANGE.REPORT.ACTN})     |\\n      #| csg_information_reporting_action.csg_info                | {string:eq}({abotprop.SUT.GTPV2.CSG.INFO})               |\\n      #| charging_gateway_name.fqdn                               | {string:eq}({abotprop.SUT.CHARGING_GATEWAY_DOMAIN})      |\\n      | indication                                               | {string:eq}({abotprop.SUT.GTPV2_INDICATION})             |\\n      | bearer_contexts_modified.0.eps_bearer_id                 | {string:eq}({abotprop.SUT.EBI.0.EPS.BEAR.ID})            |\\n      | bearer_contexts_modified.0.s1_sgw.fq_teid.interface_type | {string:eq}(1)                                           |\\n      | bearer_contexts_modified.0.s1_sgw.fq_teid.ipv4_flag      | {string:eq}({abotprop.SUT.GTPV2.IPV4.PRES})              |\\n      | bearer_contexts_modified.0.s1_sgw.fq_teid.ipv6_flag      | {string:eq}({abotprop.SUT.GTPV2.IPV6.ABS} )              |\\n      | bearer_contexts_modified.0.s1_sgw.fq_teid.teid           | save(S1_U_SGW_GTPU_UL_TEID)                              |\\n      | bearer_contexts_modified.0.s1_sgw.fq_teid.ipv4_add       | save(S1_U_SGW_GTPU_UL_IP)                                |\\n      #| bearer_contexts_modified.0.s1_sgw.fq_teid.ipv6_add       | {string:eq}({abotprop.SUT.GTPV2.IPV6.ABS})               |\\n      | bearer_contexts_modified.0.cause.cause_value             | {string:eq}({abotprop.SUT.CAUSE.VALUE.REQUEST_ACCEPTED}) |\\n      | bearer_contexts_modified.0.cause.cause_flags             | {string:eq}({abotprop.SUT.CAUSE.CAUSE_FLAGS})            |\\n      | bearer_contexts_modified.0.bearer_flags                  | {string:eq}(1)                                           |\\n      | bearer_contexts_modified.0.charging_id                   | {string:eq}({abotprop.SUT.GTPV2.CHARG.ID.111})           |\\n      #| bearer_contexts_to_remove.0.eps_bearer_id                | {string:eq}(7)                                           |\\n      #| bearer_contexts_to_remove.0.cause.cause_value            | {string:eq}(16)                                          |\\n      #| bearer_contexts_to_remove.0.cause.cause_flags            | {string:eq}(0)                                           |\\n      | sgw.fq_csid.node_id_type                                 | {string:eq}(0)                                           |\\n      | sgw.fq_csid.node_id                                      | {string:eq}({abotprop.SUT.IPV4_ADDRESS})                 |\\n      | sgw.fq_csid.csid                                         | {string:eq}(2)                                           |\\n\\n\\n    Then I finish load scenario within 30 Seconds on interface S1-MME,S5-S8,S11,S6A,GX with the following parameters and wait to generate report:\\n      | parameter     | value          |\\n      | load-test-nsa | initial-attach |\\n\\n\\n\\n\",\n        \"keywords\": [\n            \"@initial-attach-test\",\n            \"@2-attach-procedure-for-eps-services\",\n            \"@23401-4g\",\n            \"@4g-core-sanity\",\n            \"@4g-core\"\n        ],\n        \"file_size\": \"181 KB\",\n        \"highest_ie_level\": 6\n    }\n}"
        }
      ]
    },
    {
      "name": "12. Latest executed FF list",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/current_feature_file_list?foldername=17Jul2023-07:34:48.096650@initial-attach-test",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "current_feature_file_list"
          ],
          "query": [
            {
              "key": "foldername",
              "value": "17Jul2023-07:34:48.096650@initial-attach-test"
            }
          ]
        }
      },
      "response": [
        {
          "name": "12. Latest executed FF list",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/current_feature_file_list?foldername=17Jul2023-07:34:48.096650@initial-attach-test",
              "protocol": "http",
              "host": [
                "{{abot_endpoint}}"
              ],
              "path": [
                "abotrest",
                "abot",
                "api",
                "v5",
                "current_feature_file_list"
              ],
              "query": [
                {
                  "key": "foldername",
                  "value": "17Jul2023-07:34:48.096650@initial-attach-test"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "key": "Date",
              "value": "Mon, 17 Jul 2023 07:56:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "109"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,Authorization"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,PUT,POST,DELETE,OPTIONS"
            }
          ],
          "cookie": [],
          "body": "{\n    \"data\": [\n        {\n            \"ffName\": \"Initial_Attach.feature\",\n            \"ffFolder\": \"initial_attach\",\n            \"type\": \"Sequential\"\n        }\n    ],\n    \"status\": \"OK\"\n}"
        }
      ]
    },
    {
      "name": "13. Download TestAutomation Log",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/files?path=artifacts/17Jul2023-07:34:48.096650@initial-attach-test/initial_attach/logs/TestAutomationLog.log",
          "protocol": "http",
          "host": [
            "{{abot_endpoint}}"
          ],
          "path": [
            "abotrest",
            "abot",
            "api",
            "v5",
            "files"
          ],
          "query": [
            {
              "key": "path",
              "value": "artifacts/17Jul2023-07:34:48.096650@initial-attach-test/initial_attach/logs/TestAutomationLog.log"
            }
          ]
        }
      },
      "response": [
        {
          "name": "13. Download TestAutomation Log",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{abot_endpoint}}/abotrest/abot/api/v5/files?path=artifacts/17Jul2023-07:34:48.096650@initial-attach-test/initial_attach/logs/TestAutomationLog.log",
              "protocol": "http",
              "host": [
                "{{abot_endpoint}}"
              ],
              "path": [
                "abotrest",
                "abot",
                "api",
                "v5",
                "files"
              ],
              "query": [
                {
                  "key": "path",
                  "value": "artifacts/17Jul2023-07:34:48.096650@initial-attach-test/initial_attach/logs/TestAutomationLog.log"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "nginx/1.14.0 (Ubuntu)"
            },
            {
              "key": "Date",
              "value": "Mon, 17 Jul 2023 08:00:39 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "178488"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type,Authorization"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET,PUT,POST,DELETE,OPTIONS"
            }
          ],
          "cookie": [],
          "body": "{\n    \"status\": \"OK\",\n    \"result\": {\n        \"file\": \"/var/lib/abot-volte-pro/artifacts/17Jul2023-07:34:48.096650@initial-attach-test/initial_attach/logs/TestAutomationLog.log\",\n        \"mime\": \"text/plain\",\n        \"message\": \"\",\n        \"message_css\": \"\",\n        \"download\": \"<div class=\\\"\\\"><a class=\\\"btn-download btn btn-lg btn-primary\\\" href=\\\"/var/lib/abot-volte-pro/artifacts/17Jul2023-07:34:48.096650@initial-attach-test/initial_attach/logs/TestAutomationLog.log\\\" target=\\\"_blank\\\"><i class=\\\"glyphicon glyphicon-download-alt\\\"></i> Download</a></div>\",\n        \"showDownload\": false,\n        \"containerScroll\": true,\n        \"content\": \"2023-07-17 07:34:20,022:logger.py:176:INFO **********************************************************************************************************************\\n2023-07-17 07:34:20,022:environment.py:24:INFO Test Started at :2023-07-17 07:34:20.022773\\n2023-07-17 07:34:20,038:environment.py:37:DEBUG Allow Load Concurrency Flag:False\\n2023-07-17 07:34:20,063:pport_repo.py:252:DEBUG Checking port availability for ABOT:9001\\n2023-07-17 07:34:20,153:pport_repo.py:87:DEBUG Write userPorts.json file for Username:admin, IP:192.168.40.76, Size:1\\n2023-07-17 07:34:20,345:panalytics.py:92:INFO This ABot Instance is already registered with Analytics\\n2023-07-17 07:34:20,348:mongo_service.py:54:DEBUG Dropping MongoDB: admin\\n2023-07-17 07:34:20,460:environment.py:59:INFO ABot bringing up TEST BED from ABotConfig.properties\\n2023-07-17 07:34:20,460:pnetlink.py:343:DEBUG Populating ABot local IP addr list\\n2023-07-17 07:34:20,460:pnetlink.py:356:DEBUG IP Addr for interface[lo]: 127.0.0.1\\n2023-07-17 07:34:20,461:pnetlink.py:356:DEBUG IP Addr for interface[ens160]: 192.168.40.76\\n2023-07-17 07:34:20,461:pnetlink.py:356:DEBUG IP Addr for interface[ens192]: 192.168.2.181\\n2023-07-17 07:34:20,461:environment.py:62:INFO ABot bringing up SSH Connections from ABotConfig.properties\\n2023-07-17 07:34:20,463:ssh_service.py:84:DEBUG SSH --> Node ABOT abot@192.168.40.76 (Keyfile=/home/abot/.ssh/id_rsa password=None)...[CONNECTING]\\n2023-07-17 07:34:20,582:ssh_service.py:91:INFO SSH --> Node ABOT abot@192.168.40.76 (Keyfile=/home/abot/.ssh/id_rsa password=None)...[CONNECTED]\\n2023-07-17 07:34:20,582:ssh_service.py:53:INFO SSH -->  eNodeB1 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  eNodeB2 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  gNodeB1 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  gNodeB2 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  MME1 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  MME2 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  AMF1 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  AMF2 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  AUSF1 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  AUSF2 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  UDM1 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  UDM2 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  UDR1 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  SMF1 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  SMF2 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  UPF1 ...[DISABLED]\\n2023-07-17 07:34:20,583:ssh_service.py:53:INFO SSH -->  UPF2 ...[DISABLED]\\n2023-07-17 07:34:20,584:ssh_service.py:53:INFO SSH -->  UPF3 ...[DISABLED]\\n2023-07-17 07:34:20,584:ssh_service.py:53:INFO SSH -->  PCF1 ...[DISABLED]\\n2023-07-17 07:34:20,584:ssh_service.py:53:INFO SSH -->  PCF2 ...[DISABLED]\\n2023-07-17 07:34:20,584:ssh_service.py:53:INFO SSH -->  NSSF1 ...[DISABLED]\\n2023-07-17 07:34:20,584:ssh_service.py:53:INFO SSH -->  NRF1 ...[DISABLED]\\n2023-07-17 07:34:20,584:ssh_service.py:53:INFO SSH -->  CBCF1 ...[DISABLED]\\n2023-07-17 07:34:20,585:ssh_service.py:53:INFO SSH -->  CIOT_GW1 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  SGW1 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  SGW2 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  PGW1 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  PGW2 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  HSS1 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  PCRF1 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  VPCRF1 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  AF1 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  OCS1 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  OFCS1 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  SGWC1 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  SGWC2 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  SGWU1 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  SGWU2 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  PGWC1 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  PGWC2 ...[DISABLED]\\n2023-07-17 07:34:20,586:ssh_service.py:53:INFO SSH -->  PGWU1 ...[DISABLED]\\n2023-07-17 07:34:20,587:ssh_service.py:53:INFO SSH -->  PGWU2 ...[DISABLED]\\n2023-07-17 07:34:20,587:ssh_service.py:53:INFO SSH -->  SPGWC_SMF1 ...[DISABLED]\\n2023-07-17 07:34:20,587:ssh_service.py:53:INFO SSH -->  SPGWU_UPF1 ...[DISABLED]\\n2023-07-17 07:34:20,587:ssh_service.py:53:INFO SSH -->  PGWC_SMF1 ...[DISABLED]\\n2023-07-17 07:34:20,587:ssh_service.py:53:INFO SSH -->  PGWU_UPF1 ...[DISABLED]\\n2023-07-17 07:34:20,587:ssh_service.py:53:INFO SSH -->  HSS_UDM1 ...[DISABLED]\\n2023-07-17 07:34:20,587:ssh_service.py:53:INFO SSH -->  PCRF_PCF1 ...[DISABLED]\\n2023-07-17 07:34:20,587:ssh_service.py:53:INFO SSH -->  NEF1 ...[DISABLED]\\n2023-07-17 07:34:20,587:ssh_service.py:53:INFO SSH -->  GNB_CU_CP1 ...[DISABLED]\\n2023-07-17 07:34:20,587:ssh_service.py:53:INFO SSH -->  GNB_CU_UP1 ...[DISABLED]\\n2023-07-17 07:34:20,587:ssh_service.py:53:INFO SSH -->  GNB_CU_CP2 ...[DISABLED]\\n2023-07-17 07:34:20,587:ssh_service.py:53:INFO SSH -->  GNB_CU_UP2 ...[DISABLED]\\n2023-07-17 07:34:20,587:ssh_service.py:53:INFO SSH -->  GNB_DU1 ...[DISABLED]\\n2023-07-17 07:34:20,588:ssh_service.py:53:INFO SSH -->  GNB_DU2 ...[DISABLED]\\n2023-07-17 07:34:20,588:ssh_service.py:53:INFO SSH -->  NEAR_RT_RIC1 ...[DISABLED]\\n2023-07-17 07:34:20,588:ssh_service.py:53:INFO SSH -->  GNB_CU_CP_FSM1 ...[DISABLED]\\n2023-07-17 07:34:20,588:ssh_service.py:53:INFO SSH -->  GNB_CU_UP_FSM1 ...[DISABLED]\\n2023-07-17 07:34:20,588:ssh_service.py:53:INFO SSH -->  GNB_DU_FSM1 ...[DISABLED]\\n2023-07-17 07:34:20,588:ssh_service.py:53:INFO SSH -->   ...[DISABLED]\\n2023-07-17 07:34:20,589:ssh_service.py:84:DEBUG SSH --> Node TRAFFIC_GEN_1 abot@192.168.40.93 (Keyfile=None password=abot)...[CONNECTING]\\n2023-07-17 07:34:22,591:ssh_service.py:96:WARNING SSH --> Node TRAFFIC_GEN_1 ...[CONNECT FAILURE]\\n2023-07-17 07:34:22,593:ssh_service.py:84:DEBUG SSH --> Node IPERF_SERVER abot@192.168.40.92 (Keyfile=None password=abot)...[CONNECTING]\\n2023-07-17 07:34:24,595:ssh_service.py:96:WARNING SSH --> Node IPERF_SERVER ...[CONNECT FAILURE]\\n2023-07-17 07:34:24,596:book_keeper_service.py:362:DEBUG In abot_manage_logs_before_all\\n2023-07-17 07:34:24,635:logger.py:176:INFO **********************************************************************************************************************\\n2023-07-17 07:34:24,688:environment.py:147:INFO Executing Feature File | Initial_Attach.feature |\\n2023-07-17 07:34:24,694:ptransport_scanner.py:446:INFO SCANNING LOAD SWITCH: off\\n2023-07-17 07:34:24,754:environment.py:163:DEBUG Parent-ff-to-itself: \\n2023-07-17 07:34:24,754:environment.py:164:DEBUG Parent-ff-to-children: \\n2023-07-17 07:34:24,754:ptransport_scanner.py:873:DEBUG Checking association:[MME1,HSS1,S6A], return:HSS1, rule_list:['[eNodeB,MME,S1-MME]', '[gNodeB,AMF,N1-N2]', '[gNodeB,UPF,N3]']\\n2023-07-17 07:34:24,756:ptransport_scanner.py:33:DEBUG node_interface_key:MME1,HSS1,S6A does not exist, inserted into registered_node_interface_key_list[1]\\n2023-07-17 07:34:24,756:config.py:544:DEBUG update_node_group_in_config - [MME1], [MME1], [S6A]\\n2023-07-17 07:34:24,762:config.py:498:DEBUG identify_and_register_available_ports: Acquired used_port_file_lock for [MME1]/[S6A]/[36223]\\n2023-07-17 07:34:24,762:pport_repo.py:252:DEBUG Checking port availability for MME1:36223\\n2023-07-17 07:34:24,833:pport_repo.py:87:DEBUG Write userPorts.json file for Username:admin, IP:192.168.40.76, Size:2\\n2023-07-17 07:34:24,834:config.py:544:DEBUG update_node_group_in_config - [HSS1], [HSS1], [S6A]\\n2023-07-17 07:34:24,840:config.py:498:DEBUG identify_and_register_available_ports: Acquired used_port_file_lock for [HSS1]/[S6A]/[36421]\\n2023-07-17 07:34:24,840:pport_repo.py:252:DEBUG Checking port availability for HSS1:36421\\n2023-07-17 07:34:24,905:pport_repo.py:87:DEBUG Write userPorts.json file for Username:admin, IP:192.168.40.76, Size:3\\n2023-07-17 07:34:24,907:rmq_service.py:61:DEBUG DETECTED PROCESS: HSS1 ==>  num_subscribers: 1\\n2023-07-17 07:34:24,907:ptransport_scanner.py:873:DEBUG Checking association:[MME1,HSS1,S6A], return:HSS1, rule_list:['[eNodeB,MME,S1-MME]', '[gNodeB,AMF,N1-N2]', '[gNodeB,UPF,N3]']\\n2023-07-17 07:34:24,909:rmq_service.py:61:DEBUG DETECTED PROCESS: MME1 ==>  num_subscribers: 1\\n2023-07-17 07:34:24,909:ptransport_scanner.py:873:DEBUG Checking association:[PCRF1,PGW1,GX], return:PGW1, rule_list:['[eNodeB,MME,S1-MME]', '[gNodeB,AMF,N1-N2]', '[gNodeB,UPF,N3]']\\n2023-07-17 07:34:24,911:ptransport_scanner.py:33:DEBUG node_interface_key:PCRF1,PGW1,GX does not exist, inserted into registered_node_interface_key_list[2]\\n2023-07-17 07:34:24,911:config.py:544:DEBUG update_node_group_in_config - [PCRF1], [PCRF1], [GX]\\n2023-07-17 07:34:24,917:config.py:498:DEBUG identify_and_register_available_ports: Acquired used_port_file_lock for [PCRF1]/[GX]/[36621]\\n2023-07-17 07:34:24,917:pport_repo.py:252:DEBUG Checking port availability for PCRF1:36621\\n2023-07-17 07:34:24,988:pport_repo.py:87:DEBUG Write userPorts.json file for Username:admin, IP:192.168.40.76, Size:4\\n2023-07-17 07:34:24,989:config.py:544:DEBUG update_node_group_in_config - [PGW1], [PGW1], [GX]\\n2023-07-17 07:34:24,994:config.py:498:DEBUG identify_and_register_available_ports: Acquired used_port_file_lock for [PGW1]/[GX]/[36521]\\n2023-07-17 07:34:24,995:pport_repo.py:252:DEBUG Checking port availability for PGW1:36521\\n2023-07-17 07:34:25,068:pport_repo.py:87:DEBUG Write userPorts.json file for Username:admin, IP:192.168.40.76, Size:5\\n2023-07-17 07:34:25,069:rmq_service.py:61:DEBUG DETECTED PROCESS: PGW1 ==>  num_subscribers: 1\\n2023-07-17 07:34:25,069:ptransport_scanner.py:873:DEBUG Checking association:[PCRF1,PGW1,GX], return:PGW1, rule_list:['[eNodeB,MME,S1-MME]', '[gNodeB,AMF,N1-N2]', '[gNodeB,UPF,N3]']\\n2023-07-17 07:34:25,072:rmq_service.py:61:DEBUG DETECTED PROCESS: PCRF1 ==>  num_subscribers: 1\\n2023-07-17 07:34:25,072:ptransport_scanner.py:873:DEBUG Checking association:[eNodeB1,MME1,S1-MME], return:MME1, rule_list:['[eNodeB,MME,S1-MME]', '[gNodeB,AMF,N1-N2]', '[gNodeB,UPF,N3]']\\n2023-07-17 07:34:25,074:ptransport_scanner.py:33:DEBUG node_interface_key:eNodeB1,MME1,S1-MME does not exist, inserted into registered_node_interface_key_list[3]\\n2023-07-17 07:34:25,074:config.py:544:DEBUG update_node_group_in_config - [eNodeB1], [eNodeB1], [S1-MME]\\n2023-07-17 07:34:25,080:config.py:498:DEBUG identify_and_register_available_ports: Acquired used_port_file_lock for [eNodeB1]/[S1-MME]/[36121]\\n2023-07-17 07:34:25,080:pport_repo.py:252:DEBUG Checking port availability for eNodeB1:36121\\n2023-07-17 07:34:25,154:pport_repo.py:87:DEBUG Write userPorts.json file for Username:admin, IP:192.168.40.76, Size:6\\n2023-07-17 07:34:25,155:config.py:544:DEBUG update_node_group_in_config - [MME1], [MME1], [S1-MME]\\n2023-07-17 07:34:25,161:config.py:498:DEBUG identify_and_register_available_ports: Acquired used_port_file_lock for [MME1]/[S1-MME]/[36221]\\n2023-07-17 07:34:25,161:pport_repo.py:252:DEBUG Checking port availability for MME1:36221\\n2023-07-17 07:34:25,227:pport_repo.py:87:DEBUG Write userPorts.json file for Username:admin, IP:192.168.40.76, Size:7\\n2023-07-17 07:34:25,229:ptransport_scanner.py:873:DEBUG Checking association:[eNodeB1,MME1,S1-MME], return:MME1, rule_list:['[eNodeB,MME,S1-MME]', '[gNodeB,AMF,N1-N2]', '[gNodeB,UPF,N3]']\\n2023-07-17 07:34:25,232:rmq_service.py:61:DEBUG DETECTED PROCESS: eNodeB1 ==>  num_subscribers: 1\\n2023-07-17 07:34:25,235:ptransport_scanner.py:33:DEBUG node_interface_key:MME1,SGW1,S11 does not exist, inserted into registered_node_interface_key_list[4]\\n2023-07-17 07:34:25,236:config.py:544:DEBUG update_node_group_in_config - [MME1], [MME1], [S11]\\n2023-07-17 07:34:25,242:config.py:498:DEBUG identify_and_register_available_ports: Acquired used_port_file_lock for [MME1]/[S11]/[3721]\\n2023-07-17 07:34:25,243:pport_repo.py:252:DEBUG Checking port availability for MME1:3721\\n2023-07-17 07:34:25,307:pport_repo.py:87:DEBUG Write userPorts.json file for Username:admin, IP:192.168.40.76, Size:8\\n2023-07-17 07:34:25,308:config.py:544:DEBUG update_node_group_in_config - [SGW1], [SGW1], [S11]\\n2023-07-17 07:34:25,314:config.py:498:DEBUG identify_and_register_available_ports: Acquired used_port_file_lock for [SGW1]/[S11]/[3321]\\n2023-07-17 07:34:25,314:pport_repo.py:252:DEBUG Checking port availability for SGW1:3321\\n2023-07-17 07:34:25,379:pport_repo.py:87:DEBUG Write userPorts.json file for Username:admin, IP:192.168.40.76, Size:9\\n2023-07-17 07:34:25,382:rmq_service.py:61:DEBUG DETECTED PROCESS: SGW1 ==>  num_subscribers: 1\\n2023-07-17 07:34:25,386:ptransport_scanner.py:33:DEBUG node_interface_key:SGW1,PGW1,S5-S8 does not exist, inserted into registered_node_interface_key_list[5]\\n2023-07-17 07:34:25,386:config.py:544:DEBUG update_node_group_in_config - [SGW1], [SGW1], [S5-S8]\\n2023-07-17 07:34:25,392:config.py:498:DEBUG identify_and_register_available_ports: Acquired used_port_file_lock for [SGW1]/[S5-S8]/[3326]\\n2023-07-17 07:34:25,392:pport_repo.py:252:DEBUG Checking port availability for SGW1:3326\\n2023-07-17 07:34:25,457:pport_repo.py:87:DEBUG Write userPorts.json file for Username:admin, IP:192.168.40.76, Size:10\\n2023-07-17 07:34:25,458:config.py:498:DEBUG identify_and_register_available_ports: Acquired used_port_file_lock for [SGW1]/[S5-S8]/[3324]\\n2023-07-17 07:34:25,458:pport_repo.py:252:DEBUG Checking port availability for SGW1:3324\\n2023-07-17 07:34:25,526:pport_repo.py:87:DEBUG Write userPorts.json file for Username:admin, IP:192.168.40.76, Size:11\\n2023-07-17 07:34:25,527:config.py:544:DEBUG update_node_group_in_config - [PGW1], [PGW1], [S5-S8]\\n2023-07-17 07:34:25,532:config.py:498:DEBUG identify_and_register_available_ports: Acquired used_port_file_lock for [PGW1]/[S5-S8]/[4121]\\n2023-07-17 07:34:25,533:pport_repo.py:252:DEBUG Checking port availability for PGW1:4121\\n2023-07-17 07:34:25,603:pport_repo.py:87:DEBUG Write userPorts.json file for Username:admin, IP:192.168.40.76, Size:12\\n2023-07-17 07:34:25,603:config.py:498:DEBUG identify_and_register_available_ports: Acquired used_port_file_lock for [PGW1]/[S5-S8]/[4122]\\n2023-07-17 07:34:25,603:pport_repo.py:252:DEBUG Checking port availability for PGW1:4122\\n2023-07-17 07:34:25,673:pport_repo.py:87:DEBUG Write userPorts.json file for Username:admin, IP:192.168.40.76, Size:13\\n2023-07-17 07:34:25,678:ptransport_scanner.py:892:DEBUG apply_tcp_rules_on_associations - rule_list:['[eNodeB,MME,S1-MME]', '[gNodeB,AMF,N1-N2]', '[gNodeB,UPF,N3]']\\n2023-07-17 07:34:25,678:ptransport_scanner.py:774:DEBUG Entering update_flex_info:['[MME1,HSS1,S6A]', '[PCRF1,PGW1,GX]', '[eNodeB1,MME1,S1-MME]']\\n2023-07-17 07:34:25,678:ptransport_scanner.py:807:DEBUG flex_node_list:{}\\n2023-07-17 07:34:25,678:ptransport_scanner.py:774:DEBUG Entering update_flex_info:[]\\n2023-07-17 07:34:25,678:ptransport_scanner.py:807:DEBUG flex_node_list:{}\\n2023-07-17 07:34:25,678:ptransport_scanner.py:774:DEBUG Entering update_flex_info:['[MME1,SGW1,S11]', '[SGW1,PGW1,S5-S8]']\\n2023-07-17 07:34:25,678:ptransport_scanner.py:807:DEBUG flex_node_list:{}\\n2023-07-17 07:34:25,721:ptransport_scanner.py:976:DEBUG SCTP TRANSPORT: ['[MME1,HSS1,S6A]', '[PCRF1,PGW1,GX]', '[eNodeB1,MME1,S1-MME]']\\n2023-07-17 07:34:25,721:ptransport_scanner.py:977:DEBUG TCP TRANSPORT: []\\n2023-07-17 07:34:25,721:ptransport_scanner.py:978:DEBUG UDP TRANSPORT: ['[MME1,SGW1,S11]', '[SGW1,PGW1,S5-S8]']\\n2023-07-17 07:34:25,721:ptopology_analyser.py:64:DEBUG No tcp connections found\\n2023-07-17 07:34:25,721:ptopology_analyser.py:80:DEBUG Topologically Sorted Nodes: ['HSS1', 'PGW1', 'SGW1', 'MME1', 'PCRF1', 'eNodeB1']\\n2023-07-17 07:34:25,734:config.py:334:DEBUG Making current config: Path[/etc/rebaca-test-suite/log/admin//ABotConfig.properties], Len[954]\\n2023-07-17 07:34:25,762:rmq_service.py:522:DEBUG Queue abot_hss1_response_admin  ...[DELETED]\\n2023-07-17 07:34:25,768:rmq_service.py:522:DEBUG Queue abot_pgw1_response_admin  ...[DELETED]\\n2023-07-17 07:34:25,774:rmq_service.py:522:DEBUG Queue abot_sgw1_response_admin  ...[DELETED]\\n2023-07-17 07:34:25,779:rmq_service.py:522:DEBUG Queue abot_mme1_response_admin  ...[DELETED]\\n2023-07-17 07:34:25,784:rmq_service.py:522:DEBUG Queue abot_pcrf1_response_admin  ...[DELETED]\\n2023-07-17 07:34:25,792:rmq_service.py:522:DEBUG Queue abot_enodeb1_response_admin  ...[DELETED]\\n2023-07-17 07:34:25,796:environment.py:185:INFO Creating K8S pods for ABot nodes\\n2023-07-17 07:34:25,797:k8s_service.py:367:INFO K8S Cluster not configured\\n2023-07-17 07:34:25,856:logger.py:176:INFO **********************************************************************************************************************\\n2023-07-17 07:34:25,856:environment.py:262:INFO Executing Scenario: | <Scenario \\\"Initial Attach with IMSI and PDN Connectivity Request\\\"> |\\n2023-07-17 07:34:25,858:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:25,858:teardown.py:16:INFO Scan cleanup steps BEGIN...\\n2023-07-17 07:34:25,858:logger.py:113:DEBUG Initializing step status data for [Initial_Attach.feature]\\n2023-07-17 07:34:25,859:ssh.py:175:WARNING ssh command not specified for node MME1\\n2023-07-17 07:34:25,868:ssh.py:175:WARNING ssh command not specified for node eNodeB1\\n2023-07-17 07:34:25,876:ssh.py:175:WARNING ssh command not specified for node SGW1\\n2023-07-17 07:34:25,885:ssh.py:175:WARNING ssh command not specified for node PGW1\\n2023-07-17 07:34:25,893:ssh.py:175:WARNING ssh command not specified for node HSS1\\n2023-07-17 07:34:25,902:ssh.py:175:WARNING ssh command not specified for node PCRF1\\n2023-07-17 07:34:25,910:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:25,910:teardown.py:22:INFO Then the ending steps are complete\\n2023-07-17 07:34:25,910:teardown.py:23:INFO Scan cleanup steps END...\\n2023-07-17 07:34:25,919:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:25,919:pre_conditions.py:83:INFO STEP: Given the test data is in file /featureFiles/MESSAGE_BUNDLES/EPC_MESSAGES.xml\\n2023-07-17 07:34:26,308:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:26,310:ssh.py:133:WARNING ssh command not specified for node MME1\\n2023-07-17 07:34:26,318:ssh.py:133:WARNING ssh command not specified for node eNodeB1\\n2023-07-17 07:34:26,327:ssh.py:133:WARNING ssh command not specified for node SGW1\\n2023-07-17 07:34:26,335:ssh.py:133:WARNING ssh command not specified for node PGW1\\n2023-07-17 07:34:26,343:ssh.py:133:WARNING ssh command not specified for node HSS1\\n2023-07-17 07:34:26,352:ssh.py:133:WARNING ssh command not specified for node PCRF1\\n2023-07-17 07:34:26,360:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:26,360:load_service.py:290:INFO STEP: Given all configured endpoints for EPC are connected successfully\\n2023-07-17 07:34:26,360:load_service.py:304:INFO Loading Prometheus Configuration...\\n2023-07-17 07:34:26,361:prometheus_service.py:160:DEBUG init_prometheus_config: Acquiring used_port_file_lock\\n2023-07-17 07:34:26,361:prometheus_service.py:163:DEBUG init_prometheus_config: Acquired used_port_file_lock\\n2023-07-17 07:34:26,361:prometheus_service.py:170:DEBUG Prometheus Config JSON - initial value[[]]\\n2023-07-17 07:34:26,361:prometheus_service.py:76:DEBUG Adding entry for node:HSS1\\n2023-07-17 07:34:26,361:pport_repo.py:252:DEBUG Checking port availability for HSS1:39000\\n2023-07-17 07:34:26,471:prometheus_service.py:54:DEBUG Added Prometheus Node Entry [HSS1]/[192.168.40.76]:[39000]\\n2023-07-17 07:34:26,471:prometheus_service.py:76:DEBUG Adding entry for node:PGW1\\n2023-07-17 07:34:26,472:pport_repo.py:252:DEBUG Checking port availability for PGW1:39005\\n2023-07-17 07:34:26,542:prometheus_service.py:54:DEBUG Added Prometheus Node Entry [PGW1]/[192.168.40.76]:[39005]\\n2023-07-17 07:34:26,542:prometheus_service.py:76:DEBUG Adding entry for node:SGW1\\n2023-07-17 07:34:26,543:pport_repo.py:252:DEBUG Checking port availability for SGW1:39010\\n2023-07-17 07:34:26,608:prometheus_service.py:54:DEBUG Added Prometheus Node Entry [SGW1]/[192.168.40.76]:[39010]\\n2023-07-17 07:34:26,608:prometheus_service.py:76:DEBUG Adding entry for node:MME1\\n2023-07-17 07:34:26,609:pport_repo.py:252:DEBUG Checking port availability for MME1:39015\\n2023-07-17 07:34:26,682:prometheus_service.py:54:DEBUG Added Prometheus Node Entry [MME1]/[192.168.40.76]:[39015]\\n2023-07-17 07:34:26,683:prometheus_service.py:76:DEBUG Adding entry for node:PCRF1\\n2023-07-17 07:34:26,683:pport_repo.py:252:DEBUG Checking port availability for PCRF1:39020\\n2023-07-17 07:34:26,731:prometheus_service.py:54:DEBUG Added Prometheus Node Entry [PCRF1]/[192.168.40.76]:[39020]\\n2023-07-17 07:34:26,732:prometheus_service.py:76:DEBUG Adding entry for node:eNodeB1\\n2023-07-17 07:34:26,732:pport_repo.py:252:DEBUG Checking port availability for eNodeB1:39025\\n2023-07-17 07:34:26,797:prometheus_service.py:54:DEBUG Added Prometheus Node Entry [eNodeB1]/[192.168.40.76]:[39025]\\n2023-07-17 07:34:26,798:prometheus_service.py:104:DEBUG Registering used ports for [1] IPs\\n2023-07-17 07:34:26,799:pport_repo.py:87:DEBUG Write userPorts.json file for Username:admin, IP:192.168.40.76, Size:19\\n2023-07-17 07:34:26,800:prometheus_service.py:132:DEBUG Writing Prometheus config file:/etc/rebaca-test-suite/prom_config/prom_targets_admin.json\\n2023-07-17 07:34:26,801:load_service.py:313:DEBUG RMQ Infrastructure Running\\n2023-07-17 07:34:26,801:load_service.py:334:DEBUG ABot stack processes:[['HSS1', 'PGW1', 'SGW1', 'MME1', 'PCRF1', 'eNodeB1']]\\n2023-07-17 07:34:26,802:packet_processor.py:19:DEBUG Attempting to start packet capture at node[HSS1]\\n2023-07-17 07:34:26,802:packet_processor.py:43:DEBUG Attempting to start packet capture in Non-K8s setup: HSS1\\n2023-07-17 07:34:26,802:packet_processor.py:175:DEBUG Get port list for node:[ABOT] with IP:[192.168.40.76]\\n2023-07-17 07:34:26,836:packet_processor.py:76:DEBUG Starting packet capture on ABot for node:[HSS1] with timestamp:[17Jul2023-073426AM-UTC] and port_list:[port 37623 or port 4121 or port 3321 or port 3326 or port 36123 or port 36623 or port 3324 or port 36521 or port 36622 or port 36122 or port 36223 or port 3121 or port 4122 or port 3325 or port 36522 or port 3323 or port 4221 or port 36121 or port 3721 or port 36222 or port 36621 or port 36523 or port 3122 or port 36421 or port 36221]\\n2023-07-17 07:34:26,844:packet_processor.py:83:INFO Start pcap cmd: ['tcpdump', '-nni', 'any', '-F', '/tmp/rebaca-test-suite/admin/admin_Initial_Attach_ABOT_Input_File.txt', '-w', '/etc/rebaca-test-suite/log/admin/Initial_Attach_17Jul2023-073426AM-UTC.pcap']\\n2023-07-17 07:34:26,845:load_service.py:828:INFO Starting daemon process:HSS1\\n2023-07-17 07:34:26,845:daemon_processor.py:42:INFO Starting ./run_abot_node.sh instance HSS1...\\n2023-07-17 07:34:26,846:daemon_processor.py:77:INFO ./run_abot_node.sh -d --log-level 5   --rmq-q-consume abot_hss1_request_admin --rmq-k-consume abot_hss1_request_key_admin --rmq-k-publish abot_hss1_response_key_admin --ue-start-index 0 --node-name HSS1 --node-type HSS --node-subtype HSS --user-id admin --handle-sigsegv 1 \\n2023-07-17 07:34:27,849:rmq_service.py:422:INFO Queue MSG: ABot NODE NOHUP!!!\\n2023-07-17 07:34:27,849:load_service.py:851:INFO Daemon:[HSS1] started successfully\\n2023-07-17 07:34:27,850:load_service.py:828:INFO Starting daemon process:PGW1\\n2023-07-17 07:34:27,850:daemon_processor.py:42:INFO Starting ./run_abot_node.sh instance PGW1...\\n2023-07-17 07:34:27,851:daemon_processor.py:77:INFO ./run_abot_node.sh -d --log-level 5   --rmq-q-consume abot_pgw1_request_admin --rmq-k-consume abot_pgw1_request_key_admin --rmq-k-publish abot_pgw1_response_key_admin --ue-start-index 0 --node-name PGW1 --node-type PGW --node-subtype PGW --user-id admin --handle-sigsegv 1 \\n2023-07-17 07:34:28,859:rmq_service.py:422:INFO Queue MSG: ABot NODE NOHUP!!!\\n2023-07-17 07:34:28,859:load_service.py:851:INFO Daemon:[PGW1] started successfully\\n2023-07-17 07:34:28,860:load_service.py:828:INFO Starting daemon process:SGW1\\n2023-07-17 07:34:28,860:daemon_processor.py:42:INFO Starting ./run_abot_node.sh instance SGW1...\\n2023-07-17 07:34:28,861:daemon_processor.py:77:INFO ./run_abot_node.sh -d --log-level 5   --rmq-q-consume abot_sgw1_request_admin --rmq-k-consume abot_sgw1_request_key_admin --rmq-k-publish abot_sgw1_response_key_admin --ue-start-index 0 --node-name SGW1 --node-type SGW --node-subtype SGW --user-id admin --handle-sigsegv 1 \\n2023-07-17 07:34:29,869:rmq_service.py:422:INFO Queue MSG: ABot NODE NOHUP!!!\\n2023-07-17 07:34:29,869:load_service.py:851:INFO Daemon:[SGW1] started successfully\\n2023-07-17 07:34:29,869:load_service.py:828:INFO Starting daemon process:MME1\\n2023-07-17 07:34:29,870:daemon_processor.py:42:INFO Starting ./run_abot_node.sh instance MME1...\\n2023-07-17 07:34:29,870:daemon_processor.py:77:INFO ./run_abot_node.sh -d --log-level 5   --rmq-q-consume abot_mme1_request_admin --rmq-k-consume abot_mme1_request_key_admin --rmq-k-publish abot_mme1_response_key_admin --ue-start-index 0 --node-name MME1 --node-type MME --node-subtype MME --user-id admin --handle-sigsegv 1 \\n2023-07-17 07:34:30,877:rmq_service.py:422:INFO Queue MSG: ABot NODE NOHUP!!!\\n2023-07-17 07:34:30,878:load_service.py:851:INFO Daemon:[MME1] started successfully\\n2023-07-17 07:34:30,878:load_service.py:828:INFO Starting daemon process:PCRF1\\n2023-07-17 07:34:30,878:daemon_processor.py:42:INFO Starting ./run_abot_node.sh instance PCRF1...\\n2023-07-17 07:34:30,879:daemon_processor.py:77:INFO ./run_abot_node.sh -d --log-level 5   --rmq-q-consume abot_pcrf1_request_admin --rmq-k-consume abot_pcrf1_request_key_admin --rmq-k-publish abot_pcrf1_response_key_admin --ue-start-index 0 --node-name PCRF1 --node-type PCRF --node-subtype PCRF --user-id admin --handle-sigsegv 1 \\n2023-07-17 07:34:31,888:rmq_service.py:422:INFO Queue MSG: ABot NODE NOHUP!!!\\n2023-07-17 07:34:31,888:load_service.py:851:INFO Daemon:[PCRF1] started successfully\\n2023-07-17 07:34:31,888:load_service.py:828:INFO Starting daemon process:eNodeB1\\n2023-07-17 07:34:31,889:daemon_processor.py:42:INFO Starting ./run_abot_node.sh instance eNodeB1...\\n2023-07-17 07:34:31,889:daemon_processor.py:77:INFO ./run_abot_node.sh -d --log-level 5   --rmq-q-consume abot_enodeb1_request_admin --rmq-k-consume abot_enodeb1_request_key_admin --rmq-k-publish abot_enodeb1_response_key_admin --ue-start-index 0 --node-name eNodeB1 --node-type eNodeB --node-subtype eNodeB --user-id admin --handle-sigsegv 1 \\n2023-07-17 07:34:32,897:rmq_service.py:422:INFO Queue MSG: ABot NODE NOHUP!!!\\n2023-07-17 07:34:32,898:load_service.py:851:INFO Daemon:[eNodeB1] started successfully\\n2023-07-17 07:34:33,901:epc.py:21:INFO LOAD switch is OFF on feature file\\n2023-07-17 07:34:33,909:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:33,909:epc_service.py:166:INFO STEP :When I send DIAMETER message DIA_CAPABILITIES_EXCHANGE_REQUEST on Interface S6A from node MME1 to node HSS1\\n2023-07-17 07:34:33,910:epc_service.py:51:INFO DIA_CAPABILITIES_EXCHANGE_REQUEST\\n2023-07-17 07:34:33,911:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:33,911:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"DIA_CAPABILITIES_EXCHANGE_REQUEST\\\", \\\"endpoint\\\": \\\"MME1,HSS1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S6A\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"Hop-by-Hop Identifier\\\": \\\"1\\\", \\\"End-to-End Identifier\\\": \\\"2\\\", \\\"Origin-Host\\\": \\\"abot-volte-pro.rebaca.com\\\", \\\"Origin-Realm\\\": \\\"rebaca.com\\\", \\\"Host-IP-Address\\\": \\\"192.168.40.76\\\", \\\"Vendor-Id\\\": \\\"0\\\", \\\"Product-Name\\\": \\\"Diameter\\\", \\\"Origin-State-Id\\\": \\\"1562601028\\\", \\\"Supported-Vendor-Id\\\": \\\"10415\\\", \\\"Inband-Security-Id\\\": \\\"1\\\", \\\"Vendor-Specific-Application-Id.0.Vendor-Id\\\": \\\"10415\\\", \\\"Vendor-Specific-Application-Id.0.Auth-Application-Id\\\": \\\"16777251\\\", \\\"Firmware-Revision\\\": \\\"10200\\\", \\\"Vendor-Specific-Application-Id.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:33,963:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:33,963:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:33,963:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:33,963:epc_service.py:69:INFO ENDPOINT: MME1,HSS1\\n2023-07-17 07:34:33,963:epc_service.py:71:INFO MESSAGE NAME: DIA_CAPABILITIES_EXCHANGE_REQUEST\\n2023-07-17 07:34:33,964:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:33,966:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:33,966:epc_service.py:166:INFO STEP :When I send DIAMETER message DIA_CAPABILITIES_EXCHANGE_REQUEST on Interface GX from node PCRF1 to node PGW1\\n2023-07-17 07:34:33,967:epc_service.py:51:INFO DIA_CAPABILITIES_EXCHANGE_REQUEST\\n2023-07-17 07:34:33,967:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:33,967:rmq_service.py:204:INFO abot_pcrf1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"DIA_CAPABILITIES_EXCHANGE_REQUEST\\\", \\\"endpoint\\\": \\\"PCRF1,PGW1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"GX\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"Hop-by-Hop Identifier\\\": \\\"123\\\", \\\"End-to-End Identifier\\\": \\\"456\\\", \\\"Origin-Host\\\": \\\"abot-volte-pro.rebaca.com\\\", \\\"Origin-Realm\\\": \\\"rebaca.com\\\", \\\"Host-IP-Address\\\": \\\"192.168.40.76\\\", \\\"Vendor-Id\\\": \\\"0\\\", \\\"Product-Name\\\": \\\"freeDiameter\\\", \\\"Origin-State-Id\\\": \\\"1584110503\\\", \\\"Supported-Vendor-Id\\\": \\\"10415\\\", \\\"Inband-Security-Id\\\": \\\"0\\\", \\\"Vendor-Specific-Application-Id.0.Vendor-Id\\\": \\\"10415\\\", \\\"Vendor-Specific-Application-Id.0.Auth-Application-Id\\\": \\\"16777238\\\", \\\"Firmware-Revision\\\": \\\"10200\\\", \\\"Vendor-Specific-Application-Id.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:34,017:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,017:rmq_service.py:236:INFO abot_pcrf1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,017:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:34,018:epc_service.py:69:INFO ENDPOINT: PCRF1,PGW1\\n2023-07-17 07:34:34,018:epc_service.py:71:INFO MESSAGE NAME: DIA_CAPABILITIES_EXCHANGE_REQUEST\\n2023-07-17 07:34:34,018:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,026:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,026:epc_service.py:166:INFO STEP :When I send S1AP message S1_SETUP_REQ on Interface S1-MME from node eNodeB1 to node MME1\\n2023-07-17 07:34:34,027:epc_service.py:51:INFO S1_SETUP_REQ\\n2023-07-17 07:34:34,027:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,027:rmq_service.py:204:INFO abot_enodeb1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_SETUP_REQ\\\", \\\"endpoint\\\": \\\"eNodeB1,MME1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"global_enb_id.plmn_identity.mcc\\\": \\\"001\\\", \\\"global_enb_id.plmn_identity.mnc\\\": \\\"01\\\", \\\"global_enb_id.macro_enb_id\\\": \\\"3584\\\", \\\"enb_name\\\": \\\"eNB-Eurecom-LTEBox\\\", \\\"supported_tas_list.0.tac\\\": \\\"1\\\", \\\"supported_tas_list.0.broadcast_plmns.0.plmn_identity.mcc\\\": \\\"001\\\", \\\"supported_tas_list.0.broadcast_plmns.0.plmn_identity.mnc\\\": \\\"01\\\", \\\"paging_drx\\\": \\\"128\\\", \\\"supported_tas_list.0\\\": \\\"present\\\", \\\"supported_tas_list.0.broadcast_plmns.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:34,088:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,088:rmq_service.py:236:INFO abot_enodeb1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,088:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:34,089:epc_service.py:69:INFO ENDPOINT: ENODEB1,MME1\\n2023-07-17 07:34:34,089:epc_service.py:71:INFO MESSAGE NAME: S1_SETUP_REQ\\n2023-07-17 07:34:34,090:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,096:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,097:epc_service.py:260:INFO STEP: Then I receive and validate S1AP  message S1_SETUP_REQ on interface S1-MME  with the following details on node MME1 from node eNodeB1 \\n2023-07-17 07:34:34,097:epc_service.py:51:INFO S1_SETUP_REQ\\n2023-07-17 07:34:34,097:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,098:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_SETUP_REQ\\\", \\\"endpoint\\\": \\\"MME1,eNodeB1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"global_enb_id.plmn_identity.mcc\\\": \\\"{integer:eq}(001)\\\", \\\"global_enb_id.plmn_identity.mnc\\\": \\\"{integer:eq}(01)\\\", \\\"global_enb_id.macro_enb_id\\\": \\\"{string:eq}(3584)\\\", \\\"enb_name\\\": \\\"{string:eq}(eNB-Eurecom-LTEBox)\\\", \\\"supported_tas_list.0.tac\\\": \\\"{integer:eq}(1)\\\", \\\"supported_tas_list.0.broadcast_plmns.0.plmn_identity.mcc\\\": \\\"{integer:eq}(001)\\\", \\\"supported_tas_list.0.broadcast_plmns.0.plmn_identity.mnc\\\": \\\"{integer:eq}(01)\\\", \\\"paging_drx\\\": \\\"{string:eq}(128)\\\", \\\"supported_tas_list.0\\\": \\\"present\\\", \\\"supported_tas_list.0.broadcast_plmns.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:34,148:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,149:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,149:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:34,149:epc_service.py:69:INFO ENDPOINT: MME1,ENODEB1\\n2023-07-17 07:34:34,150:epc_service.py:71:INFO MESSAGE NAME: S1_SETUP_REQ\\n2023-07-17 07:34:34,150:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,164:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,165:epc_service.py:166:INFO STEP :When I send S1AP message S1_SETUP_RES on Interface S1-MME from node MME1 to node eNodeB1\\n2023-07-17 07:34:34,166:epc_service.py:51:INFO S1_SETUP_RES\\n2023-07-17 07:34:34,166:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,166:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_SETUP_RES\\\", \\\"endpoint\\\": \\\"MME1,eNodeB1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"served_gummeis_list.0.served_plmns.0.plmn_identity.mcc\\\": \\\"001\\\", \\\"served_gummeis_list.0.served_plmns.0.plmn_identity.mnc\\\": \\\"01\\\", \\\"served_gummeis_list.0.served_group_ids.0.mme_group_id\\\": \\\"4\\\", \\\"served_gummeis_list.0.served_mmecs.0.mme_code\\\": \\\"0\\\", \\\"relative_mme_capacity\\\": \\\"10\\\", \\\"mme_relay_support_indicator\\\": \\\"0\\\", \\\"mme_name\\\": \\\"mME-Eurecom-LTEBox\\\", \\\"served_gummeis_list.0.served_plmns.0\\\": \\\"present\\\", \\\"served_gummeis_list.0\\\": \\\"present\\\", \\\"served_gummeis_list.0.served_group_ids.0\\\": \\\"present\\\", \\\"served_gummeis_list.0.served_mmecs.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:34,218:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,219:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,219:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:34,219:epc_service.py:69:INFO ENDPOINT: MME1,ENODEB1\\n2023-07-17 07:34:34,219:epc_service.py:71:INFO MESSAGE NAME: S1_SETUP_RES\\n2023-07-17 07:34:34,220:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,235:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,236:epc_service.py:260:INFO STEP: Then I receive and validate S1AP  message S1_SETUP_RES on interface S1-MME  with the following details on node eNodeB1 from node MME1 \\n2023-07-17 07:34:34,237:epc_service.py:51:INFO S1_SETUP_RES\\n2023-07-17 07:34:34,238:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,238:rmq_service.py:204:INFO abot_enodeb1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_SETUP_RES\\\", \\\"endpoint\\\": \\\"eNodeB1,MME1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"served_gummeis_list.0.served_plmns.0.plmn_identity.mcc\\\": \\\"{integer:eq}(001)\\\", \\\"served_gummeis_list.0.served_plmns.0.plmn_identity.mnc\\\": \\\"{integer:eq}(01)\\\", \\\"served_gummeis_list.0.served_group_ids.0.mme_group_id\\\": \\\"save(MME_GROUP_ID)\\\", \\\"served_gummeis_list.0.served_mmecs.0.mme_code\\\": \\\"{string:eq}(0)\\\", \\\"relative_mme_capacity\\\": \\\"save(RELATIVE_MME_CAPACITY)\\\", \\\"mme_relay_support_indicator\\\": \\\"{string:eq}(0)\\\", \\\"mme_name\\\": \\\"{string:eq}(mME-Eurecom-LTEBox)\\\", \\\"served_gummeis_list.0.served_plmns.0\\\": \\\"present\\\", \\\"served_gummeis_list.0\\\": \\\"present\\\", \\\"served_gummeis_list.0.served_group_ids.0\\\": \\\"present\\\", \\\"served_gummeis_list.0.served_mmecs.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:34,287:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,287:rmq_service.py:236:INFO abot_enodeb1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,288:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:34,288:epc_service.py:69:INFO ENDPOINT: ENODEB1,MME1\\n2023-07-17 07:34:34,288:epc_service.py:71:INFO MESSAGE NAME: S1_SETUP_RES\\n2023-07-17 07:34:34,289:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,293:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,294:epc_service.py:166:INFO STEP :When I send S1AP message S1_INIT_UE_MSG_NAS_ATTACH_REQ_PDN_CON_REQ on Interface S1-MME from node eNodeB1 to node MME1\\n2023-07-17 07:34:34,295:epc_service.py:51:INFO S1_INIT_UE_MSG_NAS_ATTACH_REQ_PDN_CON_REQ\\n2023-07-17 07:34:34,296:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,297:rmq_service.py:204:INFO abot_enodeb1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_INIT_UE_MSG_NAS_ATTACH_REQ_PDN_CON_REQ\\\", \\\"endpoint\\\": \\\"eNodeB1,MME1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"incr(12697203,1)\\\", \\\"nas_pdu.protocol_discriminator.emm\\\": \\\"0x07\\\", \\\"nas_pdu.message_type.emm\\\": \\\"0x41\\\", \\\"nas_pdu.security_header_type.plain\\\": \\\"0\\\", \\\"nas_pdu.attach_request.eps_attach_type\\\": \\\"1\\\", \\\"nas_pdu.attach_request.eps_mobile_identity.imsi\\\": \\\"incr(001010100001111,1)\\\", \\\"nas_pdu.attach_request.ue_network_capability.eea\\\": \\\"0x00\\\", \\\"nas_pdu.attach_request.ue_network_capability.eia\\\": \\\"0x00\\\", \\\"nas_pdu.attach_request.type_of_security_context\\\": \\\"0\\\", \\\"nas_pdu.attach_request.nas_key_set_identifier\\\": \\\"7\\\", \\\"nas_pdu.esm_message.eps_bearer_identity.esm\\\": \\\"0\\\", \\\"nas_pdu.esm_message.pti\\\": \\\"60\\\", \\\"nas_pdu.esm_message.message_type.esm\\\": \\\"0xd0\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.request_type\\\": \\\"1\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.pdn_type\\\": \\\"1\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.pco.num_protocol_id_or_container_id\\\": \\\"1\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.pco.protocol_contents.0.id\\\": \\\"1\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.pco.protocol_contents.0.length\\\": \\\"16\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.pco.protocol_contents.0.contents\\\": \\\"0x01000010810600000000830600000000\\\", \\\"tai.plmn_identity.mcc\\\": \\\"001\\\", \\\"tai.plmn_identity.mnc\\\": \\\"01\\\", \\\"tai.tac\\\": \\\"1\\\", \\\"eutran_cgi.plmn_identity.mcc\\\": \\\"001\\\", \\\"eutran_cgi.plmn_identity.mnc\\\": \\\"01\\\", \\\"eutran_cgi.cell_id\\\": \\\"3584\\\", \\\"rrc_establishment_cause\\\": \\\"S1ap_RRC_Establishment_Cause_mo_Signalling\\\", \\\"nas_pdu.esm_message.protocol_discriminator.esm\\\": \\\"0x02\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.pco.configuration_protocol\\\": \\\"0\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.pco.protocol_contents.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:34,355:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,356:rmq_service.py:236:INFO abot_enodeb1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,356:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:34,356:epc_service.py:69:INFO ENDPOINT: ENODEB1,MME1\\n2023-07-17 07:34:34,357:epc_service.py:71:INFO MESSAGE NAME: S1_INIT_UE_MSG_NAS_ATTACH_REQ_PDN_CON_REQ\\n2023-07-17 07:34:34,357:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,363:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,365:epc_service.py:260:INFO STEP: Then I receive and validate S1AP  message S1_INIT_UE_MSG_NAS_ATTACH_REQ_PDN_CON_REQ on interface S1-MME  with the following details on node MME1 from node eNodeB1 \\n2023-07-17 07:34:34,365:epc_service.py:51:INFO S1_INIT_UE_MSG_NAS_ATTACH_REQ_PDN_CON_REQ\\n2023-07-17 07:34:34,367:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,367:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_INIT_UE_MSG_NAS_ATTACH_REQ_PDN_CON_REQ\\\", \\\"endpoint\\\": \\\"MME1,eNodeB1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"save(ENB_UE_S1AP_ID)\\\", \\\"nas_pdu.protocol_discriminator.emm\\\": \\\"{string:eq}(0x07)\\\", \\\"nas_pdu.message_type.emm\\\": \\\"{string:eq}(0x41)\\\", \\\"nas_pdu.security_header_type.plain\\\": \\\"{string:eq}(0)\\\", \\\"nas_pdu.attach_request.eps_attach_type\\\": \\\"{string:eq}(1)\\\", \\\"nas_pdu.attach_request.eps_mobile_identity.imsi\\\": \\\"save(IMSI)\\\", \\\"nas_pdu.attach_request.ue_network_capability.eea\\\": \\\"{string:eq}(0x00)\\\", \\\"nas_pdu.attach_request.ue_network_capability.eia\\\": \\\"{string:eq}(0x00)\\\", \\\"nas_pdu.attach_request.type_of_security_context\\\": \\\"{string:eq}(0)\\\", \\\"nas_pdu.attach_request.nas_key_set_identifier\\\": \\\"save(KEY_SET_ID)\\\", \\\"nas_pdu.esm_message.eps_bearer_identity.esm\\\": \\\"{string:eq}(0)\\\", \\\"nas_pdu.esm_message.pti\\\": \\\"{string:eq}(60)\\\", \\\"nas_pdu.esm_message.message_type.esm\\\": \\\"{string:eq}(0xd0)\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.request_type\\\": \\\"{string:eq}(1)\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.pdn_type\\\": \\\"{string:eq}(1)\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.pco.num_protocol_id_or_container_id\\\": \\\"{string:eq}(1)\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.pco.protocol_contents.0.id\\\": \\\"{string:eq}(1)\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.pco.protocol_contents.0.length\\\": \\\"{string:eq}(16)\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.pco.protocol_contents.0.contents\\\": \\\"{string:eq}(0x01000010810600000000830600000000)\\\", \\\"tai.plmn_identity.mcc\\\": \\\"{integer:eq}(001)\\\", \\\"tai.plmn_identity.mnc\\\": \\\"{integer:eq}(01)\\\", \\\"tai.tac\\\": \\\"{integer:eq}(1)\\\", \\\"eutran_cgi.plmn_identity.mcc\\\": \\\"{integer:eq}(001)\\\", \\\"eutran_cgi.plmn_identity.mnc\\\": \\\"{integer:eq}(01)\\\", \\\"eutran_cgi.cell_id\\\": \\\"{string:eq}(3584)\\\", \\\"rrc_establishment_cause\\\": \\\"{string:eq}(S1ap_RRC_Establishment_Cause_mo_Signalling)\\\", \\\"nas_pdu.esm_message.protocol_discriminator.esm\\\": \\\"{string:eq}(0x02)\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.pco.configuration_protocol\\\": \\\"{string:eq}(0)\\\", \\\"nas_pdu.esm_message.pdn_connectivity_request.pco.protocol_contents.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:34,415:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,416:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,416:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:34,416:epc_service.py:69:INFO ENDPOINT: MME1,ENODEB1\\n2023-07-17 07:34:34,417:epc_service.py:71:INFO MESSAGE NAME: S1_INIT_UE_MSG_NAS_ATTACH_REQ_PDN_CON_REQ\\n2023-07-17 07:34:34,417:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,419:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,420:epc_service.py:166:INFO STEP :When I send DIAMETER message DIA_AUTHENTICATION_INFORMATION_REQUEST on Interface S6A from node MME1 to node HSS1\\n2023-07-17 07:34:34,420:epc_service.py:51:INFO DIA_AUTHENTICATION_INFORMATION_REQUEST\\n2023-07-17 07:34:34,422:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,422:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"DIA_AUTHENTICATION_INFORMATION_REQUEST\\\", \\\"endpoint\\\": \\\"MME1,HSS1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S6A\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"Hop-by-Hop Identifier\\\": \\\"124\\\", \\\"End-to-End Identifier\\\": \\\"456\\\", \\\"Session-Id\\\": \\\"incr(abot.rebaca.com;1559899814;1;apps6a,1)\\\", \\\"DRMP\\\": \\\"1\\\", \\\"Vendor-Specific-Application-Id.0.Vendor-Id\\\": \\\"10415\\\", \\\"Vendor-Specific-Application-Id.0.Auth-Application-Id\\\": \\\"16777251\\\", \\\"Vendor-Specific-Application-Id.0.Acct-Application-Id\\\": \\\"86\\\", \\\"Auth-Session-State\\\": \\\"1\\\", \\\"Origin-Host\\\": \\\"abot-volte-pro.rebaca.com\\\", \\\"Origin-Realm\\\": \\\"rebaca.com\\\", \\\"Destination-Host\\\": \\\"abot-volte-pro.rebaca.com\\\", \\\"Destination-Realm\\\": \\\"rebaca.com\\\", \\\"User-Name\\\": \\\"$(IMSI)\\\", \\\"OC-Supported-Features.OC-Feature-Vector\\\": \\\"88\\\", \\\"Supported-Features.0.Vendor-Id\\\": \\\"22\\\", \\\"Supported-Features.0.Feature-List-ID\\\": \\\"25\\\", \\\"Supported-Features.0.Feature-List\\\": \\\"28\\\", \\\"Requested-EUTRAN-Authentication-Info.Number-Of-Requested-Vectors\\\": \\\"1\\\", \\\"Requested-EUTRAN-Authentication-Info.Immediate-Response-Preferred\\\": \\\"0\\\", \\\"Visited-PLMN-Id\\\": \\\"00f110\\\", \\\"Vendor-Specific-Application-Id.0\\\": \\\"present\\\", \\\"Supported-Features.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:34,475:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,476:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,476:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:34,476:epc_service.py:69:INFO ENDPOINT: MME1,HSS1\\n2023-07-17 07:34:34,477:epc_service.py:71:INFO MESSAGE NAME: DIA_AUTHENTICATION_INFORMATION_REQUEST\\n2023-07-17 07:34:34,477:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,482:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,483:epc_service.py:260:INFO STEP: Then I receive and validate DIAMETER  message DIA_AUTHENTICATION_INFORMATION_REQUEST on interface S6A  with the following details on node HSS1 from node MME1 \\n2023-07-17 07:34:34,483:epc_service.py:51:INFO DIA_AUTHENTICATION_INFORMATION_REQUEST\\n2023-07-17 07:34:34,484:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,485:rmq_service.py:204:INFO abot_hss1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"DIA_AUTHENTICATION_INFORMATION_REQUEST\\\", \\\"endpoint\\\": \\\"HSS1,MME1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S6A\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"Hop-by-Hop Identifier\\\": \\\"save(HOP_BY_HOP_ID)\\\", \\\"End-to-End Identifier\\\": \\\"save(END_TO_END_ID)\\\", \\\"Session-Id\\\": \\\"save(DIA_SESS_ID_S6A)\\\", \\\"DRMP\\\": \\\"{string:eq}(1)\\\", \\\"Vendor-Specific-Application-Id.0.Vendor-Id\\\": \\\"{string:eq}(10415)\\\", \\\"Vendor-Specific-Application-Id.0.Auth-Application-Id\\\": \\\"{string:eq}(16777251)\\\", \\\"Vendor-Specific-Application-Id.0.Acct-Application-Id\\\": \\\"{string:eq}(86)\\\", \\\"Auth-Session-State\\\": \\\"{string:eq}(1)\\\", \\\"Origin-Host\\\": \\\"{string:eq}(abot-volte-pro.rebaca.com)\\\", \\\"Origin-Realm\\\": \\\"{string:eq}(rebaca.com)\\\", \\\"Destination-Host\\\": \\\"{string:eq}(abot-volte-pro.rebaca.com)\\\", \\\"Destination-Realm\\\": \\\"{string:eq}(rebaca.com)\\\", \\\"User-Name\\\": \\\"save(IMSI)\\\", \\\"OC-Supported-Features.OC-Feature-Vector\\\": \\\"{integer:eq}(88)\\\", \\\"Supported-Features.0.Vendor-Id\\\": \\\"{string:eq}(22)\\\", \\\"Supported-Features.0.Feature-List-ID\\\": \\\"{string:eq}(25)\\\", \\\"Supported-Features.0.Feature-List\\\": \\\"{integer:eq}(28)\\\", \\\"Requested-EUTRAN-Authentication-Info.Number-Of-Requested-Vectors\\\": \\\"{integer:eq}(1)\\\", \\\"Requested-EUTRAN-Authentication-Info.Immediate-Response-Preferred\\\": \\\"{integer:eq}(0)\\\", \\\"Visited-PLMN-Id\\\": \\\"{string:eq}(00f110)\\\", \\\"Vendor-Specific-Application-Id.0\\\": \\\"present\\\", \\\"Supported-Features.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:34,530:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,531:rmq_service.py:236:INFO abot_hss1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,531:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:34,531:epc_service.py:69:INFO ENDPOINT: HSS1,MME1\\n2023-07-17 07:34:34,532:epc_service.py:71:INFO MESSAGE NAME: DIA_AUTHENTICATION_INFORMATION_REQUEST\\n2023-07-17 07:34:34,532:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,534:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,535:epc_service.py:166:INFO STEP :When I send DIAMETER message DIA_AUTHENTICATION_INFORMATION_ANSWER on Interface S6A from node HSS1 to node MME1\\n2023-07-17 07:34:34,535:epc_service.py:51:INFO DIA_AUTHENTICATION_INFORMATION_ANSWER\\n2023-07-17 07:34:34,537:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,537:rmq_service.py:204:INFO abot_hss1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"DIA_AUTHENTICATION_INFORMATION_ANSWER\\\", \\\"endpoint\\\": \\\"HSS1,MME1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S6A\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"Hop-by-Hop Identifier\\\": \\\"$(HOP_BY_HOP_ID)\\\", \\\"End-to-End Identifier\\\": \\\"$(END_TO_END_ID)\\\", \\\"Session-Id\\\": \\\"$(DIA_SESS_ID_S6A)\\\", \\\"DRMP\\\": \\\"1\\\", \\\"Vendor-Specific-Application-Id.0.Vendor-Id\\\": \\\"10415\\\", \\\"Vendor-Specific-Application-Id.0.Auth-Application-Id\\\": \\\"16777251\\\", \\\"Vendor-Specific-Application-Id.0.Acct-Application-Id\\\": \\\"86\\\", \\\"Result-Code\\\": \\\"2001\\\", \\\"Experimental-Result.Vendor-Id\\\": \\\"0\\\", \\\"Experimental-Result.Experimental-Result-Code\\\": \\\"255\\\", \\\"Error-Diagnostic\\\": \\\"4\\\", \\\"Auth-Session-State\\\": \\\"1\\\", \\\"Origin-Host\\\": \\\"abot-volte-pro.rebaca.com\\\", \\\"Origin-Realm\\\": \\\"rebaca.com\\\", \\\"OC-Supported-Features.OC-Feature-Vector\\\": \\\"88\\\", \\\"OC-OLR.OC-Sequence-Number\\\": \\\"18446744073709551615\\\", \\\"OC-OLR.OC-Reduction-Percentage\\\": \\\"50\\\", \\\"OC-OLR.OC-Validity-Duration\\\": \\\"4294967295\\\", \\\"Supported-Features.0.Vendor-Id\\\": \\\"22\\\", \\\"Supported-Features.0.Feature-List-ID\\\": \\\"25\\\", \\\"Supported-Features.0.Feature-List\\\": \\\"28\\\", \\\"Authentication-Info.E-UTRAN-Vector.Item-Number\\\": \\\"22\\\", \\\"Authentication-Info.E-UTRAN-Vector.RAND\\\": \\\"a7d95266a767d26f6abc1166da693b72\\\", \\\"Authentication-Info.E-UTRAN-Vector.XRES\\\": \\\"5b06f1c54fe1f40b\\\", \\\"Authentication-Info.E-UTRAN-Vector.AUTN\\\": \\\"c4d01d136c008000b786c9fa1625a15d\\\", \\\"Authentication-Info.E-UTRAN-Vector.KASME\\\": \\\"da1c3ed8319e7d85fdbccd2987a577b357dd14efa1696a4c\\\", \\\"Authentication-Info.UTRAN-Vector.Item-Number\\\": \\\"22\\\", \\\"Authentication-Info.UTRAN-Vector.RAND\\\": \\\"a7d95266a767d26f6abc1166da693b72\\\", \\\"Authentication-Info.UTRAN-Vector.XRES\\\": \\\"5b06f1c54fe1f40b\\\", \\\"Authentication-Info.UTRAN-Vector.AUTN\\\": \\\"c4d01d136c008000b786c9fa1625a15d\\\", \\\"Authentication-Info.UTRAN-Vector.Confidentiality-Key\\\": \\\"bdf56c851aaa800076e0119b2e3e7e70\\\", \\\"Authentication-Info.UTRAN-Vector.Integrity-Key\\\": \\\"bdf56c851aaa800076e0119b2e3e7e60\\\", \\\"OC-OLR.OC-Report-Type\\\": \\\"1\\\", \\\"Vendor-Specific-Application-Id.0\\\": \\\"present\\\", \\\"Supported-Features.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:34,593:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,593:rmq_service.py:236:INFO abot_hss1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,594:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:34,594:epc_service.py:69:INFO ENDPOINT: HSS1,MME1\\n2023-07-17 07:34:34,594:epc_service.py:71:INFO MESSAGE NAME: DIA_AUTHENTICATION_INFORMATION_ANSWER\\n2023-07-17 07:34:34,594:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,602:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,603:epc_service.py:260:INFO STEP: Then I receive and validate DIAMETER  message DIA_AUTHENTICATION_INFORMATION_ANSWER on interface S6A  with the following details on node MME1 from node HSS1 \\n2023-07-17 07:34:34,604:epc_service.py:51:INFO DIA_AUTHENTICATION_INFORMATION_ANSWER\\n2023-07-17 07:34:34,605:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,606:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"DIA_AUTHENTICATION_INFORMATION_ANSWER\\\", \\\"endpoint\\\": \\\"MME1,HSS1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S6A\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"Hop-by-Hop Identifier\\\": \\\"save(HOP_BY_HOP_ID)\\\", \\\"End-to-End Identifier\\\": \\\"save(END_TO_END_ID)\\\", \\\"Session-Id\\\": \\\"save(DIA_SESS_ID_S6A)\\\", \\\"DRMP\\\": \\\"{string:eq}(1)\\\", \\\"Vendor-Specific-Application-Id.0.Vendor-Id\\\": \\\"{string:eq}(10415)\\\", \\\"Vendor-Specific-Application-Id.0.Auth-Application-Id\\\": \\\"{string:eq}(16777251)\\\", \\\"Vendor-Specific-Application-Id.0.Acct-Application-Id\\\": \\\"{string:eq}(86)\\\", \\\"Result-Code\\\": \\\"{integer:eq}(2001)\\\", \\\"Experimental-Result.Vendor-Id\\\": \\\"{integer:eq}(0)\\\", \\\"Experimental-Result.Experimental-Result-Code\\\": \\\"{string:eq}(255)\\\", \\\"Error-Diagnostic\\\": \\\"{integer:eq}(4)\\\", \\\"Auth-Session-State\\\": \\\"{string:eq}(1)\\\", \\\"Origin-Host\\\": \\\"{string:eq}(abot-volte-pro.rebaca.com)\\\", \\\"Origin-Realm\\\": \\\"{string:eq}(rebaca.com)\\\", \\\"OC-Supported-Features.OC-Feature-Vector\\\": \\\"{integer:eq}(88)\\\", \\\"OC-OLR.OC-Sequence-Number\\\": \\\"{string:eq}(18446744073709551615)\\\", \\\"OC-OLR.OC-Reduction-Percentage\\\": \\\"{string:eq}(50)\\\", \\\"OC-OLR.OC-Validity-Duration\\\": \\\"{string:eq}(4294967295)\\\", \\\"Supported-Features.0.Vendor-Id\\\": \\\"{string:eq}(22)\\\", \\\"Supported-Features.0.Feature-List-ID\\\": \\\"{string:eq}(25)\\\", \\\"Supported-Features.0.Feature-List\\\": \\\"{integer:eq}(28)\\\", \\\"Authentication-Info.E-UTRAN-Vector.Item-Number\\\": \\\"{integer:eq}(22)\\\", \\\"Authentication-Info.E-UTRAN-Vector.RAND\\\": \\\"{string:eq}(a7d95266a767d26f6abc1166da693b72)\\\", \\\"Authentication-Info.E-UTRAN-Vector.XRES\\\": \\\"{string:eq}(5b06f1c54fe1f40b)\\\", \\\"Authentication-Info.E-UTRAN-Vector.AUTN\\\": \\\"{string:eq}(c4d01d136c008000b786c9fa1625a15d)\\\", \\\"Authentication-Info.E-UTRAN-Vector.KASME\\\": \\\"{string:eq}(da1c3ed8319e7d85fdbccd2987a577b357dd14efa1696a4c)\\\", \\\"Authentication-Info.UTRAN-Vector.Item-Number\\\": \\\"{integer:eq}(22)\\\", \\\"Authentication-Info.UTRAN-Vector.RAND\\\": \\\"{string:eq}(a7d95266a767d26f6abc1166da693b72)\\\", \\\"Authentication-Info.UTRAN-Vector.XRES\\\": \\\"{string:eq}(5b06f1c54fe1f40b)\\\", \\\"Authentication-Info.UTRAN-Vector.AUTN\\\": \\\"{string:eq}(c4d01d136c008000b786c9fa1625a15d)\\\", \\\"Authentication-Info.UTRAN-Vector.Confidentiality-Key\\\": \\\"{string:eq}(bdf56c851aaa800076e0119b2e3e7e70)\\\", \\\"Authentication-Info.UTRAN-Vector.Integrity-Key\\\": \\\"{string:eq}(bdf56c851aaa800076e0119b2e3e7e60)\\\", \\\"OC-OLR.OC-Report-Type\\\": \\\"{integer:eq}(1)\\\", \\\"Vendor-Specific-Application-Id.0\\\": \\\"present\\\", \\\"Supported-Features.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:34,651:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,651:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,651:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:34,651:epc_service.py:69:INFO ENDPOINT: MME1,HSS1\\n2023-07-17 07:34:34,651:epc_service.py:71:INFO MESSAGE NAME: DIA_AUTHENTICATION_INFORMATION_ANSWER\\n2023-07-17 07:34:34,651:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,657:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,657:epc_service.py:166:INFO STEP :When I send S1AP message S1_DOWNLINK_NAS_AUTHENTICATION_REQ on Interface S1-MME from node MME1 to node eNodeB1\\n2023-07-17 07:34:34,657:epc_service.py:51:INFO S1_DOWNLINK_NAS_AUTHENTICATION_REQ\\n2023-07-17 07:34:34,659:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,659:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_DOWNLINK_NAS_AUTHENTICATION_REQ\\\", \\\"endpoint\\\": \\\"MME1,eNodeB1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"$(ENB_UE_S1AP_ID)\\\", \\\"mme_ue_s1ap_id\\\": \\\"incr(92274976,1)\\\", \\\"nas_pdu.protocol_discriminator.emm\\\": \\\"0x07\\\", \\\"nas_pdu.message_type.emm\\\": \\\"0x52\\\", \\\"nas_pdu.security_header_type.plain\\\": \\\"0\\\", \\\"nas_pdu.authentication_request.type_of_security_context\\\": \\\"0\\\", \\\"nas_pdu.authentication_request.nas_key_set_identifier\\\": \\\"0\\\", \\\"nas_pdu.authentication_request.AMF\\\": \\\"8000\\\", \\\"nas_pdu.authentication_request.K\\\": \\\"8baf473f2f8fd09487cccbd7097c6862\\\", \\\"nas_pdu.authentication_request.OP\\\": \\\"1006020f0a478bf6b699f15c062e42b3\\\", \\\"nas_pdu.authentication_request.selected_plmn\\\": \\\"00101\\\", \\\"nas_pdu.authentication_request.RAND\\\": \\\"a7d95266a767d26f6abc1166da693b72\\\", \\\"nas_pdu.authentication_request.AUTN\\\": \\\"c4d01d136c008000b786c9fa1625a15d\\\"}]}\\n2023-07-17 07:34:34,707:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,707:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,707:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:34,707:epc_service.py:69:INFO ENDPOINT: MME1,ENODEB1\\n2023-07-17 07:34:34,707:epc_service.py:71:INFO MESSAGE NAME: S1_DOWNLINK_NAS_AUTHENTICATION_REQ\\n2023-07-17 07:34:34,707:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,709:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,709:epc_service.py:260:INFO STEP: Then I receive and validate S1AP  message S1_DOWNLINK_NAS_AUTHENTICATION_REQ on interface S1-MME  with the following details on node eNodeB1 from node MME1 \\n2023-07-17 07:34:34,709:epc_service.py:51:INFO S1_DOWNLINK_NAS_AUTHENTICATION_REQ\\n2023-07-17 07:34:34,710:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,711:rmq_service.py:204:INFO abot_enodeb1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_DOWNLINK_NAS_AUTHENTICATION_REQ\\\", \\\"endpoint\\\": \\\"eNodeB1,MME1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"save(ENB_UE_S1AP_ID)\\\", \\\"mme_ue_s1ap_id\\\": \\\"save(MME_UE_S1AP_ID)\\\", \\\"nas_pdu.protocol_discriminator.emm\\\": \\\"{string:eq}(0x07)\\\", \\\"nas_pdu.message_type.emm\\\": \\\"{string:eq}(0x52)\\\", \\\"nas_pdu.security_header_type.plain\\\": \\\"{string:eq}(0)\\\", \\\"nas_pdu.authentication_request.type_of_security_context\\\": \\\"{string:eq}(0)\\\", \\\"nas_pdu.authentication_request.nas_key_set_identifier\\\": \\\"save(KEY_SET_ID)\\\", \\\"nas_pdu.authentication_request.AMF\\\": \\\"8000\\\", \\\"nas_pdu.authentication_request.K\\\": \\\"8baf473f2f8fd09487cccbd7097c6862\\\", \\\"nas_pdu.authentication_request.OP\\\": \\\"1006020f0a478bf6b699f15c062e42b3\\\", \\\"nas_pdu.authentication_request.selected_plmn\\\": \\\"00101\\\", \\\"nas_pdu.authentication_request.RAND\\\": \\\"save(RAND)\\\", \\\"nas_pdu.authentication_request.AUTN\\\": \\\"save(AUTN)\\\", \\\"nas_pdu.authentication_request.authentication_status\\\": \\\"{string:eq}(SUCCESS)\\\", \\\"nas_pdu.authentication_request.RES\\\": \\\"save(NAS_PDU_RES)\\\"}]}\\n2023-07-17 07:34:34,754:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,754:rmq_service.py:236:INFO abot_enodeb1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,755:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:34,755:epc_service.py:69:INFO ENDPOINT: ENODEB1,MME1\\n2023-07-17 07:34:34,755:epc_service.py:71:INFO MESSAGE NAME: S1_DOWNLINK_NAS_AUTHENTICATION_REQ\\n2023-07-17 07:34:34,755:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,756:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,757:epc_service.py:166:INFO STEP :When I send S1AP message S1_UPLINK_NAS_AUTHENTICATION_RES on Interface S1-MME from node eNodeB1 to node MME1\\n2023-07-17 07:34:34,757:epc_service.py:51:INFO S1_UPLINK_NAS_AUTHENTICATION_RES\\n2023-07-17 07:34:34,758:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,758:rmq_service.py:204:INFO abot_enodeb1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_UPLINK_NAS_AUTHENTICATION_RES\\\", \\\"endpoint\\\": \\\"eNodeB1,MME1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"$(ENB_UE_S1AP_ID)\\\", \\\"mme_ue_s1ap_id\\\": \\\"$(MME_UE_S1AP_ID)\\\", \\\"nas_pdu.protocol_discriminator.emm\\\": \\\"0x07\\\", \\\"nas_pdu.message_type.emm\\\": \\\"0x53\\\", \\\"nas_pdu.security_header_type.plain\\\": \\\"0\\\", \\\"nas_pdu.authentication_response.RES\\\": \\\"$(NAS_PDU_RES)\\\", \\\"eutran_cgi.plmn_identity.mcc\\\": \\\"001\\\", \\\"eutran_cgi.plmn_identity.mnc\\\": \\\"01\\\", \\\"eutran_cgi.cell_id\\\": \\\"3584\\\", \\\"tai.plmn_identity.mcc\\\": \\\"001\\\", \\\"tai.plmn_identity.mnc\\\": \\\"01\\\", \\\"tai.tac\\\": \\\"1\\\"}]}\\n2023-07-17 07:34:34,802:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,803:rmq_service.py:236:INFO abot_enodeb1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,803:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:34,803:epc_service.py:69:INFO ENDPOINT: ENODEB1,MME1\\n2023-07-17 07:34:34,803:epc_service.py:71:INFO MESSAGE NAME: S1_UPLINK_NAS_AUTHENTICATION_RES\\n2023-07-17 07:34:34,803:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,805:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,805:epc_service.py:260:INFO STEP: Then I receive and validate S1AP  message S1_UPLINK_NAS_AUTHENTICATION_RES on interface S1-MME  with the following details on node MME1 from node eNodeB1 \\n2023-07-17 07:34:34,805:epc_service.py:51:INFO S1_UPLINK_NAS_AUTHENTICATION_RES\\n2023-07-17 07:34:34,806:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,806:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_UPLINK_NAS_AUTHENTICATION_RES\\\", \\\"endpoint\\\": \\\"MME1,eNodeB1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"{string:eq}($(ENB_UE_S1AP_ID))\\\", \\\"mme_ue_s1ap_id\\\": \\\"save(MME_UE_S1AP_ID)\\\", \\\"nas_pdu.protocol_discriminator.emm\\\": \\\"{string:eq}(0x07)\\\", \\\"nas_pdu.message_type.emm\\\": \\\"{string:eq}(0x53)\\\", \\\"nas_pdu.security_header_type.plain\\\": \\\"{string:eq}(0)\\\", \\\"nas_pdu.authentication_response.RES\\\": \\\"save(NAS_PDU_RES)\\\", \\\"eutran_cgi.plmn_identity.mcc\\\": \\\"{integer:eq}(001)\\\", \\\"eutran_cgi.plmn_identity.mnc\\\": \\\"{integer:eq}(01)\\\", \\\"eutran_cgi.cell_id\\\": \\\"{string:eq}(3584)\\\", \\\"tai.plmn_identity.mcc\\\": \\\"{integer:eq}(001)\\\", \\\"tai.plmn_identity.mnc\\\": \\\"{integer:eq}(01)\\\", \\\"tai.tac\\\": \\\"{integer:eq}(1)\\\"}]}\\n2023-07-17 07:34:34,850:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,850:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,851:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:34,851:epc_service.py:69:INFO ENDPOINT: MME1,ENODEB1\\n2023-07-17 07:34:34,851:epc_service.py:71:INFO MESSAGE NAME: S1_UPLINK_NAS_AUTHENTICATION_RES\\n2023-07-17 07:34:34,851:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,852:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,853:epc_service.py:166:INFO STEP :When I send S1AP message S1_DOWNLINK_NAS_SECURITY_MODE_CMD on Interface S1-MME from node MME1 to node eNodeB1\\n2023-07-17 07:34:34,853:epc_service.py:51:INFO S1_DOWNLINK_NAS_SECURITY_MODE_CMD\\n2023-07-17 07:34:34,854:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,854:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_DOWNLINK_NAS_SECURITY_MODE_CMD\\\", \\\"endpoint\\\": \\\"MME1,eNodeB1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"$(ENB_UE_S1AP_ID)\\\", \\\"mme_ue_s1ap_id\\\": \\\"$(MME_UE_S1AP_ID)\\\", \\\"nas_pdu.protocol_discriminator.emm\\\": \\\"0x07\\\", \\\"nas_pdu.security_header_protocol_discriminator\\\": \\\"7\\\", \\\"nas_pdu.message_type.emm\\\": \\\"0x5d\\\", \\\"nas_pdu.security_header_type.plain\\\": \\\"0\\\", \\\"nas_pdu.security_header_type.protected\\\": \\\"3\\\", \\\"nas_pdu.message_authentication_code\\\": \\\"0x00000000\\\", \\\"nas_pdu.sequence_number\\\": \\\"0\\\", \\\"nas_pdu.security_mode_command.type_of_security_context\\\": \\\"0\\\", \\\"nas_pdu.security_mode_command.nas_key_set_identifier\\\": \\\"0\\\", \\\"nas_pdu.security_mode_command.ue_security_capability.eea\\\": \\\"0x00\\\", \\\"nas_pdu.security_mode_command.ue_security_capability.eia\\\": \\\"0x00\\\", \\\"nas_pdu.security_mode_command.nas_security_algorithms.eea\\\": \\\"0x00\\\", \\\"nas_pdu.security_mode_command.nas_security_algorithms.eia\\\": \\\"0x00\\\"}]}\\n2023-07-17 07:34:34,899:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,899:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,899:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:34,899:epc_service.py:69:INFO ENDPOINT: MME1,ENODEB1\\n2023-07-17 07:34:34,899:epc_service.py:71:INFO MESSAGE NAME: S1_DOWNLINK_NAS_SECURITY_MODE_CMD\\n2023-07-17 07:34:34,899:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,902:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,903:epc_service.py:260:INFO STEP: Then I receive and validate S1AP  message S1_DOWNLINK_NAS_SECURITY_MODE_CMD on interface S1-MME  with the following details on node eNodeB1 from node MME1 \\n2023-07-17 07:34:34,903:epc_service.py:51:INFO S1_DOWNLINK_NAS_SECURITY_MODE_CMD\\n2023-07-17 07:34:34,905:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,905:rmq_service.py:204:INFO abot_enodeb1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_DOWNLINK_NAS_SECURITY_MODE_CMD\\\", \\\"endpoint\\\": \\\"eNodeB1,MME1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"{string:eq}($(ENB_UE_S1AP_ID))\\\", \\\"mme_ue_s1ap_id\\\": \\\"{string:eq}($(MME_UE_S1AP_ID))\\\", \\\"nas_pdu.protocol_discriminator.emm\\\": \\\"{string:eq}(0x07)\\\", \\\"nas_pdu.security_header_protocol_discriminator\\\": \\\"{string:eq}(7)\\\", \\\"nas_pdu.message_type.emm\\\": \\\"{string:eq}(0x5d)\\\", \\\"nas_pdu.security_header_type.plain\\\": \\\"{string:eq}(0)\\\", \\\"nas_pdu.security_header_type.protected\\\": \\\"{string:eq}(3)\\\", \\\"nas_pdu.message_authentication_code\\\": \\\"save(MAC)\\\", \\\"nas_pdu.sequence_number\\\": \\\"save(NAS_MME_SEQ_NO)\\\", \\\"nas_pdu.security_mode_command.type_of_security_context\\\": \\\"{string:eq}(0)\\\", \\\"nas_pdu.security_mode_command.nas_key_set_identifier\\\": \\\"save(KEY_SET_ID)\\\", \\\"nas_pdu.security_mode_command.ue_security_capability.eea\\\": \\\"{string:eq}(0x00)\\\", \\\"nas_pdu.security_mode_command.ue_security_capability.eia\\\": \\\"{string:eq}(0x00)\\\", \\\"nas_pdu.security_mode_command.nas_security_algorithms.eea\\\": \\\"{integer:eq}(0x00)\\\", \\\"nas_pdu.security_mode_command.nas_security_algorithms.eia\\\": \\\"{integer:eq}(0x00)\\\"}]}\\n2023-07-17 07:34:34,951:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:34,951:rmq_service.py:236:INFO abot_enodeb1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:34,951:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:34,951:epc_service.py:69:INFO ENDPOINT: ENODEB1,MME1\\n2023-07-17 07:34:34,951:epc_service.py:71:INFO MESSAGE NAME: S1_DOWNLINK_NAS_SECURITY_MODE_CMD\\n2023-07-17 07:34:34,952:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:34,953:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:34,954:epc_service.py:166:INFO STEP :When I send S1AP message S1_UPLINK_NAS_SECURITY_MODE_COMPLETE on Interface S1-MME from node eNodeB1 to node MME1\\n2023-07-17 07:34:34,954:epc_service.py:51:INFO S1_UPLINK_NAS_SECURITY_MODE_COMPLETE\\n2023-07-17 07:34:34,955:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:34,955:rmq_service.py:204:INFO abot_enodeb1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_UPLINK_NAS_SECURITY_MODE_COMPLETE\\\", \\\"endpoint\\\": \\\"eNodeB1,MME1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"$(ENB_UE_S1AP_ID)\\\", \\\"mme_ue_s1ap_id\\\": \\\"$(MME_UE_S1AP_ID)\\\", \\\"nas_pdu.protocol_discriminator.emm\\\": \\\"0x07\\\", \\\"nas_pdu.security_header_protocol_discriminator\\\": \\\"7\\\", \\\"nas_pdu.message_type.emm\\\": \\\"0x5e\\\", \\\"nas_pdu.security_header_type.plain\\\": \\\"0\\\", \\\"nas_pdu.security_header_type.protected\\\": \\\"4\\\", \\\"nas_pdu.sequence_number\\\": \\\"0\\\", \\\"eutran_cgi.plmn_identity.mcc\\\": \\\"001\\\", \\\"eutran_cgi.plmn_identity.mnc\\\": \\\"01\\\", \\\"eutran_cgi.cell_id\\\": \\\"3584\\\", \\\"tai.plmn_identity.mcc\\\": \\\"001\\\", \\\"tai.plmn_identity.mnc\\\": \\\"01\\\", \\\"tai.tac\\\": \\\"1\\\"}]}\\n2023-07-17 07:34:35,003:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,003:rmq_service.py:236:INFO abot_enodeb1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,003:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:35,003:epc_service.py:69:INFO ENDPOINT: ENODEB1,MME1\\n2023-07-17 07:34:35,003:epc_service.py:71:INFO MESSAGE NAME: S1_UPLINK_NAS_SECURITY_MODE_COMPLETE\\n2023-07-17 07:34:35,003:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,008:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,008:epc_service.py:260:INFO STEP: Then I receive and validate S1AP  message S1_UPLINK_NAS_SECURITY_MODE_COMPLETE on interface S1-MME  with the following details on node MME1 from node eNodeB1 \\n2023-07-17 07:34:35,009:epc_service.py:51:INFO S1_UPLINK_NAS_SECURITY_MODE_COMPLETE\\n2023-07-17 07:34:35,010:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,010:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_UPLINK_NAS_SECURITY_MODE_COMPLETE\\\", \\\"endpoint\\\": \\\"MME1,eNodeB1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"{string:eq}($(ENB_UE_S1AP_ID))\\\", \\\"mme_ue_s1ap_id\\\": \\\"{string:eq}($(MME_UE_S1AP_ID))\\\", \\\"nas_pdu.protocol_discriminator.emm\\\": \\\"{string:eq}(0x07)\\\", \\\"nas_pdu.security_header_protocol_discriminator\\\": \\\"{string:eq}(7)\\\", \\\"nas_pdu.message_type.emm\\\": \\\"{string:eq}(0x5e)\\\", \\\"nas_pdu.security_header_type.plain\\\": \\\"{string:eq}(0)\\\", \\\"nas_pdu.security_header_type.protected\\\": \\\"{string:eq}(4)\\\", \\\"nas_pdu.sequence_number\\\": \\\"save(NAS_UE_SEQ_NO)\\\", \\\"eutran_cgi.plmn_identity.mcc\\\": \\\"{integer:eq}(001)\\\", \\\"eutran_cgi.plmn_identity.mnc\\\": \\\"{integer:eq}(01)\\\", \\\"eutran_cgi.cell_id\\\": \\\"{string:eq}(3584)\\\", \\\"tai.plmn_identity.mcc\\\": \\\"{integer:eq}(001)\\\", \\\"tai.plmn_identity.mnc\\\": \\\"{integer:eq}(01)\\\", \\\"tai.tac\\\": \\\"{string:eq}(1)\\\"}]}\\n2023-07-17 07:34:35,055:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,055:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,055:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:35,055:epc_service.py:69:INFO ENDPOINT: MME1,ENODEB1\\n2023-07-17 07:34:35,055:epc_service.py:71:INFO MESSAGE NAME: S1_UPLINK_NAS_SECURITY_MODE_COMPLETE\\n2023-07-17 07:34:35,055:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,057:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,058:epc_service.py:166:INFO STEP :When I send DIAMETER message DIA_UPDATE_LOCATION_REQUEST on Interface S6A from node MME1 to node HSS1\\n2023-07-17 07:34:35,058:epc_service.py:51:INFO DIA_UPDATE_LOCATION_REQUEST\\n2023-07-17 07:34:35,059:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,060:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"DIA_UPDATE_LOCATION_REQUEST\\\", \\\"endpoint\\\": \\\"MME1,HSS1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S6A\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"Hop-by-Hop Identifier\\\": \\\"125\\\", \\\"End-to-End Identifier\\\": \\\"456\\\", \\\"Session-Id\\\": \\\"$(DIA_SESS_ID_S6A)\\\", \\\"Auth-Session-State\\\": \\\"1\\\", \\\"Origin-Host\\\": \\\"abot-volte-pro.rebaca.com\\\", \\\"Origin-Realm\\\": \\\"rebaca.com\\\", \\\"Destination-Host\\\": \\\"abot-volte-pro.rebaca.com\\\", \\\"Destination-Realm\\\": \\\"rebaca.com\\\", \\\"User-Name\\\": \\\"$(IMSI)\\\", \\\"Terminal-Information.IMEI\\\": \\\"incr(990000862471854,1)\\\", \\\"Terminal-Information.Software-Version\\\": \\\"15.7.0\\\", \\\"ULR-Flags\\\": \\\"34\\\", \\\"Visited-PLMN-Id\\\": \\\"00f110\\\", \\\"RAT-Type\\\": \\\"6\\\"}]}\\n2023-07-17 07:34:35,123:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,123:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,124:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:35,124:epc_service.py:69:INFO ENDPOINT: MME1,HSS1\\n2023-07-17 07:34:35,124:epc_service.py:71:INFO MESSAGE NAME: DIA_UPDATE_LOCATION_REQUEST\\n2023-07-17 07:34:35,124:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,132:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,132:epc_service.py:260:INFO STEP: Then I receive and validate DIAMETER  message DIA_UPDATE_LOCATION_REQUEST on interface S6A  with the following details on node HSS1 from node MME1 \\n2023-07-17 07:34:35,133:epc_service.py:51:INFO DIA_UPDATE_LOCATION_REQUEST\\n2023-07-17 07:34:35,134:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,134:rmq_service.py:204:INFO abot_hss1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"DIA_UPDATE_LOCATION_REQUEST\\\", \\\"endpoint\\\": \\\"HSS1,MME1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S6A\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"Hop-by-Hop Identifier\\\": \\\"save(HOP_BY_HOP_ID)\\\", \\\"End-to-End Identifier\\\": \\\"save(END_TO_END_ID)\\\", \\\"Session-Id\\\": \\\"{string:eq}($(DIA_SESS_ID_S6A))\\\", \\\"Auth-Session-State\\\": \\\"{string:eq}(1)\\\", \\\"Origin-Host\\\": \\\"{string:eq}(abot-volte-pro.rebaca.com)\\\", \\\"Origin-Realm\\\": \\\"{string:eq}(rebaca.com)\\\", \\\"Destination-Host\\\": \\\"{string:eq}(abot-volte-pro.rebaca.com)\\\", \\\"Destination-Realm\\\": \\\"{string:eq}(rebaca.com)\\\", \\\"User-Name\\\": \\\"save(IMSI)\\\", \\\"Terminal-Information.IMEI\\\": \\\"save(IMEI)\\\", \\\"Terminal-Information.Software-Version\\\": \\\"{string:eq}(15.7.0)\\\", \\\"ULR-Flags\\\": \\\"{integer:eq}(34)\\\", \\\"Visited-PLMN-Id\\\": \\\"{string:eq}(00f110)\\\", \\\"RAT-Type\\\": \\\"{string:eq}(6)\\\"}]}\\n2023-07-17 07:34:35,183:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,183:rmq_service.py:236:INFO abot_hss1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,184:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:35,184:epc_service.py:69:INFO ENDPOINT: HSS1,MME1\\n2023-07-17 07:34:35,184:epc_service.py:71:INFO MESSAGE NAME: DIA_UPDATE_LOCATION_REQUEST\\n2023-07-17 07:34:35,184:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,186:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,187:epc_service.py:166:INFO STEP :When I send DIAMETER message DIA_UPDATE_LOCATION_ANSWER on Interface S6A from node HSS1 to node MME1\\n2023-07-17 07:34:35,187:epc_service.py:51:INFO DIA_UPDATE_LOCATION_ANSWER\\n2023-07-17 07:34:35,202:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,202:rmq_service.py:204:INFO abot_hss1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"DIA_UPDATE_LOCATION_ANSWER\\\", \\\"endpoint\\\": \\\"HSS1,MME1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S6A\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"Hop-by-Hop Identifier\\\": \\\"$(HOP_BY_HOP_ID)\\\", \\\"End-to-End Identifier\\\": \\\"$(END_TO_END_ID)\\\", \\\"Session-Id\\\": \\\"$(DIA_SESS_ID_S6A)\\\", \\\"Result-Code\\\": \\\"2001\\\", \\\"Auth-Session-State\\\": \\\"1\\\", \\\"Origin-Host\\\": \\\"abot-volte-pro.rebaca.com\\\", \\\"Origin-Realm\\\": \\\"rebaca.com\\\", \\\"ULA-Flags\\\": \\\"1\\\", \\\"Subscription-Data.Subscriber-Status\\\": \\\"0\\\", \\\"Subscription-Data.Network-Access-Mode\\\": \\\"2\\\", \\\"Subscription-Data.Access-Restriction-Data\\\": \\\"47\\\", \\\"Subscription-Data.APN-OI-Replacement\\\": \\\"mnc001.mcc001.3gppnetwork.org\\\", \\\"Subscription-Data.AMBR.Max-Requested-Bandwidth-UL\\\": \\\"100000000\\\", \\\"Subscription-Data.AMBR.Max-Requested-Bandwidth-DL\\\": \\\"200000000\\\", \\\"Subscription-Data.APN-Configuration-Profile.Context-Identifier\\\": \\\"1\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.Context-Identifier\\\": \\\"1\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.PDN-Type\\\": \\\"0\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.Service-Selection\\\": \\\"internet\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.QoS-Class-Identifier\\\": \\\"9\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.Allocation-Retention-Priority.Priority-Level\\\": \\\"1\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.Allocation-Retention-Priority.Pre-emption-Capability\\\": \\\"0\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.Allocation-Retention-Priority.Pre-emption-Vulnerability\\\": \\\"0\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.AMBR.Max-Requested-Bandwidth-UL\\\": \\\"100000000\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.AMBR.Max-Requested-Bandwidth-DL\\\": \\\"200000000\\\", \\\"Subscription-Data.MSISDN\\\": \\\"22331010101010\\\", \\\"Subscription-Data.APN-Configuration-Profile.All-APN-Configurations-Included-Indicator\\\": \\\"0\\\", \\\"Subscription-Data.Subscribed-Periodic-RAU-TAU-Timer\\\": \\\"120\\\"}]}\\n2023-07-17 07:34:35,260:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,261:rmq_service.py:236:INFO abot_hss1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,261:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:35,261:epc_service.py:69:INFO ENDPOINT: HSS1,MME1\\n2023-07-17 07:34:35,261:epc_service.py:71:INFO MESSAGE NAME: DIA_UPDATE_LOCATION_ANSWER\\n2023-07-17 07:34:35,261:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,263:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,263:epc_service.py:260:INFO STEP: Then I receive and validate DIAMETER  message DIA_UPDATE_LOCATION_ANSWER on interface S6A  with the following details on node MME1 from node HSS1 \\n2023-07-17 07:34:35,264:epc_service.py:51:INFO DIA_UPDATE_LOCATION_ANSWER\\n2023-07-17 07:34:35,279:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,279:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"DIA_UPDATE_LOCATION_ANSWER\\\", \\\"endpoint\\\": \\\"MME1,HSS1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S6A\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"Hop-by-Hop Identifier\\\": \\\"save(HOP_BY_HOP_ID)\\\", \\\"End-to-End Identifier\\\": \\\"save(END_TO_END_ID)\\\", \\\"Session-Id\\\": \\\"{string:eq}($(DIA_SESS_ID_S6A))\\\", \\\"Result-Code\\\": \\\"{integer:eq}(2001)\\\", \\\"Auth-Session-State\\\": \\\"{string:eq}(1)\\\", \\\"Origin-Host\\\": \\\"abot-volte-pro.rebaca.com\\\", \\\"Origin-Realm\\\": \\\"rebaca.com\\\", \\\"ULA-Flags\\\": \\\"{integer:eq}(1)\\\", \\\"Subscription-Data.Subscriber-Status\\\": \\\"{integer:eq}(0)\\\", \\\"Subscription-Data.Network-Access-Mode\\\": \\\"{integer:eq}(2)\\\", \\\"Subscription-Data.Access-Restriction-Data\\\": \\\"{integer:eq}(47)\\\", \\\"Subscription-Data.APN-OI-Replacement\\\": \\\"{string:eq}(mnc001.mcc001.3gppnetwork.org)\\\", \\\"Subscription-Data.AMBR.Max-Requested-Bandwidth-UL\\\": \\\"{string:eq}(100000000)\\\", \\\"Subscription-Data.AMBR.Max-Requested-Bandwidth-DL\\\": \\\"{string:eq}(200000000)\\\", \\\"Subscription-Data.APN-Configuration-Profile.Context-Identifier\\\": \\\"{integer:eq}(1)\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.Context-Identifier\\\": \\\"{integer:eq}(1)\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.PDN-Type\\\": \\\"{integer:eq}(0)\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.Service-Selection\\\": \\\"{string:eq}(internet)\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.QoS-Class-Identifier\\\": \\\"{string:eq}(9)\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.Allocation-Retention-Priority.Priority-Level\\\": \\\"{string:eq}(1)\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.Allocation-Retention-Priority.Pre-emption-Capability\\\": \\\"{string:eq}(0)\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.EPS-Subscribed-QoS-Profile.Allocation-Retention-Priority.Pre-emption-Vulnerability\\\": \\\"{string:eq}(0)\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.AMBR.Max-Requested-Bandwidth-UL\\\": \\\"{string:eq}(100000000)\\\", \\\"Subscription-Data.APN-Configuration-Profile.APN-Configuration.AMBR.Max-Requested-Bandwidth-DL\\\": \\\"{string:eq}(200000000)\\\", \\\"Subscription-Data.MSISDN\\\": \\\"{string:eq}(22331010101010)\\\", \\\"Subscription-Data.APN-Configuration-Profile.All-APN-Configurations-Included-Indicator\\\": \\\"{integer:eq}(0)\\\", \\\"Subscription-Data.Subscribed-Periodic-RAU-TAU-Timer\\\": \\\"{integer:eq}(120)\\\"}]}\\n2023-07-17 07:34:35,327:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,327:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,327:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:35,327:epc_service.py:69:INFO ENDPOINT: MME1,HSS1\\n2023-07-17 07:34:35,327:epc_service.py:71:INFO MESSAGE NAME: DIA_UPDATE_LOCATION_ANSWER\\n2023-07-17 07:34:35,327:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,329:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,330:epc_service.py:166:INFO STEP :When I send GTPV2C message GTPV2C_CREATE_SESSION_REQUEST on Interface S11 from node MME1 to node SGW1\\n2023-07-17 07:34:35,332:epc_service.py:51:INFO GTPV2C_CREATE_SESSION_REQUEST\\n2023-07-17 07:34:35,332:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,332:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"GTPV2C_CREATE_SESSION_REQUEST\\\", \\\"endpoint\\\": \\\"MME1,SGW1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S11\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"header.message_type\\\": \\\"32\\\", \\\"header.teid\\\": \\\"0\\\", \\\"header.seq_number\\\": \\\"incr(1,8)\\\", \\\"imsi\\\": \\\"$(IMSI)\\\", \\\"msisdn\\\": \\\"incr(22331010101010,1)\\\", \\\"meid\\\": \\\"incr(123456789012345,1)\\\", \\\"user_location_info.uli_flags\\\": \\\"10\\\", \\\"user_location_info.ecgi.plmn_identity.mcc\\\": \\\"001\\\", \\\"user_location_info.ecgi.plmn_identity.mnc\\\": \\\"01\\\", \\\"user_location_info.ecgi.cell_id\\\": \\\"E000B\\\", \\\"serving_network.mcc\\\": \\\"001\\\", \\\"serving_network.mnc\\\": \\\"01\\\", \\\"rat_type\\\": \\\"6\\\", \\\"indication\\\": \\\"0x801801\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv4_flag\\\": \\\"1\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv6_flag\\\": \\\"0\\\", \\\"sender_fteid_cntrl_plane.fq_teid.interface_type\\\": \\\"10\\\", \\\"sender_fteid_cntrl_plane.fq_teid.teid\\\": \\\"incr(10000000,1)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv4_add\\\": \\\"192.168.40.76\\\", \\\"pgw_s5_s8_address_cntrl_plane.fq_teid.ipv4_flag\\\": \\\"1\\\", \\\"pgw_s5_s8_address_cntrl_plane.fq_teid.ipv6_flag\\\": \\\"0\\\", \\\"pgw_s5_s8_address_cntrl_plane.fq_teid.interface_type\\\": \\\"7\\\", \\\"pgw_s5_s8_address_cntrl_plane.fq_teid.teid\\\": \\\"0\\\", \\\"pgw_s5_s8_address_cntrl_plane.fq_teid.ipv4_add\\\": \\\"0.0.0.0\\\", \\\"apn\\\": \\\"internet1.apn.epc.mnc001.mcc001.3gppnetwork.org\\\", \\\"selection_mode\\\": \\\"2\\\", \\\"pdn_type\\\": \\\"1\\\", \\\"pdn_address_allocation.pdn_type\\\": \\\"1\\\", \\\"pdn_address_allocation.pdn_address_and_prefix\\\": \\\"incr(172.16.0.10,1)\\\", \\\"maxm_apn_restriction.apn_restriction_value\\\": \\\"2\\\", \\\"ambr.apn_ambr_uplink\\\": \\\"50\\\", \\\"ambr.apn_ambr_downlink\\\": \\\"10\\\", \\\"linked.eps_bearer_id\\\": \\\"5\\\", \\\"protocol_config_options\\\": \\\"0x8080211001000010810600000000830600000000\\\", \\\"bearer_contexts_to_create.0.eps_bearer_id\\\": \\\"5\\\", \\\"bearer_contexts_to_create.0.bearer_qos.pvi\\\": \\\"0\\\", \\\"bearer_contexts_to_create.0.bearer_qos.pl\\\": \\\"15\\\", \\\"bearer_contexts_to_create.0.bearer_qos.pci\\\": \\\"1\\\", \\\"bearer_contexts_to_create.0.bearer_qos.qci\\\": \\\"0\\\", \\\"bearer_contexts_to_create.0.bearer_qos.max_bit_rate_ul\\\": \\\"50\\\", \\\"bearer_contexts_to_create.0.bearer_qos.max_bit_rate_dl\\\": \\\"10\\\", \\\"bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_ul\\\": \\\"3000000\\\", \\\"bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_dl\\\": \\\"8000000\\\", \\\"recovery\\\": \\\"0\\\", \\\"mme.fq_csid.node_id_type\\\": \\\"0\\\", \\\"mme.fq_csid.node_id\\\": \\\"192.168.40.76\\\", \\\"mme.fq_csid.csid\\\": \\\"1\\\", \\\"ue_timezone.time_zone\\\": \\\"2\\\", \\\"ue_timezone.daylight_saving_time\\\": \\\"4\\\", \\\"charging_char\\\": \\\"0x1ff0\\\", \\\"lapi\\\": \\\"0\\\", \\\"bearer_contexts_to_create.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:35,395:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,395:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,395:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:35,395:epc_service.py:69:INFO ENDPOINT: MME1,SGW1\\n2023-07-17 07:34:35,395:epc_service.py:71:INFO MESSAGE NAME: GTPV2C_CREATE_SESSION_REQUEST\\n2023-07-17 07:34:35,395:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,397:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,398:epc_service.py:260:INFO STEP: Then I receive and validate GTPV2C  message GTPV2C_CREATE_SESSION_REQUEST on interface S11  with the following details on node SGW1 from node MME1 \\n2023-07-17 07:34:35,399:epc_service.py:51:INFO GTPV2C_CREATE_SESSION_REQUEST\\n2023-07-17 07:34:35,400:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,400:rmq_service.py:204:INFO abot_sgw1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"GTPV2C_CREATE_SESSION_REQUEST\\\", \\\"endpoint\\\": \\\"SGW1,MME1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S11\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"header.message_type\\\": \\\"{string:eq}(32)\\\", \\\"header.teid\\\": \\\"{string:eq}(0)\\\", \\\"header.seq_number\\\": \\\"save(GTPV2C_HDR_SEQ_NO_S11)\\\", \\\"imsi\\\": \\\"save(IMSI)\\\", \\\"msisdn\\\": \\\"save(MSISDN)\\\", \\\"meid\\\": \\\"save(MEID)\\\", \\\"user_location_info.uli_flags\\\": \\\"{string:eq}(10)\\\", \\\"user_location_info.ecgi.plmn_identity.mcc\\\": \\\"{string:eq}(001)\\\", \\\"user_location_info.ecgi.plmn_identity.mnc\\\": \\\"{string:eq}(01)\\\", \\\"user_location_info.ecgi.cell_id\\\": \\\"{string:eq}(E000B)\\\", \\\"serving_network.mcc\\\": \\\"{integer:eq}(001)\\\", \\\"serving_network.mnc\\\": \\\"{integer:eq}(01)\\\", \\\"rat_type\\\": \\\"{string:eq}(6)\\\", \\\"indication\\\": \\\"{string:eq}(0x801801)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv4_flag\\\": \\\"{string:eq}(1)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv6_flag\\\": \\\"{string:eq}(0)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.interface_type\\\": \\\"{string:eq}(10)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.teid\\\": \\\"save(GTPV2C_HDR_DL_TEID_MME_S11)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv4_add\\\": \\\"save(GTPV2C_HDR_DL_IP_S11)\\\", \\\"pgw_s5_s8_address_cntrl_plane.fq_teid.ipv4_flag\\\": \\\"{string:eq}(1)\\\", \\\"pgw_s5_s8_address_cntrl_plane.fq_teid.ipv6_flag\\\": \\\"{string:eq}(0)\\\", \\\"pgw_s5_s8_address_cntrl_plane.fq_teid.interface_type\\\": \\\"{string:eq}(7)\\\", \\\"pgw_s5_s8_address_cntrl_plane.fq_teid.teid\\\": \\\"{string:eq}(0)\\\", \\\"pgw_s5_s8_address_cntrl_plane.fq_teid.ipv4_add\\\": \\\"{string:eq}(0.0.0.0)\\\", \\\"apn\\\": \\\"{string:eq}(internet1.apn.epc.mnc001.mcc001.3gppnetwork.org)\\\", \\\"selection_mode\\\": \\\"{string:eq}(2)\\\", \\\"pdn_type\\\": \\\"{string:eq}(1)\\\", \\\"pdn_address_allocation.pdn_type\\\": \\\"{string:eq}(1)\\\", \\\"pdn_address_allocation.pdn_address_and_prefix\\\": \\\"save(UE_IP)\\\", \\\"maxm_apn_restriction.apn_restriction_value\\\": \\\"{string:eq}(2)\\\", \\\"ambr.apn_ambr_uplink\\\": \\\"{string:eq}(50)\\\", \\\"ambr.apn_ambr_downlink\\\": \\\"{string:eq}(10)\\\", \\\"linked.eps_bearer_id\\\": \\\"{string:eq}(5)\\\", \\\"protocol_config_options\\\": \\\"{string:eq}(0x8080211001000010810600000000830600000000)\\\", \\\"bearer_contexts_to_create.0.eps_bearer_id\\\": \\\"{string:eq}(5)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.pvi\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.pl\\\": \\\"{string:eq}(15)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.pci\\\": \\\"{string:eq}(1)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.qci\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.max_bit_rate_ul\\\": \\\"{string:eq}(50)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.max_bit_rate_dl\\\": \\\"{string:eq}(10)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_ul\\\": \\\"{string:eq}(3000000)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_dl\\\": \\\"{string:eq}(8000000)\\\", \\\"recovery\\\": \\\"{string:eq}(0)\\\", \\\"mme.fq_csid.node_id_type\\\": \\\"{string:eq}(0)\\\", \\\"mme.fq_csid.node_id\\\": \\\"{string:eq}(192.168.40.76)\\\", \\\"mme.fq_csid.csid\\\": \\\"{string:eq}(1)\\\", \\\"ue_timezone.time_zone\\\": \\\"{string:eq}(2)\\\", \\\"ue_timezone.daylight_saving_time\\\": \\\"{string:eq}(4)\\\", \\\"charging_char\\\": \\\"{string:eq}(0x1ff0)\\\", \\\"lapi\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_to_create.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:35,447:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,447:rmq_service.py:236:INFO abot_sgw1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,447:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:35,448:epc_service.py:69:INFO ENDPOINT: SGW1,MME1\\n2023-07-17 07:34:35,448:epc_service.py:71:INFO MESSAGE NAME: GTPV2C_CREATE_SESSION_REQUEST\\n2023-07-17 07:34:35,448:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,454:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,455:epc_service.py:166:INFO STEP :When I send GTPV2C message GTPV2C_CREATE_SESSION_REQUEST on Interface S5-S8 from node SGW1 to node PGW1\\n2023-07-17 07:34:35,456:epc_service.py:51:INFO GTPV2C_CREATE_SESSION_REQUEST\\n2023-07-17 07:34:35,457:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,458:rmq_service.py:204:INFO abot_sgw1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"GTPV2C_CREATE_SESSION_REQUEST\\\", \\\"endpoint\\\": \\\"SGW1,PGW1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S5-S8\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"header.message_type\\\": \\\"32\\\", \\\"header.teid\\\": \\\"0\\\", \\\"header.seq_number\\\": \\\"incr(1,6)\\\", \\\"imsi\\\": \\\"$(IMSI)\\\", \\\"msisdn\\\": \\\"$(MSISDN)\\\", \\\"meid\\\": \\\"$(MEID)\\\", \\\"user_location_info.uli_flags\\\": \\\"10\\\", \\\"user_location_info.ecgi.plmn_identity.mcc\\\": \\\"001\\\", \\\"user_location_info.ecgi.plmn_identity.mnc\\\": \\\"01\\\", \\\"user_location_info.ecgi.cell_id\\\": \\\"E000B\\\", \\\"serving_network.mcc\\\": \\\"001\\\", \\\"serving_network.mnc\\\": \\\"01\\\", \\\"rat_type\\\": \\\"6\\\", \\\"indication\\\": \\\"0x801801\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv4_flag\\\": \\\"1\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv6_flag\\\": \\\"0\\\", \\\"sender_fteid_cntrl_plane.fq_teid.interface_type\\\": \\\"6\\\", \\\"sender_fteid_cntrl_plane.fq_teid.teid\\\": \\\"incr(30000000,1)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv4_add\\\": \\\"192.168.40.76\\\", \\\"apn\\\": \\\"internet1.apn.epc.mnc001.mcc001.3gppnetwork.org\\\", \\\"selection_mode\\\": \\\"2\\\", \\\"pdn_type\\\": \\\"1\\\", \\\"pdn_address_allocation.pdn_type\\\": \\\"1\\\", \\\"pdn_address_allocation.pdn_address_and_prefix\\\": \\\"$(UE_IP)\\\", \\\"maxm_apn_restriction.apn_restriction_value\\\": \\\"2\\\", \\\"ambr.apn_ambr_uplink\\\": \\\"50\\\", \\\"ambr.apn_ambr_downlink\\\": \\\"10\\\", \\\"linked.eps_bearer_id\\\": \\\"5\\\", \\\"protocol_config_options\\\": \\\"0x8080211001000010810600000000830600000000\\\", \\\"bearer_contexts_to_create.0.eps_bearer_id\\\": \\\"5\\\", \\\"bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.ipv4_flag\\\": \\\"1\\\", \\\"bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.ipv6_flag\\\": \\\"0\\\", \\\"bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.interface_type\\\": \\\"4\\\", \\\"bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.teid\\\": \\\"incr(30000000,1)\\\", \\\"bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.ipv4_add\\\": \\\"10.10.0.21\\\", \\\"bearer_contexts_to_create.0.bearer_qos.pvi\\\": \\\"0\\\", \\\"bearer_contexts_to_create.0.bearer_qos.pl\\\": \\\"15\\\", \\\"bearer_contexts_to_create.0.bearer_qos.pci\\\": \\\"1\\\", \\\"bearer_contexts_to_create.0.bearer_qos.qci\\\": \\\"0\\\", \\\"bearer_contexts_to_create.0.bearer_qos.max_bit_rate_ul\\\": \\\"50\\\", \\\"bearer_contexts_to_create.0.bearer_qos.max_bit_rate_dl\\\": \\\"10\\\", \\\"bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_ul\\\": \\\"3000000\\\", \\\"bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_dl\\\": \\\"8000000\\\", \\\"recovery\\\": \\\"0\\\", \\\"mme.fq_csid.node_id_type\\\": \\\"0\\\", \\\"mme.fq_csid.node_id\\\": \\\"192.168.40.76\\\", \\\"mme.fq_csid.csid\\\": \\\"1\\\", \\\"sgw.fq_csid.node_id_type\\\": \\\"0\\\", \\\"sgw.fq_csid.node_id\\\": \\\"192.168.40.76\\\", \\\"sgw.fq_csid.csid\\\": \\\"2\\\", \\\"ue_timezone.time_zone\\\": \\\"2\\\", \\\"ue_timezone.daylight_saving_time\\\": \\\"4\\\", \\\"charging_char\\\": \\\"0x1ff0\\\", \\\"lapi\\\": \\\"0\\\", \\\"bearer_contexts_to_create.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:35,506:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,507:rmq_service.py:236:INFO abot_sgw1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,507:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:35,507:epc_service.py:69:INFO ENDPOINT: SGW1,PGW1\\n2023-07-17 07:34:35,507:epc_service.py:71:INFO MESSAGE NAME: GTPV2C_CREATE_SESSION_REQUEST\\n2023-07-17 07:34:35,507:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,509:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,510:epc_service.py:260:INFO STEP: Then I receive and validate GTPV2C  message GTPV2C_CREATE_SESSION_REQUEST on interface S5-S8  with the following details on node PGW1 from node SGW1 \\n2023-07-17 07:34:35,512:epc_service.py:51:INFO GTPV2C_CREATE_SESSION_REQUEST\\n2023-07-17 07:34:35,512:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,512:rmq_service.py:204:INFO abot_pgw1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"GTPV2C_CREATE_SESSION_REQUEST\\\", \\\"endpoint\\\": \\\"PGW1,SGW1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S5-S8\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"header.message_type\\\": \\\"{string:eq}(32)\\\", \\\"header.teid\\\": \\\"{string:eq}(0)\\\", \\\"header.seq_number\\\": \\\"save(GTPV2C_HDR_SEQ_NO_S5S8)\\\", \\\"imsi\\\": \\\"save(IMSI)\\\", \\\"msisdn\\\": \\\"save(MSISDN)\\\", \\\"meid\\\": \\\"save(MEID)\\\", \\\"user_location_info.uli_flags\\\": \\\"{string:eq}(10)\\\", \\\"user_location_info.ecgi.plmn_identity.mcc\\\": \\\"{string:eq}(001)\\\", \\\"user_location_info.ecgi.plmn_identity.mnc\\\": \\\"{string:eq}(01)\\\", \\\"user_location_info.ecgi.cell_id\\\": \\\"{string:eq}(E000B)\\\", \\\"serving_network.mcc\\\": \\\"{integer:eq}(001)\\\", \\\"serving_network.mnc\\\": \\\"{integer:eq}(01)\\\", \\\"rat_type\\\": \\\"{string:eq}(6)\\\", \\\"indication\\\": \\\"{string:eq}(0x801801)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv4_flag\\\": \\\"{string:eq}(1)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv6_flag\\\": \\\"{string:eq}(0)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.interface_type\\\": \\\"{string:eq}(6)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.teid\\\": \\\"save(GTPV2C_HDR_DL_TEID_SGW_S5S8)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv4_add\\\": \\\"save(GTPV2C_HDR_DL_IP_SGW_S5S8)\\\", \\\"apn\\\": \\\"{string:eq}(internet1.apn.epc.mnc001.mcc001.3gppnetwork.org)\\\", \\\"selection_mode\\\": \\\"{string:eq}(2)\\\", \\\"pdn_type\\\": \\\"{string:eq}(1)\\\", \\\"pdn_address_allocation.pdn_type\\\": \\\"{string:eq}(1)\\\", \\\"pdn_address_allocation.pdn_address_and_prefix\\\": \\\"save(UE_IP)\\\", \\\"maxm_apn_restriction.apn_restriction_value\\\": \\\"{string:eq}(2)\\\", \\\"ambr.apn_ambr_uplink\\\": \\\"{string:eq}(50)\\\", \\\"ambr.apn_ambr_downlink\\\": \\\"{string:eq}(10)\\\", \\\"linked.eps_bearer_id\\\": \\\"{string:eq}(5)\\\", \\\"protocol_config_options\\\": \\\"{string:eq}(0x8080211001000010810600000000830600000000)\\\", \\\"bearer_contexts_to_create.0.eps_bearer_id\\\": \\\"{string:eq}(5)\\\", \\\"bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.ipv4_flag\\\": \\\"{string:eq}(1)\\\", \\\"bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.ipv6_flag\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.interface_type\\\": \\\"{string:eq}(4)\\\", \\\"bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.teid\\\": \\\"save(S5S8_U_SGW_GTPU_DL_TEID)\\\", \\\"bearer_contexts_to_create.0.s5_or_s8_u_sgw.fq_teid.ipv4_add\\\": \\\"save(S5S8_U_SGW_GTPU_DL_IP)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.pvi\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.pl\\\": \\\"{string:eq}(15)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.pci\\\": \\\"{string:eq}(1)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.qci\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.max_bit_rate_ul\\\": \\\"{string:eq}(50)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.max_bit_rate_dl\\\": \\\"{string:eq}(10)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_ul\\\": \\\"{string:eq}(3000000)\\\", \\\"bearer_contexts_to_create.0.bearer_qos.guaranteed_bit_rate_dl\\\": \\\"{string:eq}(8000000)\\\", \\\"recovery\\\": \\\"{string:eq}(0)\\\", \\\"mme.fq_csid.node_id_type\\\": \\\"{string:eq}(0)\\\", \\\"mme.fq_csid.node_id\\\": \\\"{string:eq}(192.168.40.76)\\\", \\\"mme.fq_csid.csid\\\": \\\"{string:eq}(1)\\\", \\\"sgw.fq_csid.node_id_type\\\": \\\"{string:eq}(0)\\\", \\\"sgw.fq_csid.node_id\\\": \\\"{string:eq}(192.168.40.76)\\\", \\\"sgw.fq_csid.csid\\\": \\\"{string:eq}(2)\\\", \\\"ue_timezone.time_zone\\\": \\\"{string:eq}(2)\\\", \\\"ue_timezone.daylight_saving_time\\\": \\\"{string:eq}(4)\\\", \\\"charging_char\\\": \\\"{string:eq}(0x1ff0)\\\", \\\"lapi\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_to_create.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:35,560:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,560:rmq_service.py:236:INFO abot_pgw1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,561:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:35,561:epc_service.py:69:INFO ENDPOINT: PGW1,SGW1\\n2023-07-17 07:34:35,561:epc_service.py:71:INFO MESSAGE NAME: GTPV2C_CREATE_SESSION_REQUEST\\n2023-07-17 07:34:35,561:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,566:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,567:epc_service.py:166:INFO STEP :When I send DIAMETER message DIA_CREDIT_CONTROL_REQUEST on Interface GX from node PGW1 to node PCRF1\\n2023-07-17 07:34:35,568:epc_service.py:51:INFO DIA_CREDIT_CONTROL_REQUEST\\n2023-07-17 07:34:35,585:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,585:rmq_service.py:204:INFO abot_pgw1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"DIA_CREDIT_CONTROL_REQUEST\\\", \\\"endpoint\\\": \\\"PGW1,PCRF1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"GX\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"Hop-by-Hop Identifier\\\": \\\"224\\\", \\\"End-to-End Identifier\\\": \\\"556\\\", \\\"Session-Id\\\": \\\"incr(abot.rebaca.com;1559899815;1;appgx,1)\\\", \\\"DRMP\\\": \\\"1\\\", \\\"Auth-Application-Id\\\": \\\"25\\\", \\\"Origin-Host\\\": \\\"abot-volte-pro.rebaca.com\\\", \\\"Origin-Realm\\\": \\\"rebaca.com\\\", \\\"Destination-Realm\\\": \\\"rebaca.com\\\", \\\"CC-Request-Type\\\": \\\"1\\\", \\\"CC-Request-Number\\\": \\\"34\\\", \\\"Credit-Management-Status\\\": \\\"33\\\", \\\"Destination-Host\\\": \\\"abot-volte-pro.rebaca.com\\\", \\\"Origin-State-Id\\\": \\\"31\\\", \\\"QoS-Information.0.APN-Aggregate-Max-Bitrate-DL\\\": \\\"200000000\\\", \\\"QoS-Information.0.APN-Aggregate-Max-Bitrate-UL\\\": \\\"100000000\\\", \\\"IP-CAN-Type\\\": \\\"5\\\", \\\"RAT-Type\\\": \\\"6\\\", \\\"Subscription-ID.Subscription-ID-Type\\\": \\\"0\\\", \\\"Subscription-ID.Subscription-ID-Data\\\": \\\"$(IMSI)\\\", \\\"Offline\\\": \\\"1\\\", \\\"Online\\\": \\\"0\\\", \\\"Called-Station-ID\\\": \\\"internet\\\", \\\"Default-EPS-Bearer-QoS.QoS-Class-Identifier\\\": \\\"9\\\", \\\"Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Priority-Level\\\": \\\"1\\\", \\\"Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Capability\\\": \\\"0\\\", \\\"Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Vulnerability\\\": \\\"0\\\", \\\"QoS-Information.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:35,637:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,637:rmq_service.py:236:INFO abot_pgw1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,638:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:35,638:epc_service.py:69:INFO ENDPOINT: PGW1,PCRF1\\n2023-07-17 07:34:35,638:epc_service.py:71:INFO MESSAGE NAME: DIA_CREDIT_CONTROL_REQUEST\\n2023-07-17 07:34:35,638:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,640:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,641:epc_service.py:260:INFO STEP: Then I receive and validate DIAMETER  message DIA_CREDIT_CONTROL_REQUEST on interface GX  with the following details on node PCRF1 from node PGW1 \\n2023-07-17 07:34:35,642:epc_service.py:51:INFO DIA_CREDIT_CONTROL_REQUEST\\n2023-07-17 07:34:35,656:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,657:rmq_service.py:204:INFO abot_pcrf1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"DIA_CREDIT_CONTROL_REQUEST\\\", \\\"endpoint\\\": \\\"PCRF1,PGW1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"GX\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"Hop-by-Hop Identifier\\\": \\\"save(HOP_BY_HOP_ID)\\\", \\\"End-to-End Identifier\\\": \\\"save(END_TO_END_ID)\\\", \\\"Session-Id\\\": \\\"save(DIA_GX_SESS_ID)\\\", \\\"DRMP\\\": \\\"{string:eq}(1)\\\", \\\"Auth-Application-Id\\\": \\\"{string:eq}(25)\\\", \\\"Origin-Host\\\": \\\"{string:eq}(abot-volte-pro.rebaca.com)\\\", \\\"Origin-Realm\\\": \\\"{string:eq}(rebaca.com)\\\", \\\"Destination-Realm\\\": \\\"{string:eq}(rebaca.com)\\\", \\\"CC-Request-Type\\\": \\\"{string:eq}(1)\\\", \\\"CC-Request-Number\\\": \\\"{string:eq}(34)\\\", \\\"Credit-Management-Status\\\": \\\"{string:eq}(33)\\\", \\\"Destination-Host\\\": \\\"{string:eq}(abot-volte-pro.rebaca.com)\\\", \\\"Origin-State-Id\\\": \\\"{string:eq}(31)\\\", \\\"QoS-Information.0.APN-Aggregate-Max-Bitrate-DL\\\": \\\"{string:eq}(200000000)\\\", \\\"QoS-Information.0.APN-Aggregate-Max-Bitrate-UL\\\": \\\"{string:eq}(100000000)\\\", \\\"IP-CAN-Type\\\": \\\"{string:eq}(5)\\\", \\\"RAT-Type\\\": \\\"{string:eq}(6)\\\", \\\"Subscription-ID.Subscription-ID-Type\\\": \\\"{string:eq}(0)\\\", \\\"Subscription-ID.Subscription-ID-Data\\\": \\\"save(IMSI)\\\", \\\"Offline\\\": \\\"{integer:eq}(1)\\\", \\\"Online\\\": \\\"{integer:eq}(0)\\\", \\\"Called-Station-ID\\\": \\\"{integer:eq}(internet)\\\", \\\"Default-EPS-Bearer-QoS.QoS-Class-Identifier\\\": \\\"{string:eq}(9)\\\", \\\"Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Priority-Level\\\": \\\"{string:eq}(1)\\\", \\\"Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Capability\\\": \\\"{string:eq}(0)\\\", \\\"Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Vulnerability\\\": \\\"{string:eq}(0)\\\", \\\"QoS-Information.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:35,710:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,710:rmq_service.py:236:INFO abot_pcrf1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,710:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:35,710:epc_service.py:69:INFO ENDPOINT: PCRF1,PGW1\\n2023-07-17 07:34:35,710:epc_service.py:71:INFO MESSAGE NAME: DIA_CREDIT_CONTROL_REQUEST\\n2023-07-17 07:34:35,710:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,718:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,719:epc_service.py:166:INFO STEP :When I send DIAMETER message DIA_CREDIT_CONTROL_ANSWER on Interface GX from node PCRF1 to node PGW1\\n2023-07-17 07:34:35,720:epc_service.py:51:INFO DIA_CREDIT_CONTROL_ANSWER\\n2023-07-17 07:34:35,763:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,763:rmq_service.py:204:INFO abot_pcrf1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"DIA_CREDIT_CONTROL_ANSWER\\\", \\\"endpoint\\\": \\\"PCRF1,PGW1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"GX\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"Hop-by-Hop Identifier\\\": \\\"$(HOP_BY_HOP_ID)\\\", \\\"End-to-End Identifier\\\": \\\"$(END_TO_END_ID)\\\", \\\"Session-Id\\\": \\\"$(DIA_GX_SESS_ID)\\\", \\\"DRMP\\\": \\\"1\\\", \\\"Auth-Application-Id\\\": \\\"25\\\", \\\"Origin-Host\\\": \\\"abot-volte-pro.rebaca.com\\\", \\\"Origin-Realm\\\": \\\"rebaca.com\\\", \\\"Result-Code\\\": \\\"2001\\\", \\\"Experimental-Result.Vendor-Id\\\": \\\"0\\\", \\\"Experimental-Result.Experimental-Result-Code\\\": \\\"255\\\", \\\"CC-Request-Type\\\": \\\"1\\\", \\\"CC-Request-Number\\\": \\\"34\\\", \\\"QoS-Information.0.APN-Aggregate-Max-Bitrate-DL\\\": \\\"200000000\\\", \\\"QoS-Information.0.APN-Aggregate-Max-Bitrate-UL\\\": \\\"100000000\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Charging-Rule-Name\\\": \\\"rule-1\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Service-Identifier\\\": \\\"123\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Rating-Group\\\": \\\"1\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Flow-Information.0.Flow-Description\\\": \\\"permit out 17 from 43.225.55.127/16 {7000-8000} to 172.16.0.10/16 {6000-7000}\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Flow-Information.0.Packet-Filter-Usage\\\": \\\"1\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Flow-Information.0.ToS-Traffic-Class\\\": \\\"2345\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Default-Bearer-Indication\\\": \\\"0\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Flow-Status\\\": \\\"2\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Reporting-Level\\\": \\\"1\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Online\\\": \\\"0\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Offline\\\": \\\"1\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Metering-Method\\\": \\\"1\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Precedence\\\": \\\"1\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Monitoring-Key\\\": \\\"incr(23,1)\\\", \\\"Charging-Rule-Install.0.Charging-Correlation-Indicator\\\": \\\"0\\\", \\\"Online\\\": \\\"0\\\", \\\"Offline\\\": \\\"1\\\", \\\"Default-EPS-Bearer-QoS.QoS-Class-Identifier\\\": \\\"9\\\", \\\"Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Priority-Level\\\": \\\"1\\\", \\\"Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Capability\\\": \\\"0\\\", \\\"Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Vulnerability\\\": \\\"0\\\", \\\"IP-CAN-Type\\\": \\\"5\\\", \\\"QoS-Information.0\\\": \\\"present\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0\\\": \\\"present\\\", \\\"Charging-Rule-Install.0\\\": \\\"present\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Flow-Information.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:35,818:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,818:rmq_service.py:236:INFO abot_pcrf1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,818:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:35,818:epc_service.py:69:INFO ENDPOINT: PCRF1,PGW1\\n2023-07-17 07:34:35,819:epc_service.py:71:INFO MESSAGE NAME: DIA_CREDIT_CONTROL_ANSWER\\n2023-07-17 07:34:35,819:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,820:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,821:epc_service.py:260:INFO STEP: Then I receive and validate DIAMETER  message DIA_CREDIT_CONTROL_ANSWER on interface GX  with the following details on node PGW1 from node PCRF1 \\n2023-07-17 07:34:35,822:epc_service.py:51:INFO DIA_CREDIT_CONTROL_ANSWER\\n2023-07-17 07:34:35,866:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,866:rmq_service.py:204:INFO abot_pgw1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"DIA_CREDIT_CONTROL_ANSWER\\\", \\\"endpoint\\\": \\\"PGW1,PCRF1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"GX\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"Hop-by-Hop Identifier\\\": \\\"save(HOP_BY_HOP_ID)\\\", \\\"End-to-End Identifier\\\": \\\"save(END_TO_END_ID)\\\", \\\"Session-Id\\\": \\\"save(DIA_GX_SESS_ID)\\\", \\\"DRMP\\\": \\\"{string:eq}(1)\\\", \\\"Auth-Application-Id\\\": \\\"{string:eq}(25)\\\", \\\"Origin-Host\\\": \\\"{string:eq}(abot-volte-pro.rebaca.com)\\\", \\\"Origin-Realm\\\": \\\"{string:eq}(rebaca.com)\\\", \\\"Result-Code\\\": \\\"{integer:eq}(2001)\\\", \\\"Experimental-Result.Vendor-Id\\\": \\\"{integer:eq}(0)\\\", \\\"Experimental-Result.Experimental-Result-Code\\\": \\\"{string:eq}(255)\\\", \\\"CC-Request-Type\\\": \\\"{string:eq}(1)\\\", \\\"CC-Request-Number\\\": \\\"{string:eq}(34)\\\", \\\"QoS-Information.0.APN-Aggregate-Max-Bitrate-DL\\\": \\\"{string:eq}(200000000)\\\", \\\"QoS-Information.0.APN-Aggregate-Max-Bitrate-UL\\\": \\\"{string:eq}(100000000)\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Charging-Rule-Name\\\": \\\"{string:eq}(rule-1)\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Service-Identifier\\\": \\\"{string:eq}(123)\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Rating-Group\\\": \\\"{string:eq}(1)\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Flow-Information.0.Flow-Description\\\": \\\"save(SDF_PKT_FILTER)\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Flow-Information.0.Packet-Filter-Usage\\\": \\\"{integer:eq}(1)\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Flow-Information.0.ToS-Traffic-Class\\\": \\\"{string:eq}(2345)\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Default-Bearer-Indication\\\": \\\"{integer:eq}(0)\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Flow-Status\\\": \\\"{integer:eq}(2)\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Reporting-Level\\\": \\\"{integer:eq}(1)\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Online\\\": \\\"{integer:eq}(0)\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Offline\\\": \\\"{integer:eq}(1)\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Metering-Method\\\": \\\"{integer:eq}(1)\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Precedence\\\": \\\"{integer:eq}(1)\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Monitoring-Key\\\": \\\"save(MONITORING_KEY)\\\", \\\"Charging-Rule-Install.0.Charging-Correlation-Indicator\\\": \\\"{integer:eq}(0)\\\", \\\"Online\\\": \\\"{integer:eq}(0)\\\", \\\"Offline\\\": \\\"{integer:eq}(1)\\\", \\\"Default-EPS-Bearer-QoS.QoS-Class-Identifier\\\": \\\"{string:eq}(9)\\\", \\\"Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Priority-Level\\\": \\\"{string:eq}(1)\\\", \\\"Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Capability\\\": \\\"{string:eq}(0)\\\", \\\"Default-EPS-Bearer-QoS.Allocation-Retention-Priority.Pre-emption-Vulnerability\\\": \\\"{string:eq}(0)\\\", \\\"IP-CAN-Type\\\": \\\"{string:eq}(5)\\\", \\\"QoS-Information.0\\\": \\\"present\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0\\\": \\\"present\\\", \\\"Charging-Rule-Install.0\\\": \\\"present\\\", \\\"Charging-Rule-Install.0.Charging-Rule-Definition.0.Flow-Information.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:35,912:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,912:rmq_service.py:236:INFO abot_pgw1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,913:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:35,913:epc_service.py:69:INFO ENDPOINT: PGW1,PCRF1\\n2023-07-17 07:34:35,913:epc_service.py:71:INFO MESSAGE NAME: DIA_CREDIT_CONTROL_ANSWER\\n2023-07-17 07:34:35,913:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,917:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,918:epc_service.py:166:INFO STEP :When I send GTPV2C message GTPV2C_CREATE_SESSION_RESPONSE on Interface S5-S8 from node PGW1 to node SGW1\\n2023-07-17 07:34:35,919:epc_service.py:51:INFO GTPV2C_CREATE_SESSION_RESPONSE\\n2023-07-17 07:34:35,920:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,920:rmq_service.py:204:INFO abot_pgw1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"GTPV2C_CREATE_SESSION_RESPONSE\\\", \\\"endpoint\\\": \\\"PGW1,SGW1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S5-S8\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"header.message_type\\\": \\\"33\\\", \\\"header.teid\\\": \\\"$(GTPV2C_HDR_DL_TEID_SGW_S5S8)\\\", \\\"header.seq_number\\\": \\\"$(GTPV2C_HDR_SEQ_NO_S5S8)\\\", \\\"cause.cause_value\\\": \\\"16\\\", \\\"cause.cause_flags\\\": \\\"0\\\", \\\"change_reporting_actn\\\": \\\"6\\\", \\\"csg_information_reporting_action.csg_info\\\": \\\"1\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_flag\\\": \\\"1\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv6_flag\\\": \\\"0\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.interface_type\\\": \\\"7\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.teid\\\": \\\"incr(40000000,1)\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_add\\\": \\\"192.168.40.76\\\", \\\"pdn_address_allocation.pdn_type\\\": \\\"1\\\", \\\"pdn_address_allocation.pdn_address_and_prefix\\\": \\\"$(UE_IP)\\\", \\\"apn_restriction_value\\\": \\\"2\\\", \\\"ambr.apn_ambr_uplink\\\": \\\"50\\\", \\\"ambr.apn_ambr_downlink\\\": \\\"10\\\", \\\"linked.eps_bearer_id\\\": \\\"5\\\", \\\"protocol_config_options\\\": \\\"0x8080211001000010810600000000830600000000\\\", \\\"bearer_contexts_created.0.eps_bearer_id\\\": \\\"5\\\", \\\"bearer_contexts_created.0.cause.cause_value\\\": \\\"16\\\", \\\"bearer_contexts_created.0.cause.cause_flags\\\": \\\"0\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_flag\\\": \\\"1\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv6_flag\\\": \\\"0\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.interface_type\\\": \\\"5\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.teid\\\": \\\"incr(40000000,1)\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_add\\\": \\\"10.10.0.22\\\", \\\"bearer_contexts_created.0.bearer_qos.pvi\\\": \\\"0\\\", \\\"bearer_contexts_created.0.bearer_qos.pl\\\": \\\"15\\\", \\\"bearer_contexts_created.0.bearer_qos.pci\\\": \\\"1\\\", \\\"bearer_contexts_created.0.bearer_qos.qci\\\": \\\"0\\\", \\\"bearer_contexts_created.0.bearer_qos.max_bit_rate_ul\\\": \\\"50\\\", \\\"bearer_contexts_created.0.bearer_qos.max_bit_rate_dl\\\": \\\"10\\\", \\\"bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_ul\\\": \\\"3000000\\\", \\\"bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_dl\\\": \\\"8000000\\\", \\\"bearer_contexts_created.0.charging_id\\\": \\\"111\\\", \\\"bearer_contexts_created.0.bearer_flags\\\": \\\"1\\\", \\\"recovery\\\": \\\"0\\\", \\\"charging_gateway_name.fqdn\\\": \\\"www.3gppnetwork.org\\\", \\\"pgw.fq_csid.node_id_type\\\": \\\"0\\\", \\\"pgw.fq_csid.node_id\\\": \\\"192.168.40.76\\\", \\\"pgw.fq_csid.csid\\\": \\\"2\\\", \\\"henb_info_reporting\\\": \\\"1\\\", \\\"indication\\\": \\\"0x801801\\\", \\\"charging_id\\\": \\\"111\\\", \\\"bearer_contexts_created.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:35,967:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:35,967:rmq_service.py:236:INFO abot_pgw1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:35,967:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:35,967:epc_service.py:69:INFO ENDPOINT: PGW1,SGW1\\n2023-07-17 07:34:35,967:epc_service.py:71:INFO MESSAGE NAME: GTPV2C_CREATE_SESSION_RESPONSE\\n2023-07-17 07:34:35,967:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:35,970:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:35,971:epc_service.py:260:INFO STEP: Then I receive and validate GTPV2C  message GTPV2C_CREATE_SESSION_RESPONSE on interface S5-S8  with the following details on node SGW1 from node PGW1 \\n2023-07-17 07:34:35,972:epc_service.py:51:INFO GTPV2C_CREATE_SESSION_RESPONSE\\n2023-07-17 07:34:35,973:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:35,973:rmq_service.py:204:INFO abot_sgw1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"GTPV2C_CREATE_SESSION_RESPONSE\\\", \\\"endpoint\\\": \\\"SGW1,PGW1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S5-S8\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"header.message_type\\\": \\\"{string:eq}(33)\\\", \\\"header.teid\\\": \\\"save(GTPV2C_HDR_DL_TEID_SGW_S5S8)\\\", \\\"header.seq_number\\\": \\\"save(GTPV2C_HDR_SEQ_NO_S5S8)\\\", \\\"cause.cause_value\\\": \\\"{string:eq}(16)\\\", \\\"cause.cause_flags\\\": \\\"{string:eq}(0)\\\", \\\"change_reporting_actn\\\": \\\"{string:eq}(6)\\\", \\\"csg_information_reporting_action.csg_info\\\": \\\"{string:eq}(1)\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_flag\\\": \\\"{string:eq}(1)\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv6_flag\\\": \\\"{string:eq}(0)\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.interface_type\\\": \\\"{string:eq}(7)\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.teid\\\": \\\"save(GTPV2C_HDR_UL_TEID_PGW_S5S8)\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_add\\\": \\\"save(GTPV2C_HDR_UL_IP_PGW_S5S8)\\\", \\\"pdn_address_allocation.pdn_type\\\": \\\"{string:eq}(1)\\\", \\\"pdn_address_allocation.pdn_address_and_prefix\\\": \\\"save(UE_IP)\\\", \\\"apn_restriction_value\\\": \\\"{string:eq}(2)\\\", \\\"ambr.apn_ambr_uplink\\\": \\\"{string:eq}(50)\\\", \\\"ambr.apn_ambr_downlink\\\": \\\"{string:eq}(10)\\\", \\\"linked.eps_bearer_id\\\": \\\"{string:eq}(5)\\\", \\\"protocol_config_options\\\": \\\"{string:eq}(0x8080211001000010810600000000830600000000)\\\", \\\"bearer_contexts_created.0.eps_bearer_id\\\": \\\"{string:eq}(5)\\\", \\\"bearer_contexts_created.0.cause.cause_value\\\": \\\"{string:eq}(16)\\\", \\\"bearer_contexts_created.0.cause.cause_flags\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_flag\\\": \\\"{string:eq}(1)\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv6_flag\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.interface_type\\\": \\\"{string:eq}(5)\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.teid\\\": \\\"save(S5S8_U_PGW_GTPU_UL_TEID)\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_add\\\": \\\"save(S5S8_U_PGW_GTPU_UL_IP)\\\", \\\"bearer_contexts_created.0.bearer_qos.pvi\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_created.0.bearer_qos.pl\\\": \\\"{string:eq}(15)\\\", \\\"bearer_contexts_created.0.bearer_qos.pci\\\": \\\"{string:eq}(1)\\\", \\\"bearer_contexts_created.0.bearer_qos.qci\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_created.0.bearer_qos.max_bit_rate_ul\\\": \\\"{string:eq}(50)\\\", \\\"bearer_contexts_created.0.bearer_qos.max_bit_rate_dl\\\": \\\"{string:eq}(10)\\\", \\\"bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_ul\\\": \\\"{string:eq}(3000000)\\\", \\\"bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_dl\\\": \\\"{string:eq}(8000000)\\\", \\\"bearer_contexts_created.0.charging_id\\\": \\\"{string:eq}(111)\\\", \\\"bearer_contexts_created.0.bearer_flags\\\": \\\"{string:eq}(1)\\\", \\\"recovery\\\": \\\"{string:eq}(0)\\\", \\\"charging_gateway_name.fqdn\\\": \\\"{string:eq}(www.3gppnetwork.org)\\\", \\\"pgw.fq_csid.node_id_type\\\": \\\"{string:eq}(0)\\\", \\\"pgw.fq_csid.node_id\\\": \\\"{string:eq}(192.168.40.76)\\\", \\\"pgw.fq_csid.csid\\\": \\\"{string:eq}(2)\\\", \\\"henb_info_reporting\\\": \\\"{string:eq}(1)\\\", \\\"indication\\\": \\\"{string:eq}(0x801801)\\\", \\\"charging_id\\\": \\\"{string:eq}(111)\\\", \\\"bearer_contexts_created.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:36,020:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:36,020:rmq_service.py:236:INFO abot_sgw1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:36,020:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:36,020:epc_service.py:69:INFO ENDPOINT: SGW1,PGW1\\n2023-07-17 07:34:36,020:epc_service.py:71:INFO MESSAGE NAME: GTPV2C_CREATE_SESSION_RESPONSE\\n2023-07-17 07:34:36,020:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:36,022:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:36,023:epc_service.py:166:INFO STEP :When I send GTPV2C message GTPV2C_CREATE_SESSION_RESPONSE on Interface S11 from node SGW1 to node MME1\\n2023-07-17 07:34:36,024:epc_service.py:51:INFO GTPV2C_CREATE_SESSION_RESPONSE\\n2023-07-17 07:34:36,025:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:36,025:rmq_service.py:204:INFO abot_sgw1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"GTPV2C_CREATE_SESSION_RESPONSE\\\", \\\"endpoint\\\": \\\"SGW1,MME1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S11\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"header.message_type\\\": \\\"33\\\", \\\"header.teid\\\": \\\"$(GTPV2C_HDR_DL_TEID_MME_S11)\\\", \\\"header.seq_number\\\": \\\"$(GTPV2C_HDR_SEQ_NO_S11)\\\", \\\"cause.cause_value\\\": \\\"16\\\", \\\"cause.cause_flags\\\": \\\"0\\\", \\\"change_reporting_actn\\\": \\\"6\\\", \\\"csg_information_reporting_action.csg_info\\\": \\\"1\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv4_flag\\\": \\\"1\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv6_flag\\\": \\\"0\\\", \\\"sender_fteid_cntrl_plane.fq_teid.interface_type\\\": \\\"11\\\", \\\"sender_fteid_cntrl_plane.fq_teid.teid\\\": \\\"incr(20000000,1)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv4_add\\\": \\\"192.168.40.76\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_flag\\\": \\\"1\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv6_flag\\\": \\\"0\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.interface_type\\\": \\\"7\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.teid\\\": \\\"$(GTPV2C_HDR_UL_TEID_PGW_S5S8)\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_add\\\": \\\"$(GTPV2C_HDR_UL_IP_PGW_S5S8)\\\", \\\"pdn_address_allocation.pdn_type\\\": \\\"1\\\", \\\"pdn_address_allocation.pdn_address_and_prefix\\\": \\\"$(UE_IP)\\\", \\\"apn_restriction_value\\\": \\\"2\\\", \\\"ambr.apn_ambr_uplink\\\": \\\"50\\\", \\\"ambr.apn_ambr_downlink\\\": \\\"10\\\", \\\"linked.eps_bearer_id\\\": \\\"5\\\", \\\"protocol_config_options\\\": \\\"0x8080211001000010810600000000830600000000\\\", \\\"bearer_contexts_created.0.eps_bearer_id\\\": \\\"5\\\", \\\"bearer_contexts_created.0.cause.cause_value\\\": \\\"16\\\", \\\"bearer_contexts_created.0.cause.cause_flags\\\": \\\"0\\\", \\\"bearer_contexts_created.0.s1u_sgw.fq_teid.ipv4_flag\\\": \\\"1\\\", \\\"bearer_contexts_created.0.s1u_sgw.fq_teid.ipv6_flag\\\": \\\"0\\\", \\\"bearer_contexts_created.0.s1u_sgw.fq_teid.interface_type\\\": \\\"1\\\", \\\"bearer_contexts_created.0.s1u_sgw.fq_teid.teid\\\": \\\"incr(20000000,1)\\\", \\\"bearer_contexts_created.0.s1u_sgw.fq_teid.ipv4_add\\\": \\\"10.10.0.12\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_flag\\\": \\\"1\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv6_flag\\\": \\\"0\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.interface_type\\\": \\\"5\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.teid\\\": \\\"$(S5S8_U_PGW_GTPU_UL_TEID)\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_add\\\": \\\"$(S5S8_U_PGW_GTPU_UL_IP)\\\", \\\"bearer_contexts_created.0.bearer_qos.pvi\\\": \\\"0\\\", \\\"bearer_contexts_created.0.bearer_qos.pl\\\": \\\"15\\\", \\\"bearer_contexts_created.0.bearer_qos.pci\\\": \\\"1\\\", \\\"bearer_contexts_created.0.bearer_qos.qci\\\": \\\"0\\\", \\\"bearer_contexts_created.0.bearer_qos.max_bit_rate_ul\\\": \\\"50\\\", \\\"bearer_contexts_created.0.bearer_qos.max_bit_rate_dl\\\": \\\"10\\\", \\\"bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_ul\\\": \\\"3000000\\\", \\\"bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_dl\\\": \\\"8000000\\\", \\\"bearer_contexts_created.0.charging_id\\\": \\\"111\\\", \\\"bearer_contexts_created.0.bearer_flags\\\": \\\"1\\\", \\\"recovery\\\": \\\"0\\\", \\\"charging_gateway_name.fqdn\\\": \\\"www.3gppnetwork.org\\\", \\\"pgw.fq_csid.node_id_type\\\": \\\"0\\\", \\\"pgw.fq_csid.node_id\\\": \\\"192.168.40.76\\\", \\\"pgw.fq_csid.csid\\\": \\\"2\\\", \\\"sgw.fq_csid.node_id_type\\\": \\\"0\\\", \\\"sgw.fq_csid.node_id\\\": \\\"192.168.40.76\\\", \\\"sgw.fq_csid.csid\\\": \\\"2\\\", \\\"henb_info_reporting\\\": \\\"1\\\", \\\"indication\\\": \\\"0x801801\\\", \\\"charging_id\\\": \\\"111\\\", \\\"bearer_contexts_created.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:36,072:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:36,072:rmq_service.py:236:INFO abot_sgw1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:36,072:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:36,072:epc_service.py:69:INFO ENDPOINT: SGW1,MME1\\n2023-07-17 07:34:36,072:epc_service.py:71:INFO MESSAGE NAME: GTPV2C_CREATE_SESSION_RESPONSE\\n2023-07-17 07:34:36,072:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:36,074:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:36,075:epc_service.py:260:INFO STEP: Then I receive and validate GTPV2C  message GTPV2C_CREATE_SESSION_RESPONSE on interface S11  with the following details on node MME1 from node SGW1 \\n2023-07-17 07:34:36,076:epc_service.py:51:INFO GTPV2C_CREATE_SESSION_RESPONSE\\n2023-07-17 07:34:36,077:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:36,077:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"GTPV2C_CREATE_SESSION_RESPONSE\\\", \\\"endpoint\\\": \\\"MME1,SGW1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S11\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"header.message_type\\\": \\\"{string:eq}(33)\\\", \\\"header.teid\\\": \\\"save(GTPV2C_HDR_DL_TEID_MME_S11)\\\", \\\"header.seq_number\\\": \\\"save(GTPV2C_HDR_SEQ_NO_S11)\\\", \\\"cause.cause_value\\\": \\\"{string:eq}(16)\\\", \\\"cause.cause_flags\\\": \\\"{string:eq}(0)\\\", \\\"change_reporting_actn\\\": \\\"{string:eq}(6)\\\", \\\"csg_information_reporting_action.csg_info\\\": \\\"{string:eq}(1)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv4_flag\\\": \\\"{string:eq}(1)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv6_flag\\\": \\\"{string:eq}(0)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.interface_type\\\": \\\"{string:eq}(11)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.teid\\\": \\\"save(GTPV2C_HDR_UL_TEID_SGW_S11)\\\", \\\"sender_fteid_cntrl_plane.fq_teid.ipv4_add\\\": \\\"save(GTPV2C_HDR_UL_IP_SGW_S11)\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_flag\\\": \\\"{string:eq}(1)\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv6_flag\\\": \\\"{string:eq}(0)\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.interface_type\\\": \\\"{string:eq}(7)\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.teid\\\": \\\"save(GTPV2C_HDR_UL_TEID_PGW_S5S8)\\\", \\\"pgw_s5_s8_s2b_gtp_cntrl_plane.fq_teid.ipv4_add\\\": \\\"save(GTPV2C_HDR_UL_IP_PGW_S5S8)\\\", \\\"pdn_address_allocation.pdn_type\\\": \\\"{string:eq}(1)\\\", \\\"pdn_address_allocation.pdn_address_and_prefix\\\": \\\"save(UE_IP)\\\", \\\"apn_restriction_value\\\": \\\"{string:eq}(2)\\\", \\\"ambr.apn_ambr_uplink\\\": \\\"{string:eq}(50)\\\", \\\"ambr.apn_ambr_downlink\\\": \\\"{string:eq}(10)\\\", \\\"linked.eps_bearer_id\\\": \\\"{string:eq}(5)\\\", \\\"protocol_config_options\\\": \\\"{string:eq}(0x8080211001000010810600000000830600000000)\\\", \\\"bearer_contexts_created.0.eps_bearer_id\\\": \\\"{string:eq}(5)\\\", \\\"bearer_contexts_created.0.cause.cause_value\\\": \\\"{string:eq}(16)\\\", \\\"bearer_contexts_created.0.cause.cause_flags\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_created.0.s1u_sgw.fq_teid.ipv4_flag\\\": \\\"{string:eq}(1)\\\", \\\"bearer_contexts_created.0.s1u_sgw.fq_teid.ipv6_flag\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_created.0.s1u_sgw.fq_teid.interface_type\\\": \\\"{string:eq}(1)\\\", \\\"bearer_contexts_created.0.s1u_sgw.fq_teid.teid\\\": \\\"save(S1_U_SGW_GTPU_UL_TEID)\\\", \\\"bearer_contexts_created.0.s1u_sgw.fq_teid.ipv4_add\\\": \\\"save(S1_U_SGW_GTPU_UL_IP)\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_flag\\\": \\\"{string:eq}(1)\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv6_flag\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.interface_type\\\": \\\"{string:eq}(5)\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.teid\\\": \\\"save(S5S8_U_PGW_GTPU_UL_TEID)\\\", \\\"bearer_contexts_created.0.s5_or_s8_u_pgw.fq_teid.ipv4_add\\\": \\\"save(S5S8_U_PGW_GTPU_UL_IP)\\\", \\\"bearer_contexts_created.0.bearer_qos.pvi\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_created.0.bearer_qos.pl\\\": \\\"{string:eq}(15)\\\", \\\"bearer_contexts_created.0.bearer_qos.pci\\\": \\\"{string:eq}(1)\\\", \\\"bearer_contexts_created.0.bearer_qos.qci\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_created.0.bearer_qos.max_bit_rate_ul\\\": \\\"{string:eq}(50)\\\", \\\"bearer_contexts_created.0.bearer_qos.max_bit_rate_dl\\\": \\\"{string:eq}(10)\\\", \\\"bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_ul\\\": \\\"{string:eq}(3000000)\\\", \\\"bearer_contexts_created.0.bearer_qos.guaranteed_bit_rate_dl\\\": \\\"{string:eq}(8000000)\\\", \\\"bearer_contexts_created.0.charging_id\\\": \\\"{string:eq}(111)\\\", \\\"bearer_contexts_created.0.bearer_flags\\\": \\\"{string:eq}(1)\\\", \\\"recovery\\\": \\\"{string:eq}(0)\\\", \\\"charging_gateway_name.fqdn\\\": \\\"{string:eq}(www.3gppnetwork.org)\\\", \\\"pgw.fq_csid.node_id_type\\\": \\\"{string:eq}(0)\\\", \\\"pgw.fq_csid.node_id\\\": \\\"{string:eq}(192.168.40.76)\\\", \\\"pgw.fq_csid.csid\\\": \\\"{string:eq}(2)\\\", \\\"sgw.fq_csid.node_id_type\\\": \\\"{string:eq}(0)\\\", \\\"sgw.fq_csid.node_id\\\": \\\"{string:eq}(192.168.40.76)\\\", \\\"sgw.fq_csid.csid\\\": \\\"{string:eq}(2)\\\", \\\"henb_info_reporting\\\": \\\"{string:eq}(1)\\\", \\\"indication\\\": \\\"{string:eq}(0x801801)\\\", \\\"charging_id\\\": \\\"{string:eq}(111)\\\", \\\"bearer_contexts_created.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:36,123:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:36,123:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:36,124:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:36,124:epc_service.py:69:INFO ENDPOINT: MME1,SGW1\\n2023-07-17 07:34:36,124:epc_service.py:71:INFO MESSAGE NAME: GTPV2C_CREATE_SESSION_RESPONSE\\n2023-07-17 07:34:36,124:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:36,126:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:36,126:epc_service.py:166:INFO STEP :When I send S1AP message S1_INIT_CTXT_SET_REQ_NAS_ATTACH_ACC_ACTIVATE_DEF_B_REQ on Interface S1-MME from node MME1 to node eNodeB1\\n2023-07-17 07:34:36,127:epc_service.py:51:INFO S1_INIT_CTXT_SET_REQ_NAS_ATTACH_ACC_ACTIVATE_DEF_B_REQ\\n2023-07-17 07:34:36,128:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:36,128:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_INIT_CTXT_SET_REQ_NAS_ATTACH_ACC_ACTIVATE_DEF_B_REQ\\\", \\\"endpoint\\\": \\\"MME1,eNodeB1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"$(ENB_UE_S1AP_ID)\\\", \\\"mme_ue_s1ap_id\\\": \\\"$(MME_UE_S1AP_ID)\\\", \\\"ue_ambr.dl\\\": \\\"100000000\\\", \\\"ue_ambr.ul\\\": \\\"200000000\\\", \\\"erab_to_be_setup_list.0.erab_id\\\": \\\"5\\\", \\\"erab_to_be_setup_list.0.erab_level_qos.qci\\\": \\\"0\\\", \\\"erab_to_be_setup_list.0.erab_level_qos.arp.priority_level\\\": \\\"1\\\", \\\"erab_to_be_setup_list.0.erab_level_qos.arp.preemption_capability\\\": \\\"0\\\", \\\"erab_to_be_setup_list.0.erab_level_qos.arp.preemption_vulnerability\\\": \\\"0\\\", \\\"erab_to_be_setup_list.0.transport_layer_address\\\": \\\"$(S1_U_SGW_GTPU_UL_IP)\\\", \\\"erab_to_be_setup_list.0.gtp_teid\\\": \\\"$(S1_U_SGW_GTPU_UL_TEID)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.protocol_discriminator.emm\\\": \\\"0x07\\\", \\\"erab_to_be_setup_list.0.nas_pdu.security_header_protocol_discriminator\\\": \\\"7\\\", \\\"erab_to_be_setup_list.0.nas_pdu.message_type.emm\\\": \\\"0x42\\\", \\\"erab_to_be_setup_list.0.nas_pdu.security_header_type.plain\\\": \\\"0\\\", \\\"erab_to_be_setup_list.0.nas_pdu.security_header_type.protected\\\": \\\"2\\\", \\\"erab_to_be_setup_list.0.nas_pdu.message_authentication_code\\\": \\\"0x00000000\\\", \\\"erab_to_be_setup_list.0.nas_pdu.sequence_number\\\": \\\"flow_incr(0,1)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.eps_attach_result\\\": \\\"1\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.gprs_timer.unit\\\": \\\"2\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.gprs_timer.timer_value\\\": \\\"10\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.type_of_list\\\": \\\"1\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.number_of_elements\\\": \\\"0\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.mcc\\\": \\\"001\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.mnc\\\": \\\"01\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.tac\\\": \\\"1\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.m_tmsi\\\": \\\"0x5b855ff4\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mcc\\\": \\\"001\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mnc\\\": \\\"01\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mme_group_id\\\": \\\"4\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mme_code\\\": \\\"0\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.eps_bearer_identity.esm\\\": \\\"5\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.pti\\\": \\\"60\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.message_type.esm\\\": \\\"0xc1\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.eps_quality_of_service.qci\\\": \\\"0\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.apn\\\": \\\"internet1.apn.epc.mnc001.mcc001.3gppnetwork.org\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.pdn_type\\\": \\\"1\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.pdn_address\\\": \\\"$(UE_IP)\\\", \\\"ue_security_capabilities.eea\\\": \\\"0x0000\\\", \\\"ue_security_capabilities.eia\\\": \\\"0x0000\\\", \\\"security_key\\\": \\\"5d350bc4c97bb4e3d5477c39be13bbbdddd97f4d645c4eb2de2be4d0e534f0b7\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.protocol_discriminator.esm\\\": \\\"0x02\\\", \\\"erab_to_be_setup_list.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:36,180:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:36,180:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:36,181:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:36,181:epc_service.py:69:INFO ENDPOINT: MME1,ENODEB1\\n2023-07-17 07:34:36,181:epc_service.py:71:INFO MESSAGE NAME: S1_INIT_CTXT_SET_REQ_NAS_ATTACH_ACC_ACTIVATE_DEF_B_REQ\\n2023-07-17 07:34:36,181:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:36,189:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:36,190:epc_service.py:260:INFO STEP: Then I receive and validate S1AP  message S1_INIT_CTXT_SET_REQ_NAS_ATTACH_ACC_ACTIVATE_DEF_B_REQ on interface S1-MME  with the following details on node eNodeB1 from node MME1 \\n2023-07-17 07:34:36,191:epc_service.py:51:INFO S1_INIT_CTXT_SET_REQ_NAS_ATTACH_ACC_ACTIVATE_DEF_B_REQ\\n2023-07-17 07:34:36,192:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:36,192:rmq_service.py:204:INFO abot_enodeb1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_INIT_CTXT_SET_REQ_NAS_ATTACH_ACC_ACTIVATE_DEF_B_REQ\\\", \\\"endpoint\\\": \\\"eNodeB1,MME1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"{string:eq}($(ENB_UE_S1AP_ID))\\\", \\\"mme_ue_s1ap_id\\\": \\\"{string:eq}($(MME_UE_S1AP_ID))\\\", \\\"ue_ambr.dl\\\": \\\"{string:eq}(100000000)\\\", \\\"ue_ambr.ul\\\": \\\"{string:eq}(200000000)\\\", \\\"erab_to_be_setup_list.0.erab_id\\\": \\\"save(ERAB_ID)\\\", \\\"erab_to_be_setup_list.0.erab_level_qos.qci\\\": \\\"{string:eq}(0)\\\", \\\"erab_to_be_setup_list.0.erab_level_qos.arp.priority_level\\\": \\\"{string:eq}(1)\\\", \\\"erab_to_be_setup_list.0.erab_level_qos.arp.preemption_capability\\\": \\\"{string:eq}(0)\\\", \\\"erab_to_be_setup_list.0.erab_level_qos.arp.preemption_vulnerability\\\": \\\"{string:eq}(0)\\\", \\\"erab_to_be_setup_list.0.transport_layer_address\\\": \\\"save(S1_U_SGW_GTPU_UL_IP)\\\", \\\"erab_to_be_setup_list.0.gtp_teid\\\": \\\"save(S1_U_SGW_GTPU_UL_TEID)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.protocol_discriminator.emm\\\": \\\"{string:eq}(0x07)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.security_header_protocol_discriminator\\\": \\\"{string:eq}(7)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.message_type.emm\\\": \\\"{string:eq}(0x42)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.security_header_type.plain\\\": \\\"{string:eq}(0)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.security_header_type.protected\\\": \\\"{string:eq}(2)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.message_authentication_code\\\": \\\"save(MAC)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.sequence_number\\\": \\\"save(NAS_MME_SEQ_NO)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.eps_attach_result\\\": \\\"{string:eq}(1)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.gprs_timer.unit\\\": \\\"{string:eq}(2)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.gprs_timer.timer_value\\\": \\\"{string:eq}(10)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.type_of_list\\\": \\\"{string:eq}(1)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.number_of_elements\\\": \\\"{string:eq}(0)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.mcc\\\": \\\"{string:eq}(001)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.mnc\\\": \\\"{string:eq}(01)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.tai_list.tac\\\": \\\"{string:eq}(1)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.m_tmsi\\\": \\\"save(GUTI_M_TMSI)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mcc\\\": \\\"001\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mnc\\\": \\\"{string:eq}(01)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mme_group_id\\\": \\\"{string:eq}(4)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.attach_accept.GUTI.guti.mme_code\\\": \\\"{string:eq}(0)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.eps_bearer_identity.esm\\\": \\\"{string:eq}(5)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.pti\\\": \\\"{string:eq}(60)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.message_type.esm\\\": \\\"{string:eq}(0xc1)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.eps_quality_of_service.qci\\\": \\\"{string:eq}(0)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.apn\\\": \\\"{string:eq}(internet1.apn.epc.mnc001.mcc001.3gppnetwork.org)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.pdn_type\\\": \\\"{string:eq}(1)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.activate_default_eps_bearer_context_request.pdn_address\\\": \\\"save(UE_IP)\\\", \\\"ue_security_capabilities.eea\\\": \\\"{string:eq}(0x0000)\\\", \\\"ue_security_capabilities.eia\\\": \\\"{string:eq}(0x0000)\\\", \\\"security_key\\\": \\\"{string:eq}(5d350bc4c97bb4e3d5477c39be13bbbdddd97f4d645c4eb2de2be4d0e534f0b7)\\\", \\\"erab_to_be_setup_list.0.nas_pdu.esm_message.protocol_discriminator.esm\\\": \\\"{string:eq}(0x02)\\\", \\\"erab_to_be_setup_list.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:36,243:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:36,243:rmq_service.py:236:INFO abot_enodeb1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:36,243:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:36,243:epc_service.py:69:INFO ENDPOINT: ENODEB1,MME1\\n2023-07-17 07:34:36,243:epc_service.py:71:INFO MESSAGE NAME: S1_INIT_CTXT_SET_REQ_NAS_ATTACH_ACC_ACTIVATE_DEF_B_REQ\\n2023-07-17 07:34:36,243:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:36,251:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:36,252:epc_service.py:166:INFO STEP :When I send S1AP message S1_INIT_CTXT_SET_RES on Interface S1-MME from node eNodeB1 to node MME1\\n2023-07-17 07:34:36,252:epc_service.py:51:INFO S1_INIT_CTXT_SET_RES\\n2023-07-17 07:34:36,252:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:36,252:rmq_service.py:204:INFO abot_enodeb1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_INIT_CTXT_SET_RES\\\", \\\"endpoint\\\": \\\"eNodeB1,MME1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"$(ENB_UE_S1AP_ID)\\\", \\\"mme_ue_s1ap_id\\\": \\\"$(MME_UE_S1AP_ID)\\\", \\\"erab_setup_list.0.erab_id\\\": \\\"$(ERAB_ID)\\\", \\\"erab_setup_list.0.transport_layer_address\\\": \\\"10.10.0.11\\\", \\\"erab_setup_list.0.gtp_teid\\\": \\\"incr(10000000,1)\\\", \\\"erab_setup_list.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:36,298:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:36,298:rmq_service.py:236:INFO abot_enodeb1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:36,298:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:36,298:epc_service.py:69:INFO ENDPOINT: ENODEB1,MME1\\n2023-07-17 07:34:36,298:epc_service.py:71:INFO MESSAGE NAME: S1_INIT_CTXT_SET_RES\\n2023-07-17 07:34:36,298:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:36,301:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:36,301:epc_service.py:260:INFO STEP: Then I receive and validate S1AP  message S1_INIT_CTXT_SET_RES on interface S1-MME  with the following details on node MME1 from node eNodeB1 \\n2023-07-17 07:34:36,301:epc_service.py:51:INFO S1_INIT_CTXT_SET_RES\\n2023-07-17 07:34:36,302:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:36,302:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_INIT_CTXT_SET_RES\\\", \\\"endpoint\\\": \\\"MME1,eNodeB1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"{string:eq}($(ENB_UE_S1AP_ID))\\\", \\\"mme_ue_s1ap_id\\\": \\\"{string:eq}($(MME_UE_S1AP_ID))\\\", \\\"erab_setup_list.0.erab_id\\\": \\\"save(ERAB_ID)\\\", \\\"erab_setup_list.0.transport_layer_address\\\": \\\"save(S1_U_GNB_GTPU_DL_IP)\\\", \\\"erab_setup_list.0.gtp_teid\\\": \\\"save(S1_U_GNB_GTPU_DL_TEID)\\\", \\\"erab_setup_list.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:36,346:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:36,346:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:36,346:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:36,346:epc_service.py:69:INFO ENDPOINT: MME1,ENODEB1\\n2023-07-17 07:34:36,346:epc_service.py:71:INFO MESSAGE NAME: S1_INIT_CTXT_SET_RES\\n2023-07-17 07:34:36,346:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:36,348:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:36,349:epc_service.py:166:INFO STEP :When I send S1AP message S1_UPLINK_NAS_ATTACH_COMPLETE_ACTIVATE_DEF_B_ACC on Interface S1-MME from node eNodeB1 to node MME1\\n2023-07-17 07:34:36,349:epc_service.py:51:INFO S1_UPLINK_NAS_ATTACH_COMPLETE_ACTIVATE_DEF_B_ACC\\n2023-07-17 07:34:36,350:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:36,350:rmq_service.py:204:INFO abot_enodeb1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_UPLINK_NAS_ATTACH_COMPLETE_ACTIVATE_DEF_B_ACC\\\", \\\"endpoint\\\": \\\"eNodeB1,MME1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"$(ENB_UE_S1AP_ID)\\\", \\\"mme_ue_s1ap_id\\\": \\\"$(MME_UE_S1AP_ID)\\\", \\\"nas_pdu.protocol_discriminator.emm\\\": \\\"0x07\\\", \\\"nas_pdu.security_header_protocol_discriminator\\\": \\\"7\\\", \\\"nas_pdu.message_type.emm\\\": \\\"0x43\\\", \\\"nas_pdu.security_header_type.plain\\\": \\\"0\\\", \\\"nas_pdu.security_header_type.protected\\\": \\\"2\\\", \\\"nas_pdu.message_authentication_code\\\": \\\"0x00000000\\\", \\\"nas_pdu.sequence_number\\\": \\\"flow_incr(0,1)\\\", \\\"nas_pdu.esm_message.eps_bearer_identity.esm\\\": \\\"5\\\", \\\"nas_pdu.esm_message.pti\\\": \\\"60\\\", \\\"nas_pdu.esm_message.message_type.esm\\\": \\\"0xc2\\\", \\\"nas_pdu.esm_message.activate_default_eps_bearer_context_accept.pco.num_protocol_id_or_container_id\\\": \\\"1\\\", \\\"eutran_cgi.plmn_identity.mcc\\\": \\\"001\\\", \\\"eutran_cgi.plmn_identity.mnc\\\": \\\"01\\\", \\\"eutran_cgi.cell_id\\\": \\\"3584\\\", \\\"tai.plmn_identity.mcc\\\": \\\"001\\\", \\\"tai.plmn_identity.mnc\\\": \\\"01\\\", \\\"tai.tac\\\": \\\"1\\\", \\\"nas_pdu.esm_message.protocol_discriminator.esm\\\": \\\"0x02\\\", \\\"nas_pdu.esm_message.activate_default_eps_bearer_context_accept.pco.configuration_protocol\\\": \\\"0\\\"}]}\\n2023-07-17 07:34:36,394:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:36,394:rmq_service.py:236:INFO abot_enodeb1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:36,395:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:36,395:epc_service.py:69:INFO ENDPOINT: ENODEB1,MME1\\n2023-07-17 07:34:36,395:epc_service.py:71:INFO MESSAGE NAME: S1_UPLINK_NAS_ATTACH_COMPLETE_ACTIVATE_DEF_B_ACC\\n2023-07-17 07:34:36,395:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:36,397:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:36,398:epc_service.py:260:INFO STEP: Then I receive and validate S1AP  message S1_UPLINK_NAS_ATTACH_COMPLETE_ACTIVATE_DEF_B_ACC on interface S1-MME  with the following details on node MME1 from node eNodeB1 \\n2023-07-17 07:34:36,398:epc_service.py:51:INFO S1_UPLINK_NAS_ATTACH_COMPLETE_ACTIVATE_DEF_B_ACC\\n2023-07-17 07:34:36,400:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:36,400:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"S1_UPLINK_NAS_ATTACH_COMPLETE_ACTIVATE_DEF_B_ACC\\\", \\\"endpoint\\\": \\\"MME1,eNodeB1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S1-MME\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"enb_ue_s1ap_id\\\": \\\"{string:eq}($(ENB_UE_S1AP_ID))\\\", \\\"mme_ue_s1ap_id\\\": \\\"{string:eq}($(MME_UE_S1AP_ID))\\\", \\\"nas_pdu.protocol_discriminator.emm\\\": \\\"{string:eq}(0x07)\\\", \\\"nas_pdu.security_header_protocol_discriminator\\\": \\\"{string:eq}(7)\\\", \\\"nas_pdu.message_type.emm\\\": \\\"{string:eq}(0x43)\\\", \\\"nas_pdu.security_header_type.plain\\\": \\\"{string:eq}(0)\\\", \\\"nas_pdu.security_header_type.protected\\\": \\\"{string:eq}(2)\\\", \\\"nas_pdu.message_authentication_code\\\": \\\"save(MAC)\\\", \\\"nas_pdu.sequence_number\\\": \\\"save(NAS_UE_SEQ_NO)\\\", \\\"nas_pdu.esm_message.eps_bearer_identity.esm\\\": \\\"{string:eq}(5)\\\", \\\"nas_pdu.esm_message.pti\\\": \\\"{string:eq}(60)\\\", \\\"nas_pdu.esm_message.message_type.esm\\\": \\\"{string:eq}(0xc2)\\\", \\\"nas_pdu.esm_message.activate_default_eps_bearer_context_accept.pco.num_protocol_id_or_container_id\\\": \\\"{string:eq}(1)\\\", \\\"eutran_cgi.plmn_identity.mcc\\\": \\\"{integer:eq}(001)\\\", \\\"eutran_cgi.plmn_identity.mnc\\\": \\\"{integer:eq}(01)\\\", \\\"eutran_cgi.cell_id\\\": \\\"{string:eq}(3584)\\\", \\\"tai.plmn_identity.mcc\\\": \\\"{integer:eq}(001)\\\", \\\"tai.plmn_identity.mnc\\\": \\\"{integer:eq}(01)\\\", \\\"tai.tac\\\": \\\"{integer:eq}(1)\\\", \\\"nas_pdu.esm_message.protocol_discriminator.esm\\\": \\\"{string:eq}(0x02)\\\", \\\"nas_pdu.esm_message.activate_default_eps_bearer_context_accept.pco.configuration_protocol\\\": \\\"{string:eq}(0)\\\"}]}\\n2023-07-17 07:34:36,504:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:36,504:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:36,504:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:36,504:epc_service.py:69:INFO ENDPOINT: MME1,ENODEB1\\n2023-07-17 07:34:36,504:epc_service.py:71:INFO MESSAGE NAME: S1_UPLINK_NAS_ATTACH_COMPLETE_ACTIVATE_DEF_B_ACC\\n2023-07-17 07:34:36,504:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:36,506:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:36,507:epc_service.py:166:INFO STEP :When I send GTPV2C message GTPV2C_MODIFY_BEARER_REQUEST on Interface S11 from node MME1 to node SGW1\\n2023-07-17 07:34:36,507:epc_service.py:51:INFO GTPV2C_MODIFY_BEARER_REQUEST\\n2023-07-17 07:34:36,507:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:36,507:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"GTPV2C_MODIFY_BEARER_REQUEST\\\", \\\"endpoint\\\": \\\"MME1,SGW1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S11\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"header.message_type\\\": \\\"34\\\", \\\"header.teid\\\": \\\"$(GTPV2C_HDR_UL_TEID_SGW_S11)\\\", \\\"header.seq_number\\\": \\\"incr(2,8)\\\", \\\"meid\\\": \\\"incr(123456789012345,1)\\\", \\\"serving_network.mcc\\\": \\\"001\\\", \\\"serving_network.mnc\\\": \\\"01\\\", \\\"rat_type\\\": \\\"6\\\", \\\"indication\\\": \\\"0x801801\\\", \\\"bearer_contexts_to_modify.0.eps_bearer_id\\\": \\\"5\\\", \\\"bearer_contexts_to_modify.0.s1_enodeb.fq_teid.ipv4_flag\\\": \\\"1\\\", \\\"bearer_contexts_to_modify.0.s1_enodeb.fq_teid.ipv6_flag\\\": \\\"0\\\", \\\"bearer_contexts_to_modify.0.s1_enodeb.fq_teid.interface_type\\\": \\\"0\\\", \\\"bearer_contexts_to_modify.0.s1_enodeb.fq_teid.teid\\\": \\\"$(S1_U_GNB_GTPU_DL_TEID)\\\", \\\"bearer_contexts_to_modify.0.s1_enodeb.fq_teid.ipv4_add\\\": \\\"$(S1_U_GNB_GTPU_DL_IP)\\\", \\\"mme.fq_csid.node_id_type\\\": \\\"0\\\", \\\"mme.fq_csid.node_id\\\": \\\"192.168.40.76\\\", \\\"mme.fq_csid.csid\\\": \\\"1\\\", \\\"bearer_contexts_to_modify.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:36,555:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:36,555:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:36,555:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:36,555:epc_service.py:69:INFO ENDPOINT: MME1,SGW1\\n2023-07-17 07:34:36,555:epc_service.py:71:INFO MESSAGE NAME: GTPV2C_MODIFY_BEARER_REQUEST\\n2023-07-17 07:34:36,555:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:36,557:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:36,557:epc_service.py:260:INFO STEP: Then I receive and validate GTPV2C  message GTPV2C_MODIFY_BEARER_REQUEST on interface S11  with the following details on node SGW1 from node MME1 \\n2023-07-17 07:34:36,558:epc_service.py:51:INFO GTPV2C_MODIFY_BEARER_REQUEST\\n2023-07-17 07:34:36,558:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:36,558:rmq_service.py:204:INFO abot_sgw1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"GTPV2C_MODIFY_BEARER_REQUEST\\\", \\\"endpoint\\\": \\\"SGW1,MME1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S11\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"header.message_type\\\": \\\"{string:eq}(34)\\\", \\\"header.teid\\\": \\\"save(GTPV2C_HDR_UL_TEID_SGW_S11)\\\", \\\"header.seq_number\\\": \\\"save(GTPV2C_HDR_SEQ_NO_S11)\\\", \\\"meid\\\": \\\"save(MEID)\\\", \\\"serving_network.mcc\\\": \\\"{integer:eq}(001)\\\", \\\"serving_network.mnc\\\": \\\"{integer:eq}(01)\\\", \\\"rat_type\\\": \\\"{string:eq}(6)\\\", \\\"indication\\\": \\\"{string:eq}(0x801801)\\\", \\\"bearer_contexts_to_modify.0.eps_bearer_id\\\": \\\"{string:eq}(5)\\\", \\\"bearer_contexts_to_modify.0.s1_enodeb.fq_teid.ipv4_flag\\\": \\\"{string:eq}(1)\\\", \\\"bearer_contexts_to_modify.0.s1_enodeb.fq_teid.ipv6_flag\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_to_modify.0.s1_enodeb.fq_teid.interface_type\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_to_modify.0.s1_enodeb.fq_teid.teid\\\": \\\"save(S1_U_GNB_GTPU_DL_TEID)\\\", \\\"bearer_contexts_to_modify.0.s1_enodeb.fq_teid.ipv4_add\\\": \\\"save(S1_U_GNB_GTPU_DL_IP)\\\", \\\"mme.fq_csid.node_id_type\\\": \\\"{string:eq}(0)\\\", \\\"mme.fq_csid.node_id\\\": \\\"{string:eq}(192.168.40.76)\\\", \\\"mme.fq_csid.csid\\\": \\\"{string:eq}(1)\\\", \\\"bearer_contexts_to_modify.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:36,602:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:36,602:rmq_service.py:236:INFO abot_sgw1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:36,602:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:36,602:epc_service.py:69:INFO ENDPOINT: SGW1,MME1\\n2023-07-17 07:34:36,603:epc_service.py:71:INFO MESSAGE NAME: GTPV2C_MODIFY_BEARER_REQUEST\\n2023-07-17 07:34:36,603:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:36,605:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:36,605:epc_service.py:166:INFO STEP :When I send GTPV2C message GTPV2C_MODIFY_BEARER_RESPONSE on Interface S11 from node SGW1 to node MME1\\n2023-07-17 07:34:36,605:epc_service.py:51:INFO GTPV2C_MODIFY_BEARER_RESPONSE\\n2023-07-17 07:34:36,606:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:36,606:rmq_service.py:204:INFO abot_sgw1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"GTPV2C_MODIFY_BEARER_RESPONSE\\\", \\\"endpoint\\\": \\\"SGW1,MME1\\\", \\\"direction\\\": \\\"request\\\", \\\"interface\\\": \\\"S11\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"header.message_type\\\": \\\"35\\\", \\\"header.teid\\\": \\\"$(GTPV2C_HDR_DL_TEID_MME_S11)\\\", \\\"header.seq_number\\\": \\\"$(GTPV2C_HDR_SEQ_NO_S11)\\\", \\\"cause.cause_value\\\": \\\"16\\\", \\\"cause.cause_flags\\\": \\\"0\\\", \\\"bearer_contexts_modified.0.eps_bearer_id\\\": \\\"5\\\", \\\"bearer_contexts_modified.0.cause.cause_value\\\": \\\"16\\\", \\\"bearer_contexts_modified.0.cause.cause_flags\\\": \\\"0\\\", \\\"bearer_contexts_modified.0.s1_sgw.fq_teid.ipv4_flag\\\": \\\"1\\\", \\\"bearer_contexts_modified.0.s1_sgw.fq_teid.ipv6_flag\\\": \\\"0\\\", \\\"bearer_contexts_modified.0.s1_sgw.fq_teid.interface_type\\\": \\\"1\\\", \\\"bearer_contexts_modified.0.s1_sgw.fq_teid.teid\\\": \\\"incr(20000000,1)\\\", \\\"bearer_contexts_modified.0.s1_sgw.fq_teid.ipv4_add\\\": \\\"10.10.0.12\\\", \\\"bearer_contexts_modified.0.charging_id\\\": \\\"111\\\", \\\"bearer_contexts_modified.0.bearer_flags\\\": \\\"1\\\", \\\"sgw.fq_csid.node_id_type\\\": \\\"0\\\", \\\"sgw.fq_csid.node_id\\\": \\\"192.168.40.76\\\", \\\"sgw.fq_csid.csid\\\": \\\"2\\\", \\\"indication\\\": \\\"0x801801\\\", \\\"bearer_contexts_modified.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:36,651:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:36,651:rmq_service.py:236:INFO abot_sgw1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"stack_encode_decode_status\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:36,652:epc_service.py:67:INFO DIRECTION: REQUEST\\n2023-07-17 07:34:36,652:epc_service.py:69:INFO ENDPOINT: SGW1,MME1\\n2023-07-17 07:34:36,652:epc_service.py:71:INFO MESSAGE NAME: GTPV2C_MODIFY_BEARER_RESPONSE\\n2023-07-17 07:34:36,652:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:36,654:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:36,654:epc_service.py:260:INFO STEP: Then I receive and validate GTPV2C  message GTPV2C_MODIFY_BEARER_RESPONSE on interface S11  with the following details on node MME1 from node SGW1 \\n2023-07-17 07:34:36,655:epc_service.py:51:INFO GTPV2C_MODIFY_BEARER_RESPONSE\\n2023-07-17 07:34:36,655:rmq_service.py:203:INFO >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n2023-07-17 07:34:36,655:rmq_service.py:204:INFO abot_mme1_request_admin Queue Request MSG: {\\\"messageName\\\": \\\"GTPV2C_MODIFY_BEARER_RESPONSE\\\", \\\"endpoint\\\": \\\"MME1,SGW1\\\", \\\"direction\\\": \\\"response\\\", \\\"interface\\\": \\\"S11\\\", \\\"ue_start_index\\\": \\\"0\\\", \\\"protocolIEs\\\": [{\\\"header.message_type\\\": \\\"{string:eq}(35)\\\", \\\"header.teid\\\": \\\"save(GTPV2C_HDR_DL_TEID_MME_S11)\\\", \\\"header.seq_number\\\": \\\"save(GTPV2C_HDR_SEQ_NO_S11)\\\", \\\"cause.cause_value\\\": \\\"{string:eq}(16)\\\", \\\"cause.cause_flags\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_modified.0.eps_bearer_id\\\": \\\"{string:eq}(5)\\\", \\\"bearer_contexts_modified.0.cause.cause_value\\\": \\\"{string:eq}(16)\\\", \\\"bearer_contexts_modified.0.cause.cause_flags\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_modified.0.s1_sgw.fq_teid.ipv4_flag\\\": \\\"{string:eq}(1)\\\", \\\"bearer_contexts_modified.0.s1_sgw.fq_teid.ipv6_flag\\\": \\\"{string:eq}(0)\\\", \\\"bearer_contexts_modified.0.s1_sgw.fq_teid.interface_type\\\": \\\"{string:eq}(1)\\\", \\\"bearer_contexts_modified.0.s1_sgw.fq_teid.teid\\\": \\\"save(S1_U_SGW_GTPU_UL_TEID)\\\", \\\"bearer_contexts_modified.0.s1_sgw.fq_teid.ipv4_add\\\": \\\"save(S1_U_SGW_GTPU_UL_IP)\\\", \\\"bearer_contexts_modified.0.charging_id\\\": \\\"{string:eq}(111)\\\", \\\"bearer_contexts_modified.0.bearer_flags\\\": \\\"{string:eq}(1)\\\", \\\"sgw.fq_csid.node_id_type\\\": \\\"{string:eq}(0)\\\", \\\"sgw.fq_csid.node_id\\\": \\\"{string:eq}(192.168.40.76)\\\", \\\"sgw.fq_csid.csid\\\": \\\"{string:eq}(2)\\\", \\\"indication\\\": \\\"{string:eq}(0x801801)\\\", \\\"bearer_contexts_modified.0\\\": \\\"present\\\"}]}\\n2023-07-17 07:34:36,702:rmq_service.py:235:INFO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n2023-07-17 07:34:36,702:rmq_service.py:236:INFO abot_mme1_response_admin Queue Response MSG: { \\\"json_parsed\\\" : \\\"true\\\", \\\"end\\\" : \\\"true\\\"}\\n2023-07-17 07:34:36,702:epc_service.py:67:INFO DIRECTION: RESPONSE\\n2023-07-17 07:34:36,703:epc_service.py:69:INFO ENDPOINT: MME1,SGW1\\n2023-07-17 07:34:36,703:epc_service.py:71:INFO MESSAGE NAME: GTPV2C_MODIFY_BEARER_RESPONSE\\n2023-07-17 07:34:36,703:epc_service.py:75:INFO STATUS: SUCCESS\\n2023-07-17 07:34:36,704:epc.py:36:INFO LOAD switch is OFF on feature file\\n2023-07-17 07:34:36,713:environment.py:288:DEBUG After scenario - active_outline:None, status:Status.passed, failed:False, stdout_capture:, stderr_capture:\\n2023-07-17 07:34:36,713:logger.py:176:INFO **********************************************************************************************************************\\n2023-07-17 07:34:36,727:logger_service.py:121:INFO Number of subscribers, finished execution on node, enodeb1 : 1\\n2023-07-17 07:34:36,727:logger_service.py:121:INFO Number of subscribers, finished execution on node, hss1 : 1\\n2023-07-17 07:34:36,727:logger_service.py:121:INFO Number of subscribers, finished execution on node, mme1 : 1\\n2023-07-17 07:34:36,727:logger_service.py:121:INFO Number of subscribers, finished execution on node, pcrf1 : 1\\n2023-07-17 07:34:36,727:logger_service.py:121:INFO Number of subscribers, finished execution on node, pgw1 : 1\\n2023-07-17 07:34:36,727:logger_service.py:121:INFO Number of subscribers, finished execution on node, sgw1 : 1\\n2023-07-17 07:34:36,728:logger.py:176:INFO ----------------------------------------------------------------------------------------------------------------------\\n2023-07-17 07:34:36,728:teardown.py:29:INFO Execute cleanup steps BEGIN...\\n2023-07-17 07:34:36,729:teardown.py:36:INFO Execute cleanup steps END...\\n2023-07-17 07:34:36,729:environment.py:209:DEBUG After feature - active_outline:None, status:Status.passed, failed:False, stdout_capture:, stderr_capture:\\n2023-07-17 07:34:36,729:logger.py:176:INFO **********************************************************************************************************************\\n2023-07-17 07:34:38,755:packet_processor.py:93:DEBUG Stopping packet capture for node[HSS1]\\n2023-07-17 07:34:40,755:packet_processor.py:121:INFO Stopping packet capture with command: ps aux | grep \\\"Initial_Attach\\\" | grep tcpdump | awk '{print $2}' | xargs kill\\n2023-07-17 07:34:42,823:packet_processor.py:327:DEBUG ['sudo', 'mergecap', '-w', '/etc/rebaca-test-suite/log/admin/Initial_Attach_merged.pcap', '/etc/rebaca-test-suite/log/admin/Initial_Attach_17Jul2023-073426AM-UTC.pcap']\\n2023-07-17 07:34:42,854:packet_processor.py:330:DEBUG ['sudo', 'mv', '/etc/rebaca-test-suite/log/admin/Initial_Attach_merged.pcap', '/etc/rebaca-test-suite/log/admin/Initial_Attach_17Jul2023-073426AM-UTC.pcap']\\n2023-07-17 07:34:42,868:packet_processor.py:333:DEBUG ['sudo', 'rm', '-rf', '/etc/rebaca-test-suite/log/admin/Initial_Attach_merged.pcap']\\n2023-07-17 07:34:42,884:logger_service.py:34:DEBUG Moving pcap file(s) after execution - looking for prefix:Initial_Attach\\n2023-07-17 07:34:42,884:logger_service.py:39:DEBUG Filename:[Initial_Attach_17Jul2023-073426AM-UTC.pcap], base_cache.pcap_filename:[Initial_Attach_17Jul2023-073426AM-UTC.pcap]\\n2023-07-17 07:34:42,884:logger_service.py:48:DEBUG Moving pcap file from [/etc/rebaca-test-suite/log/admin/Initial_Attach_17Jul2023-073426AM-UTC.pcap] to [/etc/rebaca-test-suite/log/admin/initial_attach/packet-captures/abot-packets/]\\n2023-07-17 07:34:42,885:rmq_service.py:384:DEBUG message ---> {\\\"opcode\\\":\\\"dbsync\\\",\\\"Initial_Attach.feature\\\":\\\"completed\\\",\\\"build_id\\\":\\\"default-build\\\",\\\"ABot_UID\\\":\\\"b685f4f2-1f36-11ee-9cf8-000c2948b834\\\",\\\"mongodb_url\\\":\\\"mongodb://abot:abot@192.168.40.76:27017\\\",\\\"ABOT_ExecutionID\\\":\\\"16895792609652\\\",\\\"ABot_User_Id\\\":\\\"admin\\\"}, publish_queue ---> abot_analytics_request, routing_key ---> abot_analytics_request_key\\n2023-07-17 07:34:47,886:prometheus_service.py:194:DEBUG In deinit_prometheus_config:\\n2023-07-17 07:34:47,886:prometheus_service.py:197:DEBUG Promyml(deinit):{}\\n2023-07-17 07:34:47,886:prometheus_service.py:126:DEBUG Deleting Prometheus config file:/etc/rebaca-test-suite/prom_config/prom_targets_admin.json\\n2023-07-17 07:34:47,886:rmq_service.py:452:INFO Terminating process HSS1 ...\\n2023-07-17 07:34:47,887:daemon_processor.py:94:INFO Terminating process HSS1...[NOT Acknowledged]\\n2023-07-17 07:34:47,887:daemon_processor.py:108:INFO Terminating process HSS1...[Killed]\\n2023-07-17 07:34:47,887:rmq_service.py:452:INFO Terminating process PGW1 ...\\n2023-07-17 07:34:47,887:daemon_processor.py:94:INFO Terminating process PGW1...[NOT Acknowledged]\\n2023-07-17 07:34:47,888:daemon_processor.py:108:INFO Terminating process PGW1...[Killed]\\n2023-07-17 07:34:47,888:rmq_service.py:452:INFO Terminating process SGW1 ...\\n2023-07-17 07:34:47,888:daemon_processor.py:94:INFO Terminating process SGW1...[NOT Acknowledged]\\n2023-07-17 07:34:47,888:daemon_processor.py:108:INFO Terminating process SGW1...[Killed]\\n2023-07-17 07:34:47,889:rmq_service.py:452:INFO Terminating process MME1 ...\\n2023-07-17 07:34:47,889:daemon_processor.py:94:INFO Terminating process MME1...[NOT Acknowledged]\\n2023-07-17 07:34:47,889:daemon_processor.py:108:INFO Terminating process MME1...[Killed]\\n2023-07-17 07:34:47,889:rmq_service.py:452:INFO Terminating process PCRF1 ...\\n2023-07-17 07:34:47,890:daemon_processor.py:94:INFO Terminating process PCRF1...[NOT Acknowledged]\\n2023-07-17 07:34:47,890:daemon_processor.py:108:INFO Terminating process PCRF1...[Killed]\\n2023-07-17 07:34:47,890:rmq_service.py:452:INFO Terminating process eNodeB1 ...\\n2023-07-17 07:34:47,890:daemon_processor.py:94:INFO Terminating process eNodeB1...[NOT Acknowledged]\\n2023-07-17 07:34:47,891:daemon_processor.py:108:INFO Terminating process eNodeB1...[Killed]\\n2023-07-17 07:34:47,931:rmq_service.py:522:DEBUG Queue abot_hss1_response_admin  ...[DELETED]\\n2023-07-17 07:34:47,959:rmq_service.py:522:DEBUG Queue abot_pgw1_response_admin  ...[DELETED]\\n2023-07-17 07:34:47,961:rmq_service.py:522:DEBUG Queue abot_sgw1_response_admin  ...[DELETED]\\n2023-07-17 07:34:47,964:rmq_service.py:522:DEBUG Queue abot_mme1_response_admin  ...[DELETED]\\n2023-07-17 07:34:47,965:rmq_service.py:522:DEBUG Queue abot_pcrf1_response_admin  ...[DELETED]\\n2023-07-17 07:34:47,975:rmq_service.py:522:DEBUG Queue abot_enodeb1_response_admin  ...[DELETED]\\n2023-07-17 07:34:47,985:mongo_service.py:333:DEBUG Dropping collection : abot_alternate_config \\n2023-07-17 07:34:47,988:book_keeper_service.py:248:DEBUG mongo_deinit_after_feature: dropping collections\\n2023-07-17 07:34:47,988:mongo_service.py:333:DEBUG Dropping collection : abot_socket_register \\n2023-07-17 07:34:47,998:mongo_service.py:333:DEBUG Dropping collection : abot_prometheus_target_ports \\n2023-07-17 07:34:48,000:mongo_service.py:333:DEBUG Dropping collection : abot_node_call_flow_messages \\n2023-07-17 07:34:48,004:book_keeper_service.py:230:INFO abot_deinit_after_feature: Attempting to lock usedPorts file\\n2023-07-17 07:34:48,004:book_keeper_service.py:235:DEBUG abot_deinit_after_feature: Acquired lock for usedPorts file\\n2023-07-17 07:34:48,065:base_service.py:556:DEBUG Artifact Collection - Copying TestAutomationLog.log to /etc/rebaca-test-suite/log/admin//initial_attach/logs/\\n2023-07-17 07:34:48,078:environment.py:81:INFO Entering after_all handler\\n2023-07-17 07:34:48,086:ploop_utils.py:47:INFO Loop grammar context is empty ... \\n2023-07-17 07:34:48,087:logger.py:176:INFO **********************************************************************************************************************\\n2023-07-17 07:34:48,087:k8s_service.py:875:INFO K8S Cluster not configured\\n2023-07-17 07:34:48,088:environment.py:107:INFO ABot bringing down SSH Connections from ABotConfig.properties\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  ABOT ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  eNodeB1 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  eNodeB2 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  gNodeB1 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  gNodeB2 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  MME1 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  MME2 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  AMF1 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  AMF2 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  AUSF1 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  AUSF2 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  UDM1 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  UDM2 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  UDR1 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  SMF1 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  SMF2 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  UPF1 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  UPF2 ...[DISABLED]\\n2023-07-17 07:34:48,088:ssh_service.py:53:INFO SSH -->  UPF3 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  PCF1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  PCF2 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  NSSF1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  NRF1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  CBCF1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  CIOT_GW1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  SGW1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  SGW2 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  PGW1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  PGW2 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  HSS1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  PCRF1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  VPCRF1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  AF1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  OCS1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  OFCS1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  SGWC1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  SGWC2 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  SGWU1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  SGWU2 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  PGWC1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  PGWC2 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  PGWU1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  PGWU2 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  SPGWC_SMF1 ...[DISABLED]\\n2023-07-17 07:34:48,089:ssh_service.py:53:INFO SSH -->  SPGWU_UPF1 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  PGWC_SMF1 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  PGWU_UPF1 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  HSS_UDM1 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  PCRF_PCF1 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  NEF1 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  GNB_CU_CP1 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  GNB_CU_UP1 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  GNB_CU_CP2 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  GNB_CU_UP2 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  GNB_DU1 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  GNB_DU2 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  NEAR_RT_RIC1 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  GNB_CU_CP_FSM1 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  GNB_CU_UP_FSM1 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->  GNB_DU_FSM1 ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:53:INFO SSH -->   ...[DISABLED]\\n2023-07-17 07:34:48,090:ssh_service.py:108:INFO SSH --> TRAFFIC_GEN_1 ...[DISCONNECTED]\\n2023-07-17 07:34:48,090:ssh_service.py:108:INFO SSH --> IPERF_SERVER ...[DISCONNECTED]\\n2023-07-17 07:34:48,090:environment.py:109:INFO ABot bringing down TEST BED from ABotConfig.properties\\n2023-07-17 07:34:48,106:environment.py:119:INFO Test Completed at 2023-07-17 07:34:48.106071\\n2023-07-17 07:34:48,106:environment.py:120:INFO Time Elapsed :28.165525436401367\\n2023-07-17 07:34:48,114:book_keeper_service.py:440:DEBUG In abot_manage_logs_after_feature\\n\",\n        \"keywords\": \"\",\n        \"file_size\": \"166.63 KB\",\n        \"highest_ie_level\": 0\n    }\n}"
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "api_ep",
      "value": "192.168.40.97:5000"
    },
    {
      "key": "abot_endpoint",
      "value": "192.168.40.76"
    },
    {
      "key": "token",
      "value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY4OTM1MDQyNSwianRpIjoiZmZiOTM5M2MtYmMzOS00OGRkLWJkM2QtYzU5YjUzODM2NWIzIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6eyJlbWFpbCI6ImFkbWluIiwicGFzc3dvcmQiOiJhZG1pbjEyMzQiLCJleHBpcmVzIjpmYWxzZX0sIm5iZiI6MTY4OTM1MDQyNX0.XQIA0GN7YcCzTCQyFoJX8m8cjw2I6HkoNfGZOaOm-zI"
    },
    {
      "key": "user_id",
      "value": "admin"
    }
  ]
}